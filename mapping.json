[   
    {
        "name": "Anomaly_Detection",
        "image": "https://cdn.siberian.dev/code-gen/anomaly_detection_blue.png",
        "description": "technique of identifying rare events or observations which can raise suspicions by being statistically different from the rest of the observations.",
        "models": [
            {
                "name": "Angle_Based_Outlier_Detector",
                "models": [
                    {
                        "name": "ABOD.ipynb",
                        "title": "Angle Based Outlier Detection",
                        "description": "Anomaly detection using the Angle Based Outlier Detector(ABOD) Algorithm implemented using the pyod library in python.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Angle_Based_Outlier_Detector/ABOD.ipynb",
                        "keywords": "abod,anomaly detection, angle based detection outlier,pyod,pyod library,lof,local outlier factor,ai template",
                        "display_url": "https://siberian.dev/anomaly-detection/abod"
                    },
                    {
                        "name": "ABOD_MinMaxScaler.ipynb",
                        "title": "Angle-Based Outlier Detection With MinMaxScaler",
                        "description": "Angle based Outlier Detection (ABOD) Algorithm for Anomaly Detection along with MinMaxScaler as the Data scaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Angle_Based_Outlier_Detector/ABOD_MinMaxScaler.ipynb",
                        "keywords": "abod,anomaly detection, angle based detection outlier,pyod,pyod library,lof,local outlier factor,minmaxscaler,normalization,ai template",
                        "display_url": "https://siberian.dev/anomaly-detection/abod-minmaxscaler"
                    },
                    {
                        "name": "ABOD_RobustScaler.ipynb",
                        "title": "Angle-Based Outlier Detection With RobustScaler",
                        "description": "Anomaly/Outlier Detection using the Angle based Outlier Detector(ABOD) Algorithm. The implementation also uses Robust Scaler from the sci-kit learn library as the feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Angle_Based_Outlier_Detector/ABOD_RobustScaler.ipynb",
                        "keywords": "abod,anomaly detection, angle based detection outlier,pyod,pyod library,lof,local outlier factor,robustscaler,ai template",
                        "display_url": "https://siberian.dev/anomaly-detection/abod-robustscaler"
                    }
                ]
            },
            {
                "name": "Auto_Encoder",
                "models": [
                    {
                        "name": "AutoEncoder.ipynb",
                        "title": "Autoencoder",
                        "description": "Anomaly detection using the Auto Encoder Algorithm. The pyod library's python implementation of Auto Encoder uses Neural Network  Architecture for Anomaly or outlier detection.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Auto_Encoder/AutoEncoder.ipynb",
                        "keywords": "autoencoder,pyod,artifical neural network,autoencoder keras,autoencoder alogorithm,autoecnoder neural network,ai template",
                        "display_url": "https://siberian.dev/anomaly-detection/autoencoder"
                    },
                    {
                        "name": "AutoEncoder_MaxAbsScaler.ipynb",
                        "title": "Autoencoder With MaxAbsScaler",
                        "description": "Anomaly detection/outlier analysis using the Auto Encoder Algorithm, along with data rescaling using MaxAbsScaler. MaxAbsScaler scale each feature by its maximum absolute value.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Auto_Encoder/AutoEncoder_MaxAbsScaler.ipynb",
                        "keywords": "autoencoder,pyod,artifical neural network,autoencoder keras,autoencoder alogorithm,autoecnoder neural network,maxabsscaler,ai template",
                        "display_url": "https://siberian.dev/anomaly-detection/autoencoder-maxabsscaler"
                    },
                    {
                        "name": "AutoEncoder_StandardScaler.ipynb",
                        "title": "Autoencoder With StandardScaler",
                        "description": "Outlier Analysis or anomaly detection using the Auto Encoder Architecture . This template utilizes Auto Encoder along with data rescaling using StandardScaler from the sci-kit learn library.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Auto_Encoder/AutoEncoder_StandardScaler.ipynb",
                        "keywords": "autoencoder,pyod,artifical neural network,autoencoder keras,autoencoder alogorithm,autoecnoder neural network,standardscaler,ai template",
                        "display_url": "https://siberian.dev/anomaly-detection/autoencoder-standardscaler"
                    }
                ]
            },
            {
                "name": "Clustering_Based_Local_Outlier_Factor",
                "models": [
                    {
                        "name": "CBLOF.ipynb",
                        "title": "Clustering Based Local Outlier Factor",
                        "description": "Anomaly detection or outlier analysis using the Clustering Based Local Outlier Factor(CBLOF) Algorithm implemented in pyod library for python  .",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Clustering_Based_Local_Outlier_Factor/CBLOF.ipynb",
                        "keywords": "cblof,pyod library,local outlier factor,python,sklearn library,ai template",
                        "display_url": "https://siberian.dev/anomaly-detection/clustering-based-outlier-detection"
                    },
                    {
                        "name": "CBLOF_MinMaxScaler.ipynb",
                        "title": "Clustering Based Local Outlier Factor With MinMaxScaler",
                        "description": "Outlier analysis or Detection using the CBLOF(Clustering Based Local Outlier Factor Algorithm) and feature rescaling technique using MinMaxScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Clustering_Based_Local_Outlier_Factor/CBLOF_MinMaxScaler.ipynb",
                        "keywords": "cblof,pyod library,local outlier factor,python,sklearn library,minmaxscaler,ai template",
                        "display_url": "https://siberian.dev/anomaly-detection/clustering-based-outlier-detection-minmaxscaler"
                    },
                    {
                        "name": "CBLOF_RobustScaler.ipynb",
                        "title": "Clustering Based Local Outlier Factor With RobustScaler",
                        "description": "Anomaly detection or outlier analysis using the Clustering Based Local Outlier Factor(CBLOF) Algorithm. The demonstration also illustrates data rescaling using RobustScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Clustering_Based_Local_Outlier_Factor/CBLOF_RobustScaler.ipynb",
                        "keywords": "cblof,pyod library,local outlier factor,python,sklearn library,robustscaler,ai template",
                        "display_url": "https://siberian.dev/anomaly-detection/clustering-based-outlier-detection-robustscaler"
                    }
                ]
            },
            {
                "name": "Copula_Based_Outlier_Detector",
                "models": [
                    {
                        "name": "COPOD.ipynb",
                        "title": "Copula Based Outlier Detection",
                        "description": "Anomaly detection or outlier analysis using the Copula Based Outlier Detector(COPOD) Algorithm. COPOD is a parameter-free, highly interpretable outlier detection algorithm based on empirical copula models.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Copula_Based_Outlier_Detector/COPOD.ipynb",
                        "keywords": "copod,pyod,copula,ai template, copula model,python",
                        "display_url": "https://siberian.dev/anomaly-detection/copod"
                    },
                    {
                        "name": "COPOD_MaxAbsScaler.ipynb",
                        "title": "Copula Based Outlier Detection With MaxAbsScaler",
                        "description": "Anomaly detection/outlier analysis using the Copula Based Outlier Detector Algorithm based on empirical copula models. This python implementation utilizes the data rescaling technique using the MaxAbsScaler method from the sci-kit learn.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Copula_Based_Outlier_Detector/COPOD_MaxAbsScaler.ipynb",
                        "keywords": "copod,pyod,copula,ai template, copula model,python,maxabsscaler,pyod library",
                        "display_url": "https://siberian.dev/anomaly-detection/copod-maxabsscaler"
                    },
                    {
                        "name": "COPOD_RobustScaler.ipynb",
                        "title": "Copula Based Outlier Detection With RobustScaler",
                        "description": "Anomaly detection/outlier analysis using the Copula Based Outlier Detector(COPOD) Algorithm implemented using the pyod library along with feature scaling using RobustScalar, which scale features using statistics that are robust to outliers.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Copula_Based_Outlier_Detector/COPOD_RobustScaler.ipynb",
                        "keywords": "copod,pyod,copula,ai template, copula model,python,roubustscaler,pyod library",
                        "display_url": "https://siberian.dev/anomaly-detection/copod-robustscaler"
                    },
                    {
                        "name": "COPOD_StandardScaler.ipynb",
                        "title": "Copula Based Outlier Detection With StandardScaler",
                        "description": "Anomaly detection or outlier analysis using the Copula Based Outlier Detector(COPOD) Algorithm implementation of the pyod library. Along with it includes the feature scaling technique StandardScaler for data rescaling.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Copula_Based_Outlier_Detector/COPOD_StandardScaler.ipynb",
                        "keywords": "copod,pyod,copula,ai template, copula model,python,standardscaler,pyod library",
                        "display_url": "https://siberian.dev/anomaly-detection/copod-standardscaler"
                    }
                ]
            },
            {
                "name": "Deep_One_Class_Classification",
                "models": [
                    {
                        "name": "DeepSVDD.ipynb",
                        "title": "Deep One-Class Classification",
                        "description": "Anomaly detection using the DeepSVDD Algorithm implemented using the PyOd library. Deep One-Class Classifier with AutoEncoder (AE) is a type of neural network for learning useful data representations in an unsupervised way.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Deep_One_Class_Classification/DeepSVDD.ipynb",
                        "keywords": "deepsvdd,deep one-class classification,one-class classification,one-class svm,one-class neura network",
                        "display_url": "https://siberian.dev/anomaly-detection/deep-one-class-classification"
                    },
                    {
                        "name": "DeepSVDD_MaxAbsScaler.ipynb",
                        "title": "Deep One-Class Classification With MaxAbsScaler",
                        "description": "Anomaly detection using the DeepSVDD Algorithm implementation of the PyOd library. DeepSVDD trains a neural network while minimizing the volume of a hypersphere that encloses the network representations of the data, forcing the network to extract the common factors of variation. Along with the Data rescaling technique, MaxAbsScaler from sci-kit learn.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Deep_One_Class_Classification/DeepSVDD_MaxAbsScaler.ipynb",
                        "keywords": "deepsvdd,deep one-class classification,one-class classification,one-class svm,one-class neura network,maxabsscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/deep-one-class-classification-maxabsscaler"
                    },
                    {
                        "name": "DeepSVDD_MinMaxScaler.ipynb",
                        "title": "Deep One-Class Classification With MinMaxScaler",
                        "description": "Anomaly detection/outlier analysis using the Deep One-Class Classification. This template utilizes feature scaling using MinMaxScaler. DeepSVDD detects outlying objects in the data by calculating the distance from the center.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Deep_One_Class_Classification/DeepSVDD_MinMaxScaler.ipynb",
                        "keywords": "deepsvdd,deep one-class classification,one-class classification,one-class svm,one-class neura network,minmaxscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/deep-one-class-classification-minmaxscaler"
                    },
                    {
                        "name": "DeepSVDD_RobustScaler.ipynb",
                        "title": "Deep One-Class Classification With RobustScaler",
                        "description": "Anomaly detection using the DeepSVDD Algorithm implemented using the PyOd library, along with the data rescaling technique RobustScaler implemented in the sci-kit learn library.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Deep_One_Class_Classification/DeepSVDD_RobustScaler.ipynb",
                        "keywords": "deepsvdd,deep one-class classification,one-class classification,one-class svm,one-class neura network,robustscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/deep-one-class-classification-robustscaler"
                    },
                    {
                        "name": "DeepSVDD_StandardScaler.ipynb",
                        "title": "Deep One-Class Classification With StandardScaler",
                        "description": "Anomaly detection/outlier analysis using the Deep One-Class Classification Algorithm implemented using PyOd library and feature scaling using StandardScaler, which Standardize features by removing the mean and scaling to unit variance.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Deep_One_Class_Classification/DeepSVDD_StandardScaler.ipynb",
                        "keywords": "deepsvdd,deep one-class classification,one-class classification,one-class svm,one-class neura network,standardscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/deep-one-class-classification-standardscaler"
                    }
                ]
            },
            {
                "name": "Histogram_Based_Outlier_Detector",
                "models": [
                    {
                        "name": "HBOS.ipynb",
                        "title": "Histogram Based Outlier Detection",
                        "description": "Anomaly detection/outlier detection using the Histogram Based Outlier Detector(HBOS) Algorithm implemented using the pyod library in python.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Histogram_Based_Outlier_Detector/HBOS.ipynb",
                        "keywords": "histogram based outlier detection,anomaly detetcion,histogram outlier,hbos algorithm,ai template,pyod library",
                        "display_url": "https://siberian.dev/anomaly-detection/histogram-based-outlier-detection"
                    },
                    {
                        "name": "HBOS_MaxAbsScaler.ipynb",
                        "title": "Histogram Based Outlier Detection With MaxAbsScaler",
                        "description": "Anomaly detection using the Histogram Based Outlier Detector(HBOS) Algorithm implemented in the pyod library along with MaxAbsScaler as a data rescaling technique from sklearn.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Histogram_Based_Outlier_Detector/HBOS_MaxAbsScaler.ipynb",
                        "keywords": "histogram based outlier detection,anomaly detetcion,histogram outlier,hbos algorithm,ai template,maxabsscaler,pyod library",
                        "display_url": "https://siberian.dev/anomaly-detection/histogram-based-outlier-detection-maxabsscaler"
                    },
                    {
                        "name": "HBOS_RobustScaler.ipynb",
                        "title": "Histogram Based Outlier Detection With RobustScaler",
                        "description": "Anomaly detection/outlier analysis using the HBOS Algorithm implemented using the pyod library along with RobustScaler as a feature scaling technique.HBOS assumes feature independence and calculates the degree of outlyingness by building histograms.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Histogram_Based_Outlier_Detector/HBOS_RobustScaler.ipynb",
                        "keywords": "histogram based outlier detection,anomaly detetcion,histogram outlier,hbos algorithm,robust scaler,ai template",
                        "display_url": "https://siberian.dev/anomaly-detection/histogram-based-outlier-detection-robustscaler"
                    },
                    {
                        "name": "HBOS_StandardScaler.ipynb",
                        "title": "Histogram Based Outlier Detection With StandardScaler",
                        "description": "Outlier detection using the HBOS(Histogram Based Outlier Detection) Algorithm from the pyod library in python along with StandardScaler as a feature scaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Histogram_Based_Outlier_Detector/HBOS_StandardScaler.ipynb",
                        "keywords": "histogram based outlier detection,anomaly detetcion,histogram outlier,hbos algorithm,standard scaler,ai template",
                        "display_url": "https://siberian.dev/anomaly-detection/histogram-based-outlier-detection-standardscaler"
                    }
                ]
            },
            {
                "name": "Isolation_Forest",
                "models": [
                    {
                        "name": "IsolationForest.ipynb",
                        "title": "Isolation Forest",
                        "description": "Anomaly detection/outlier analysis using the Isolation Forest Algorithm. The IsolationForest isolates observations by randomly selecting a feature and then randomly selecting a split value between the maximum and minimum values of the selected feature.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Isolation_Forest/IsolationForest.ipynb",
                        "keywords": "isolation forest,isolation forest template,anomaly detection,isolation forest algorithm,pyod library",
                        "display_url": "https://siberian.dev/anomaly-detection/isolation-forest"
                    },
                    {
                        "name": "IsolationForest_MaxAbsScaler.ipynb",
                        "title": "Isolation Forest With MaxAbsScaler",
                        "description": "Anomaly detection using the Isolation Forest Algorithm. This template utilizes the pyod library for isolation forest class along with feature scaling using MaxAbsScaler.The Code utilizes IForest implementation from the pyod library, a wrapper of sci-kit-learn Isolation Forest with more functionalities.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Isolation_Forest/IsolationForest_MaxAbsScaler.ipynb",
                        "keywords": "isolation forest,isolation forest template,anomaly detection,isolation forest algorithm,pyod library,maxabsscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/isolation-forest-maxabsscaler"
                    },
                    {
                        "name": "IsolationForest_MinMaxScaler.ipynb",
                        "title": "Isolation Forest With MinMaxScaler",
                        "description": "Anomaly Detection using the Isolation Forest Algorithm and MinMaxScaler for python data-rescaling operations. The MinMaxScaler transforms features by scaling each feature to a given range.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Isolation_Forest/IsolationForest_MinMaxScaler.ipynb",
                        "keywords": "isolation forest,isolation forest template,anomaly detection,isolation forest algorithm,pyod library,minmaxscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/isolation-forest-minmaxscaler"
                    },
                    {
                        "name": "IsolationForest_RobustScaler.ipynb",
                        "title": "Isolation Forest With RobustScaler",
                        "description": "Anomaly detection using the Isolation Forest Algorithm. This template utilizes the IForest class from the pyod library and features scaling using sci-kit learns RobustScalar function.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Isolation_Forest/IsolationForest_RobustScaler.ipynb",
                        "keywords": "isolation forest,isolation forest template,anomaly detection,isolation forest algorithm,pyod library,robustscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/isolation-forest-robustscaler"
                    },
                    {
                        "name": "IsolationForest_StandardScaler.ipynb",
                        "title": "Isolation Forest With StandardScaler",
                        "description": "Anomaly detection using the Isolation Forest Algorithm. This template utilizes IForest implementation from the pyod library along with feature rescaling using StandardScaler. The IsolationForest is based on ExtraTreeRegressor in the sci-kit learns library, which is used in pyod by wrapping the method with more functionality.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Isolation_Forest/IsolationForest_StandardScaler.ipynb",
                        "keywords": "isolation forest,isolation forest template,anomaly detection,isolation forest algorithm,pyod library,standardscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/isolation-forest-standardscaler"
                    }
                ]
            },
            {
                "name": "k-Nearest_Neighbors_Detector",
                "models": [
                    {
                        "name": "kNN.ipynb",
                        "title": "k-Nearest Neighbors Detection",
                        "description": "Anomaly detection/outlier analysis using the kNN Algorithm. For an observation, its distance to its kth nearest neighbor can be viewed as the outlying score. It can also be viewed as a way to measure density.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/k-Nearest_Neighbors_Detector/kNN.ipynb",
                        "keywords": "k-nearest neighbors detection,knn,knn algorithm,knn sklearn,knn anomaly detection",
                        "display_url": "https://siberian.dev/anomaly-detection/knn-detection"
                    },
                    {
                        "name": "kNN_MinMaxScaler.ipynb",
                        "title": "k-Nearest Neighbors Detection With MinMaxScaler",
                        "description": "Anomaly detection/outlier analysis using the kNN Algorithm, along with feature scaling using MinMaxScaler. The algorithm assumes the similarity between the new case and existing cases and puts the new one into the category that is most similar to the existing categories.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/k-Nearest_Neighbors_Detector/kNN_MinMaxScaler.ipynb",
                        "keywords": "k-nearest neighbors detection,knn,knn algorithm,knn sklearn,knn anomaly detection,minmaxscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/knn-detection-minmaxscaler"
                    },
                    {
                        "name": "kNN_StandardScaler.ipynb",
                        "title": "k-Nearest Neighbors Detection With StandardScaler",
                        "description": "Anomaly detection using the kNN Algorithm, along with a data rescaling technique using the sci-kit learn's StandardScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/k-Nearest_Neighbors_Detector/kNN_StandardScaler.ipynb",
                        "keywords": "k-nearest neighbors detection,knn,knn algorithm,knn sklearn,knn anomaly detection,standard scaler",
                        "display_url": "https://siberian.dev/anomaly-detection/knn-detection-standardscaler"
                    }
                ]
            },
            {
                "name": "Lightweight_On_line_Detector_of_Anomalies",
                "models": [
                    {
                        "name": "LODA.ipynb",
                        "title": "Lightweight On-lIne Detector Of Anomalies",
                        "description": "Anomaly detection/outlier analysis using the Lightweight On-line Detector Algorithm implemented using the pyod library. LODA can identify features in which the scrutinized sample deviates from the majority. This capability is optimal when the goal is to find out what has caused the anomaly.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Lightweight_On_line_Detector_of_Anomalies/LODA.ipynb",
                        "keywords": "lightweight on-line detector,loda, pyod library,anomaly detection,classification,",
                        "display_url": "https://siberian.dev/anomaly-detection/loda"
                    },
                    {
                        "name": "LODA_MaxAbsScaler.ipynb",
                        "title": "Lightweight On-lIne Detector Of Anomalies With MaxAbsScaler",
                        "description": "The ability of the Lightweight On-line Detector(LODA) Algorithm implemented using the pyod library for Anomaly detection/outlier analysis and includes feature rescaling using MaxAbsScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Lightweight_On_line_Detector_of_Anomalies/LODA_MaxAbsScaler.ipynb",
                        "keywords": "lightweight on-line detector,loda, pyod library,anomaly detection,classification,maxabsscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/loda-maxabsscaler"
                    },
                    {
                        "name": "LODA_MinMaxScaler.ipynb",
                        "title": "Lightweight On-lIne Detector Of Anomalies With MinMaxScaler",
                        "description": "Anomaly detection using the Lightweight On-line Detector(LODA) Algorithm implemented using the pyod library. The implementation utilizes a data engineering technique named data rescaling using MinMaxScaler to scale down data.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Lightweight_On_line_Detector_of_Anomalies/LODA_MinMaxScaler.ipynb",
                        "keywords": "lightweight on-line detector,loda, pyod library,anomaly detection,classification,minmaxscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/loda-minmaxscaler"
                    },
                    {
                        "name": "LODA_StandardScaler.ipynb",
                        "title": "Lightweight On-lIne Detector Of Anomalies With StandardScaler",
                        "description": "Anomaly detection/outlier analysis using the Lightweight On-line Detector(LODA) Algorithm implemented using the pyod library and feature scaling using StandardScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Lightweight_On_line_Detector_of_Anomalies/LODA_StandardScaler.ipynb",
                        "keywords": "lightweight on-line detector,loda, pyod library,anomaly detection,classification,standardscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/loda-standardscaler"
                    }
                ]
            },
            {
                "name": "Local_Outlier_Factor",
                "models": [
                    {
                        "name": "LOF.ipynb",
                        "title": "Local Outlier Factor",
                        "description": "Anomaly detection/outlier analysis using the Local Outlier Factor Algorithm. This template utilizes LOF implementation from the pyod library. The anomaly score of each sample is called the Local Outlier Factor. It measures the local deviation of the density of a given data concerning its neighbors.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Local_Outlier_Factor/LOF.ipynb",
                        "keywords": "local outlier factor,lof,local outlier factor sklearn,lof sklearn,anomaly detection,pyod library",
                        "display_url": "https://siberian.dev/anomaly-detection/local-outlier-factor"
                    },
                    {
                        "name": "LOF_StandardScaler.ipynb",
                        "title": "Local Outlier Factor With StandardScaler",
                        "description": "Anomaly detection using the Local Outlier Factor Algorithm. The template utilizes the data rescaling technique StandardScaler for data normalization. Pyod implementation of LOF is a wrapper of sci-kit-learn LOF Class with more functionalities.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Local_Outlier_Factor/LOF_StandardScaler.ipynb",
                        "keywords": "local outlier factor,lof,local outlier factor sklearn,lof sklearn,anomaly detection,pyod library,standard scaler",
                        "display_url": "https://siberian.dev/anomaly-detection/local-outlier-factor-standardscaler"
                    }
                ]
            },
            {
                "name": "Minimum_Covariance_Determinant",
                "models": [
                    {
                        "name": "MCD.ipynb",
                        "title": "Minimum Covariance DetermInant(MCD)",
                        "description": "Anomaly detection/outlier analysis using the Minimum Covariance Determinant(MCD) Algorithm. This template utilizes Minimum Covariance Determinant implementation from the sklearn.covariance library. The Minimum Covariance Determinant covariance estimator is to be applied to Gaussian-distributed data but could still be relevant to data drawn from a unimodal, symmetric distribution.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Minimum_Covariance_Determinant/MCD.ipynb",
                        "keywords": "minimum covariance determinant,mcd,mcd template,gaussian-distributed,mcd algorithm,anomaly detetction",
                        "display_url": "https://siberian.dev/anomaly-detection/minimum-covariance-determinant"
                    },
                    {
                        "name": "MCD_RobustScaler.ipynb",
                        "title": "Minimum Covariance DetermInant (MCD) With RobustScaler",
                        "description": "Anomaly detection using the Minimum Covariance Determinant(MCD) Algorithm. This template utilizes MCD along with feature scaling using RobustScalar from the sci-kit learn library.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Minimum_Covariance_Determinant/MCD_RobustScaler.ipynb",
                        "keywords": "minimum covariance determinant,mcd,mcd template,gaussian-distributed,mcd algorithm,anomaly detetction,robustscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/minimum-covariance-determinant-robustscaler"
                    },
                    {
                        "name": "MCD_StandardScaler.ipynb",
                        "title": "Minimum Covariance DetermInant(MCD) With StandardScaler",
                        "description": "Anomaly detection/outlier analysis using the Minimum Covariance Determinant(MCD) Algorithm. This algorithm is well suited for Detecting outliers in a Gaussian-distributed dataset. This template also employs data rescaling using StandardScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Minimum_Covariance_Determinant/MCD_StandardScaler.ipynb",
                        "keywords": "minimum covariance determinant,mcd,mcd template,gaussian-distributed,mcd algorithm,anomaly detetction,standardscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/minimum-covariance-determinant-standardscaler"
                    }
                ]
            },
            {
                "name": "Multi_Objective_Generative_Adversarial_Active_Learning",
                "models": [
                    {
                        "name": "MO_GAAL_MinMaxScaler.ipynb",
                        "title": "Multi-Objective Generative Adversarial Active LearnIng With MinMaxScaler",
                        "description": "Anomaly detection/outlier analysis using the MO_GAAL Algorithm implemented using the pyod library and feature scaling using MinMaxScaler. MO_GAAL directly generates informative potential outliers to assist the classifier in describing a boundary that can separate outliers.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Multi_Objective_Generative_Adversarial_Active_Learning/MO_GAAL_MinMaxScaler.ipynb",
                        "keywords": "multi-objective genetic algorithm,anomaly detection,minmaxscaler,pyod library",
                        "display_url": "https://siberian.dev/anomaly-detection/multi-objective-generative-adversarial-active-learning-minmaxscaler"
                    },
                    {
                        "name": "MO_GAAL_RobustScaler.ipynb",
                        "title": "Multi-Objective Generative Adversarial Active LearnIng With RobustScaler",
                        "description": "Anomaly detection/outlier analysis using the MO_GAAL Algorithm implemented using the pyod library and feature scaling using RobustScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Multi_Objective_Generative_Adversarial_Active_Learning/MO_GAAL_RobustScaler.ipynb",
                        "keywords": "multi-objective genetic algorithm,anomaly detection,pyod library,robustscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/multi-objective-generative-adversarial-active-learning-robustscaler"
                    }
                ]
            },
            {
                "name": "One_class_SVM_detector",
                "models": [
                    {
                        "name": "OCSVM.ipynb",
                        "title": "One-Class SVM Detector",
                        "description": "Anomaly detection/outlier analysis using the OCSVM (One-class SVM detector)Algorithm implemented using the pyod library. It is a wrapper of sci-kit-learn one-class SVM Class with more functionalities.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/One_class_SVM_detector/OCSVM.ipynb",
                        "keywords": "one-class svm,one-class svm python, anomaly detection,one-class svm algorithm,pyod library,support vector machine",
                        "display_url": "https://siberian.dev/anomaly-detection/one-class-svm"
                    },
                    {
                        "name": "OCSVM_MinMaxScaler.ipynb",
                        "title": "One-Class SVM Detector With MinMaxScaler",
                        "description": "Anomaly detection using the OCSVM(One-class SVM detector) Algorithm implemented using the pyod library. Along with minimal data preprocessing,  the template includes feature scaling using MinMaxScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/One_class_SVM_detector/OCSVM_MinMaxScaler.ipynb",
                        "keywords": "one-class svm,one-class svm python, anomaly detection,one-class svm algorithm,pyod library,support vector machine,minmaxscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/one-class-svm-minmaxscaler"
                    },
                    {
                        "name": "OCSVM_RobustScaler.ipynb",
                        "title": "One-Class SVM Detector With RobustScaler",
                        "description": "Anomaly detection/outlier analysis using the OCSVM(One-class SVM detector) Algorithm implemented using the pyod library. Sci-kit learns RobustScaler gets utilized to rescale the feature before training the model.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/One_class_SVM_detector/OCSVM_RobustScaler.ipynb",
                        "keywords": "one-class svm,one-class svm python, anomaly detection,one-class svm algorithm,pyod library,support vector machine,robustscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/one-class-svm-robustscaler"
                    },
                    {
                        "name": "OCSVM_StandardScaler.ipynb",
                        "title": "One-Class SVM Detector With StandardScaler",
                        "description": "Anomaly detection/outlier analysis using the OCSVM Algorithm implemented using the pyod library and feature scaling using StandardScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/One_class_SVM_detector/OCSVM_StandardScaler.ipynb",
                        "keywords": "one-class svm,one-class svm python, anomaly detection,one-class svm algorithm,pyod library,support vector machine,standardscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/one-class-svm-standardscaler"
                    }
                ]
            },
            {
                "name": "Principal_Component_Analysis_Outlier_Detector",
                "models": [
                    {
                        "name": "PCA.ipynb",
                        "title": "Principal Component Analysis Outlier Detection",
                        "description": "Anomaly detection/outlier analysis using the Principal component analysis (PCA) Algorithm via the pyod PCA library. PCA is a linear dimensionality reduction using Singular Value Decomposition of the data to project it to a lower dimensional space.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Principal_Component_Analysis_Outlier_Detector/PCA.ipynb",
                        "keywords": "principal component analysis outlier detection,pca,anomaly detection,pca algorithm,pyod library",
                        "display_url": "https://siberian.dev/anomaly-detection/principal-component-analysis-outlier-detection"
                    },
                    {
                        "name": "PCA_RobustScaler.ipynb",
                        "title": "Principal Component Analysis Outlier Detection With RobustScaler",
                        "description": "Anomaly detection using the Principal component analysis (PCA) Algorithm via the pyod PCA library with the data scaling technique RobustScaler.Principal component analysis (PCA) also helps in detecting outliers.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Principal_Component_Analysis_Outlier_Detector/PCA_RobustScaler.ipynb",
                        "keywords": "principal component analysis outlier detection,pca,anomaly detection,pca algorithm,pyod library,robustscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/principal-component-analysis-outlier-detection-robustscaler"
                    },
                    {
                        "name": "PCA_StandardScaler.ipynb",
                        "title": "Principal Component Analysis Outlier Detection With StandardScaler",
                        "description": "Anomaly detection/outlier analysis using the Principal component analysis Algorithm via the pyod library with the data scaling technique Standard Scaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Principal_Component_Analysis_Outlier_Detector/PCA_StandardScaler.ipynb",
                        "keywords": "principal component analysis outlier detection,pca,anomaly detection,pca algorithm,pyod library,standardscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/principal-component-analysis-outlier-detection-standardscaler"
                    }
                ]
            },
            {
                "name": "Single_Objective_Generative_Adversarial_Active_Learning",
                "models": [
                    {
                        "name": "SO_GAAL.ipynb",
                        "title": "SIngle-Objective Generative Adversarial Active LearnIng",
                        "description": "Anomaly detection using the SO_GAAL Algorithm from the pyod library. Single-Objective Generative Adversarial Active Learning directly generates informative potential outliers to assist the classifier in describing a boundary that can separate outliers effectively.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Single_Objective_Generative_Adversarial_Active_Learning/SO_GAAL.ipynb",
                        "keywords": "generative adversarial active learning,gaal,objective generative adversarial active learning,single-objective generative adversarial active learning,anomaly detection,pyod library",
                        "display_url": "https://siberian.dev/anomaly-detection/single-objective-generative-adversarial-active-learning"
                    },
                    {
                        "name": "SO_GAAL_MaxAbsScaler.ipynb",
                        "title": "SIngle-Objective Generative Adversarial Active LearnIng With MaxAbsScaler",
                        "description": "Anomaly detection/outlier analysis using the SO_GAAL Algorithm implemented using the pyod library and feature scaling using MaxAbsScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Single_Objective_Generative_Adversarial_Active_Learning/SO_GAAL_MaxAbsScaler.ipynb",
                        "keywords": "generative adversarial active learning,gaal,objective generative adversarial active learning,single-objective generative adversarial active learning,anomaly detection,pyod library,maxabsscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/single-objective-generative-adversarial-active-learning-maxabsscaler"
                    },
                    {
                        "name": "SO_GAAL_MinMaxScaler.ipynb",
                        "title": "SIngle-Objective Generative Adversarial Active LearnIng With MinMaxScaler",
                        "description": "Anomaly detection/outlier analysis using the Single-Objective Generative Adversarial Active Learning Algorithm implemented using the pyod library and feature scaling using MinMaxScaler. SO_GAAL is a deep neural network-based model for anomaly detection.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Single_Objective_Generative_Adversarial_Active_Learning/SO_GAAL_MinMaxScaler.ipynb",
                        "keywords": "generative adversarial active learning,gaal,objective generative adversarial active learning,single-objective generative adversarial active learning,anomaly detection,pyod library,minmaxscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/single-objective-generative-adversarial-active-learning-minmaxscaler"
                    },
                    {
                        "name": "SO_GAAL_RobustScaler.ipynb",
                        "title": "SIngle-Objective Generative Adversarial Active LearnIng With RobustScaler",
                        "description": "Anomaly detection/outlier analysis using the Single-Objective Generative Adversarial Active Learning(SO_GAAL) Algorithm implemented using the pyod library and feature scaling using RobustScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Single_Objective_Generative_Adversarial_Active_Learning/SO_GAAL_RobustScaler.ipynb",
                        "keywords": "generative adversarial active learning,gaal,objective generative adversarial active learning,single-objective generative adversarial active learning,anomaly detection,pyod library,robustscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/single-objective-generative-adversarial-active-learning-robustscaler"
                    },
                    {
                        "name": "SO_GAAL_StandardScaler.ipynb",
                        "title": "SIngle-Objective Generative Adversarial Active LearnIng With StandardScaler",
                        "description": "Anomaly detection/outlier analysis using the Single-Objective Generative Adversarial Active Learning(SO_GAAL) Algorithm implemented using pyod library and feature scaling using sklearn.StandardScaler",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Single_Objective_Generative_Adversarial_Active_Learning/SO_GAAL_StandardScaler.ipynb",
                        "keywords": "generative adversarial active learning,gaal,objective generative adversarial active learning,single-objective generative adversarial active learning,anomaly detection,pyod library,standardscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/single-objective-generative-adversarial-active-learning-standardscaler"
                    }
                ]
            },
            {
                "name": "Variational_Auto_Encoder",
                "models": [
                    {
                        "name": "VAE.ipynb",
                        "title": "Variational AutoEncoder (VAE)",
                        "description": "Anomaly detection/outlier analysis using the Simple Variational Auto Encoder. This template utilizes Variational Auto Encoder implementation from the pyod library. A variational autoencoder can be defined as an autoencoder whose training is regularised to avoid overfitting and ensure that the latent space has good properties that enable a generative process.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Variational_Auto_Encoder/VAE.ipynb",
                        "keywords": "variational autoencoder,vae,autoencoder,anomaly detection,variational autoencoder python,pyod library",
                        "display_url": "https://siberian.dev/anomaly-detection/variational-autoencoder-vae"
                    },
                    {
                        "name": "VAE_MaxAbsScaler.ipynb",
                        "title": "Variational AutoEncoder (VAE) With MaxAbsScaler",
                        "description": "Anomaly detection/outlier analysis using the Variational Auto Encoder(VAE). This template utilizes the vae class from the pyod library and the MaxAbsScaler for the feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Variational_Auto_Encoder/VAE_MaxAbsScaler.ipynb",
                        "keywords": "variational autoencoder,vae,autoencoder,anomaly detection,variational autoencoder python,pyod library,maxabsscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/variational-autoencoder-vae-maxabsscaler"
                    },
                    {
                        "name": "VAE_RobustScaler.ipynb",
                        "title": "Variational AutoEncoder (VAE) With RobustScaler",
                        "description": "Anomaly detection using the  Variational Auto Encoder. RobustScaler is used for data rescaling before performing Unsupervised model  training.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Variational_Auto_Encoder/VAE_RobustScaler.ipynb",
                        "keywords": "variational autoencoder,vae,autoencoder,anomaly detection,variational autoencoder python,pyod library,robustscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/variational-autoencoder-vae-robustscaler"
                    },
                    {
                        "name": "VAE_StandardScaler.ipynb",
                        "title": "Variational AutoEncoder (VAE) With StandardScaler",
                        "description": "Anomaly detection/outlier analysis using the Simple Variational Auto Encoder. This template utilizes the StandardScaler for the feature rescaling technique before performing the fit operation on the vae estimator.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Variational_Auto_Encoder/VAE_StandardScaler.ipynb",
                        "keywords": "variational autoencoder,vae,autoencoder,anomaly detection,variational autoencoder python,pyod library,standardscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/variational-autoencoder-vae-standardscaler"
                    }
                ]
            }
        ]
    },
    {
        "name": "Audio_Visual",
        "image": "https://cdn.siberian.dev/code-gen/av_blue.png",
        "description": "Image, video, and audio data analysis for varied use cases.",
        "models": [
            {
                "name": "Car_License_Plate",
                "models": [
                    {
                        "name": "CarNumberPlateDetection_OpenCV.ipynb",
                        "title": "License Plate Detection Using OpenCV",
                        "description": "Car number plate detection using OpenCV in this task uses the Haar Cascade XML file containing the features of Russian car plates for detecting the bounding box for the license plates.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Car_License_Plate/CarNumberPlateDetection_OpenCV.ipynb",
                        "keywords": "car plate detection, license plate detection,opencv,cascade classifier,number plate detection using python",
                        "display_url": "https://siberian.dev/audio-visual/license-plate-detection-using-opencv"
                    },
                    {
                        "name": "CarNumberPlateDetection_OpenCV_OCR.ipynb",
                        "title": "License Plate Detection Using OpenCV And OCR",
                        "description": "The code template demonstrates car License plate detection using OpenCV and Optical Character Recognition(OCR). OCR is a technology that recognizes text within a digital image.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Car_License_Plate/CarNumberPlateDetection_OpenCV_OCR.ipynb",
                        "keywords": "car plate detection, license plate detection,cascade classifier,number plate detection using python,optical character recognition,ocr",
                        "display_url": "https://siberian.dev/audio-visual/license-plate-detection-using-opencv-and-ocr"
                    },
                    {
                        "name": "CarNumberPlateDetection_OpenCV_Video.ipynb",
                        "title": "License Plate Detection Using OpenCV Using Python",
                        "description": "Car Plate Number Detection using OpenCV in Python. It takes a video as input and outputs the car plate number with a boundary/box surrounding it per frame in the video. This template uses EasyOCR to convert text on an image to a string.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Car_License_Plate/CarNumberPlateDetection_OpenCV_Video.ipynb",
                        "keywords": "car plate detection, license plate detection,cascade classifier,number plate detection using python,optical character recognition,ocr",
                        "display_url": "https://siberian.dev/audio-visual/license-plate-detection-using-opencv-using-python"
                    }
                ]
            },
            {
                "name": "Facial",
                "models": [
                    {
                        "name": "EyeDetection_OpenCV.ipynb",
                        "title": "Eye Detection Using OpenCV In Python",
                        "description": "Eye Detection using OpenCV in Python for Image inputs. CascadeClassifier of openCV is utilized along with haarcascade_eye.xml",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Facial/EyeDetection_OpenCV.ipynb",
                        "keywords": "eye detection using opencv,eye detection using python,eye detection algorithm,cascade classifier,haar cascade classifier",
                        "display_url": "https://siberian.dev/audio-visual/eye-detection-using-opencv-using-python"
                    },
                    {
                        "name": "EyeDetection_OpenCV_Video.ipynb",
                        "title": "Eye Detection Using OpenCV In Video",
                        "description": "Eye detection in a video using OpenCV Library. CascadeClassifier of openCV is utilized along with haarcascade_eye.xml",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Facial/EyeDetection_OpenCV_Video.ipynb",
                        "keywords": "eye detection using opencv,eye detection using python,eye detection algorithm,cascade classifier,haar cascade classifier,",
                        "display_url": "https://siberian.dev/audio-visual/eye-detection-using-opencv-in-video"
                    },
                    {
                        "name": "FaceAgeDetection_OpenCV.ipynb",
                        "title": "Face Age Detection Using OpenCV",
                        "description": "Face Age Detection using Huggingface Vision Transformers and OpenCV in Python. The template uses CascadeClassifier to detect the face in the input and then uses the Huggingface model to predict the age.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Facial/FaceAgeDetection_OpenCV.ipynb",
                        "keywords": "face age detection using opencv,face age detection using python,hugging face model,cascade classifier",
                        "display_url": "https://siberian.dev/audio-visual/face-age-detection-using-opencv"
                    },
                    {
                        "name": "FaceDetection_OpenCV.ipynb",
                        "title": "Face Detection Using OpenCV In Python",
                        "description": "Face Detection using OpenCV in Python. OpenCV uses CascadeClassifier class to detect Faces from Images using the haar cascade file.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Facial/FaceDetection_OpenCV.ipynb",
                        "keywords": "face age detection using opencv,face age detection using python,cascade classifier,hugging face model,haar cascade classifier",
                        "display_url": "https://siberian.dev/audio-visual/face-detection-using-opencv-in-python"
                    },
                    {
                        "name": "FaceDetection_Video.ipynb",
                        "title": "Face Detection Using OpenCV In Video",
                        "description": "Face detection in a video using OpenCV Library. Run this code either on Spyder or PyCharm. The Front Face Haar cascade file is utilized to detect faces in the video stream.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Facial/FaceDetection_Video.ipynb",
                        "keywords": "face age detection using opencv,face age detection using python,hugging face version,cascade classifier,haar cascade classifier",
                        "display_url": "https://siberian.dev/audio-visual/face-detection-using-opencv-in-video"
                    }
                ]
            },
            {
                "name": "Image_Classification",
                "models": [
                    {
                        "name": "ImageClassificaitonXGBoost.ipynb",
                        "title": "Image Classification Using XGBoost",
                        "description": "Image Classification using XGBoost. The task of identifying what an image represents is called image classification. An image classification model is trained to recognize various classes of images.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificaitonXGBoost.ipynb",
                        "keywords": "image classification,xgboost,cnn,extreme gradient boosting,unsupervised image classification,supervised image classification",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-xgboost"
                    },
                    {
                        "name": "ImageClassificationANN.ipynb",
                        "title": "Image Classification Using ANN",
                        "description": "An Image Classification task using an Artificial Neural Network (ANN). An Artificial Neural Network in the field of Artificial intelligence attempts to mimic the network of neurons that makes up a human brain so that computers will have the option to understand things and make decisions in a human-like manner.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationANN.ipynb",
                        "keywords": "image classification,artificial neural network,ann,neural network models,image classification using ann",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-ann"
                    },
                    {
                        "name": "ImageClassificationCNN.ipynb",
                        "title": "Image Classification Using CNN",
                        "description": "An Image Classification task using a Convolutional Neural Network (ConvNet/CNN). The Convolutional Neural Network is a subtype of Neural Network used in the field of image and speech recognition. Its built-in convolutional layer reduces the high dimensionality of images without losing their information.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationCNN.ipynb",
                        "keywords": "image classification,convolutional neural network,cnn,convolutional layer,neural network,convnet,supervised machine learning method",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-cnn"
                    },
                    {
                        "name": "ImageClassificationDenseNet121.ipynb",
                        "title": "Image Classification Using DenseNet 121",
                        "description": "An image classification using DenseNet 121. A DenseNet is a type of CNN that utilizes dense connections between layers through Dense Blocks, where we connect all layers directly with each other.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationDenseNet121.ipynb",
                        "keywords": "image classification,densenet,dense convolutional network,densenet121,cnn",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-densenet121"
                    },
                    {
                        "name": "ImageClassificationDenseNet201.ipynb",
                        "title": "Image Classification Using DenseNet201",
                        "description": "An image classification using DenseNet 201. The DenseNet was developed specifically to improve the declined accuracy caused by the vanishing gradient in high-level neural networks.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationDenseNet201.ipynb",
                        "keywords": "image classification,densenet,dense convolutional network,densenet201,cnn",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-densenet201"
                    },
                    {
                        "name": "ImageClassificationEfficientNet.ipynb",
                        "title": "Image Classification Using EfficientNet",
                        "description": "An image classification using EfficientNet. EfficientNet is a CNN architecture and scaling method that uniformly scales all dimensions of depth/width/resolution using a compound coefficient.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationEfficientNet.ipynb",
                        "keywords": "image classification,efficientnet,efficientnet-b1,cnn,efficientnet-b0,efficientnet-b7",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-efficientnet"
                    },
                    {
                        "name": "ImageClassificationInceptionResNetV2.ipynb",
                        "title": "Image Classification Using InceptionResNetV2",
                        "description": "Image classification using InceptionResNetV2. Inception-ResNet-v2 is a convolutional neural network that is trained on more than a million images from the ImageNet database. The network is 164 layers deep and can classify images into 1000 object categories, such as keyboard, mouse, pencil, and many animals.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationInceptionResNetV2.ipynb",
                        "keywords": "image classification,inceptionresnetv2,cnn,inceptionv3,inceptionv2,resnetv2",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-inception-resnetv2"
                    },
                    {
                        "name": "ImageClassificationInceptionV3.ipynb",
                        "title": "Image Classification Using InceptionV3",
                        "description": "Image classification using InceptionV3. Inception v3 is an image recognition model that has been shown to attain greater than 78.1% accuracy on the ImageNet dataset.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationInceptionV3.ipynb",
                        "keywords": "image classification,cnn,inceptionv3,image recognition model,inceptionv2,inceptionv1",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-inceptionv3"
                    },
                    {
                        "name": "ImageClassificationKNeighborsClassifier.ipynb",
                        "title": "Image Classification Using k-Nearest Neighbor Classifier",
                        "description": "The template is for Image Classification using KNeighborsClassifier based on K-Nearest Neighbors algorithm. KNeighborsClassifier implements learning based on the nearest neighbors of each query point, where is an integer value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationKNeighborsClassifier.ipynb",
                        "keywords": "image classification,kneighbors classifier,knearest neighbors,k-means clustering,k-nnclassifier",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-knearest-neighbors-classifier"
                    },
                    {
                        "name": "ImageClassificationLinearSVC.ipynb",
                        "title": "Image Classification Using LinearSVC",
                        "description": "The Image Classification task using LinearSVC(Linear SupportVectorClassifier) based on the Support Vector Machine Algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationLinearSVC.ipynb",
                        "keywords": "image classification,linearsvc,linear support vector classifier,svm,svc,c-suppport classifier",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-linearSVC"
                    },
                    {
                        "name": "ImageClassificationMLP.ipynb",
                        "title": "Image Classification Using MLP",
                        "description": "An Image Classification task using Multilayer perceptron (MLP). It is a class of feedforward artificial neural networks (ANN). The term MLP is used ambiguously, sometimes loosely, to mean any feedforward ANN, sometimes strictly to refer to networks composed of multiple layers of perceptrons",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationMLP.ipynb",
                        "keywords": "image classificaiton,multi layer perceptron,mlp,artificial neural network,ann,neural network",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-mlp"
                    },
                    {
                        "name": "ImageClassificationMobileNetV2.ipynb",
                        "title": "Image Classification Using MobileNetV2",
                        "description": "Image classification using MobileNetV2. MobileNet-v2 is a convolutional neural network that is 53 layers deep. You can load a pre-trained version of the network trained on more than a million images from the ImageNet database.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationMobileNetV2.ipynb",
                        "keywords": "image classification,mobilenetv2,convolutional neural network,cnn,image net dataset",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-mobilenetv2"
                    },
                    {
                        "name": "ImageClassificationNASNetLarge.ipynb",
                        "title": "Image Classification Using NASNet-Large",
                        "description": "The Image Classification task using NASNetLarge. NASNet-Large is a convolutional neural network which is trained on more than a million images from the ImageNet database.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationNASNetLarge.ipynb",
                        "keywords": "image classification,nasnet large,nasnet mobile,nasnet,cnn",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-nasnet-large"
                    },
                    {
                        "name": "ImageClassificationNuSVC.ipynb",
                        "title": "Image Classification Using NuSVC",
                        "description": "The Image Classification task using the Simple NuSVC Algorithm. NuSVC is Nu Support Vector Classification. It is another class provided by sci-kit-learn which can perform multi-class classification.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationNuSVC.ipynb",
                        "keywords": "image classification,nusvc,nusupport vector classification,svc,scikit",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-nusvc"
                    },
                    {
                        "name": "ImageClassificationPerceptron.ipynb",
                        "title": "Image Classification Using Perceptron",
                        "description": "The Image Classification task using Perceptron. Perceptron is a Machine Learning algorithm for supervised learning of various binary classification tasks. Further, Perceptron is also defined as an Artificial Neuron or neural network unit that helps to detect certain input data computations in business intelligence.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationPerceptron.ipynb",
                        "keywords": "image classification,perceptron,multi layer perceptron,svm,binary classification",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-perceptron"
                    },
                    {
                        "name": "ImageClassificationResNet101.ipynb",
                        "title": "Image Classification Using ResNet101",
                        "description": "Image classification using Resnet101. ResNets are one of the most efficient Neural Network Architectures, as they help maintain a low error rate much deeper in the network.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationResNet101.ipynb",
                        "keywords": "image classification,resnet,resnet101,ann,neural network architecture,resnet50",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-resnet101"
                    },
                    {
                        "name": "ImageClassificationResNet152.ipynb",
                        "title": "Image Classification Using ResNet152",
                        "description": "Image classification using Resnet152. The utilized Resnet model is a 152 layers network pre-trained on the ImageNet dataset.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationResNet152.ipynb",
                        "keywords": "image classification,resnet-152,resnet-50,resnet-152architecture,resnet model",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-resnet152"
                    },
                    {
                        "name": "ImageClassificationResNet50.ipynb",
                        "title": "Image Classification Using ResNet50",
                        "description": "Image classification using Resnet50. This architecture introduced the concept of Residual Block to solve the problem of the vanishing/exploding gradient.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationResNet50.ipynb",
                        "keywords": "image classification,resnet50,resnet model,cnn,classification model,deep learning model",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-resnet50"
                    },
                    {
                        "name": "ImageClassificationSVC.ipynb",
                        "title": "Image Classification Using SVC",
                        "description": "An Image Classification task using Simple SVC(SupportVectorClassifier) based on a Support Vector Machine Algorithm. SVM is a supervised machine learning algorithm that can be used for both classification and regression challenges.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationSVC.ipynb",
                        "keywords": "image classification,svc,support vector classifier,svm,scikit learn",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-svc"
                    },
                    {
                        "name": "ImageClassificationVGG16.ipynb",
                        "title": "Image Classification Using VGG16",
                        "description": "The Image Classification task using Transfer Learning Technique. For this task in this template, VGG-16 pre-trained Deep Neural Network Architecture is Utilized from Tensorflow Library. The network is 16 layers deep.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationVGG16.ipynb",
                        "keywords": "image classification,vgg,vgg-16,deep neural network architecture,cnn",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-vgg16"
                    },
                    {
                        "name": "ImageClassificationVGG19.ipynb",
                        "title": "Image Classification Using VGG19",
                        "description": "Image classification using the VGG19 model. VGG stands for Visual Geometry Group. It is a standard deep Convolutional Neural Network (CNN) architecture with multiple layers.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationVGG19.ipynb",
                        "keywords": "image classification,vgg model,vgg-16,vgg-19,cnn,vgg net19",
                        "display_url": "https://siberian.dev/audio-visual/image-classification-using-vgg19"
                    },
                    {
                        "name": "Traffic_Sign_Recognition.ipynb",
                        "title": "Traffic Sign Recognition Using opencv",
                        "description": "Traffic Sign Recognition using OpenCV along with Keras from TensorFlow in python. The designed Neural Network classifies different traffic sign boards.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/Traffic_Sign_Recognition.ipynb",
                        "keywords": "traffic sign recognition,opencv,python,neural network,keras",
                        "display_url": "https://siberian.dev/audio-visual/traffic-sign-recognition-using-opencv"
                    }
                ]
            },
            {
                "name": "Object_Detection",
                "models": [
                    {
                        "name": "ObjectDetectionOpenCV.ipynb",
                        "title": "Object Detection Using OpenCV Using python",
                        "description": "Object Detection in python using the OpenCV library. Object Detection is A computer vision technique that deals with detecting objects in an image or video. This technique draws a boundary or a bounding box around the target object and may also include their target label. It has many real-life applications like, image retrieval and video surveillance.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Object_Detection/ObjectDetectionOpenCV.ipynb",
                        "keywords": "object detection,python,opencv,opencv library,object detection using opencv",
                        "display_url": "https://siberian.dev/audio-visual/object-detection-using-opencv-using-python"
                    },
                    {
                        "name": "ObjectDetection_Video.ipynb",
                        "title": "Object Detection Using OpenCV In Video",
                        "description": "Object Detection through webcam video capture using the OpenCV library in python. This technique draws a boundary or a bounding box around the target object and may also include its target label.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Object_Detection/ObjectDetection_Video.ipynb",
                        "keywords": "object detection,opencv,python,opencv library,image recognition algorithm",
                        "display_url": "https://siberian.dev/audio-visual/object-detection-using-opencv-in-video"
                    }
                ]
            },
            {
                "name": "Other",
                "models": [
                    {
                        "name": "HandGestureDetection_OpenCV_Video.ipynb",
                        "title": "HAnd Gesture Detection Using OpenCV",
                        "description": "Hand Gesture detection in a video using OpenCV Library. The task of detecting hand movement and annotating landmarks is performed using the media pipe library.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Other/HandGestureDetection_OpenCV_Video.ipynb",
                        "keywords": "hand gesture detection,opencv libraries,mediapipe,knn algorithm,palm detection model",
                        "display_url": "https://siberian.dev/audio-visual/hand-gesture-detection-using-opencv"
                    },
                    {
                        "name": "MotionDetection_OpenCV.ipynb",
                        "title": "Motion Detection Using OpenCV",
                        "description": "Motion detection in a video using OpenCV Library. Run this code either on Spyder or PyCharm. Motion is detected by comparing the difference in the frame every.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Other/MotionDetection_OpenCV.ipynb",
                        "keywords": "motion detection uing opencv,spyder,pycharm,opencv library,",
                        "display_url": "https://siberian.dev/audio-visual/motion-detection-using-opencv"
                    }
                ]
            },
            {
                "name": "Text",
                "models": [
                    {
                        "name": "TextDetection_OCR_Video.ipynb",
                        "title": "Text Detection In Video Using OCR",
                        "description": "Text Detection using OCR in Python. It takes a video as an input and outputs the text with a boundary/box surrounding it per frame in the video. This template uses EasyOCR to convert text on an image to a string.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Text/TextDetection_OCR_Video.ipynb",
                        "keywords": "text detection,ocr,python,easy ocr,ocr engine,natural language processing algorithms",
                        "display_url": "https://siberian.dev/audio-visual/text-detection-in-video-using-ocr"
                    },
                    {
                        "name": "Text_Detection_OCR.ipynb",
                        "title": "Text Detection Using OCR",
                        "description": "Text Detection using OpenCV and the easyocr for Optical Character Recognition in an image file.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Text/Text_Detection_OCR.ipynb",
                        "keywords": "text detection,ocr,ocr engine,optical character recognition,ocr type",
                        "display_url": "https://siberian.dev/audio-visual/text-detection-using-ocr"
                    }
                ]
            }
        ]
    },
    {
        "name": "Classification",
        "image": "https://cdn.siberian.dev/code-gen/classification_blue.png",
        "description": "Classification is a process of categorizing a given set of data into classes.",
        "models": [
            {
                "name": "Adaptive_Boosting",
                "models": [
                    {
                        "name": "AdaBoostClassifier.ipynb",
                        "title": "AdaBoost Classifier",
                        "description": "The Classification tasks using a simple AdaBoostClassifier based on the Boosting Ensemble Learning technique. AdaBoost is also known as the Adaptive Boosting Algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Adaptive_Boosting/AdaBoostClassifier.ipynb",
                        "keywords": "adaboost classifier,adaptive boosting,adaboost,adaboost classification,machine learning algorithm",
                        "display_url": "https://siberian.dev/classification/adaboost-classifier"
                    },
                    {
                        "name": "AdaBoostClassifier_MaxAbsScaler.ipynb",
                        "title": "AdaBoost Classifier With MaxAbsScaler",
                        "description": "The Classification tasks using a simple AdaBoostClassifier based on the Boosting Ensemble Learning technique, where the data rescaling technique used is MaxAbsScaler. These algorithms improve the prediction power by converting several weak learners to strong learners.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Adaptive_Boosting/AdaBoostClassifier_MaxAbsScaler.ipynb",
                        "keywords": "adaboost classifier,adaptive boosting,adaboost,adaboost classification,machine learning algorithm,adaboost",
                        "display_url": "https://siberian.dev/classification/adaboost-classifier-maxabsscaler"
                    },
                    {
                        "name": "AdaBoostClassifier_MinMaxScaler.ipynb",
                        "title": "AdaBoost Classifier With MinMaxScaler",
                        "description": "The Classification tasks using a simple AdaBoostClassifier based on the Boosting Ensemble Learning technique, where the data rescaling technique used is the MinMaxScaler function. The most common algorithm used with AdaBoost is decision trees with one level which means Decision trees with only 1 split.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Adaptive_Boosting/AdaBoostClassifier_MinMaxScaler.ipynb",
                        "keywords": "adaboost classifier,adaptive boosting,adaboost,adaboost classification,machine learning algorithm,minmaxscaler vs maxabsscaler",
                        "display_url": "https://siberian.dev/classification/adaboost-classifier-minmaxscaler"
                    },
                    {
                        "name": "AdaBoostClassifier_Normalize.ipynb",
                        "title": "AdaBoost Classifier With Normalization",
                        "description": "The Classification tasks using a simple AdaBoostClassifier based on the Boosting Ensemble Learning technique, where the data rescaling technique used is the Normalize function from the sci-kit learn library.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Adaptive_Boosting/AdaBoostClassifier_Normalize.ipynb",
                        "keywords": "adaboost classifier,minmaxscaler,adaboost python example,minmaxscaler vs maxabsscaler,adaboost classification,normalization",
                        "display_url": "https://siberian.dev/classification/adaboost-classifier-normalization"
                    },
                    {
                        "name": "AdaBoostClassifier_RobustScaler.ipynb",
                        "title": "AdaBoost Classifier With RobustScaler",
                        "description": "The Classification tasks using a simple AdaBoostClassifier based on the Boosting Ensemble Learning technique. For data rescaling, Robust Scaler is utilized for normalizing the data.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Adaptive_Boosting/AdaBoostClassifier_RobustScaler.ipynb",
                        "keywords": "adaboost classifier,adaptive boosting,adaboost,adaboost classification,machine learning algorithm,robustscaler",
                        "display_url": "https://siberian.dev/classification/adaboost-classifier-robustscaler"
                    },
                    {
                        "name": "AdaBoostClassifier_Scale.ipynb",
                        "title": "AdaBoost Classifier With Scale",
                        "description": "the Classification tasks using a simple AdaBoostClassifier based on the Boosting Ensemble Learning technique, along with the data rescaling technique using the Scale function.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Adaptive_Boosting/AdaBoostClassifier_Scale.ipynb",
                        "keywords": "adaboost classifier,adaptive boosting,adaboost,adaboost classification,machine learning algorithm,scale function,",
                        "display_url": "https://siberian.dev/classification/adaboost-classifier-scale"
                    },
                    {
                        "name": "AdaBoostClassifier_StandardScaler.ipynb",
                        "title": "AdaBoost Classifier With StandardScaler",
                        "description": "The Classification tasks using an AdaBoostClassifier based on the Boosting Ensemble Learning technique. StandardScaler is utilized for data rescaling before model training for classification.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Adaptive_Boosting/AdaBoostClassifier_StandardScaler.ipynb",
                        "keywords": "adaboost classifier,adaptive boosting,adaboost,adaboost classification,machine learning algorithm,scale function,standardscaler",
                        "display_url": "https://siberian.dev/classification/adaboost-classifier-standardscaler"
                    }
                ]
            },
            {
                "name": "CatBoost",
                "models": [
                    {
                        "name": "CatBoostClassifier.ipynb",
                        "title": "CatBoost Classifier",
                        "description": "Classification using CatBoostClassifier. CatBoost is an algorithm for gradient boosting on decision trees. CatBoost name comes from two words Category and Boosting.",
                        "URL": "https://cdn.siberian.dev/code/Classification/CatBoost/CatBoostClassifier.ipynb",
                        "keywords": "catboost classifier,catboost,gradient boosting, decision tree,catboost algorithm,scaling technique",
                        "display_url": "https://siberian.dev/classification/catboost-classifier"
                    },
                    {
                        "name": "CatBoostClassifier_MaxAbsScaler.ipynb",
                        "title": "CatBoost Classifier With MaxAbsScaler",
                        "description": "The Classification task using CatBoostClassifier with the MaxAbsScaler feature scaling technique. CatBoost is a high-performance open-source library for gradient boosting on decision trees.",
                        "URL": "https://cdn.siberian.dev/code/Classification/CatBoost/CatBoostClassifier_MaxAbsScaler.ipynb",
                        "keywords": "catboost classifier,catboost,gradient boosting, decision tree,catboost algorithm,scaling technique,maxabsscaler",
                        "display_url": "https://siberian.dev/classification/catboost-classifier-maxabsscaler"
                    },
                    {
                        "name": "CatBoostClassifier_MinMaxScaler.ipynb",
                        "title": "CatBoost Classifier With MinMaxScaler",
                        "description": "The Classification task using CatBoostClassifier with MinMaxScaler Rescaling Technique without a pipeline. In this demonstration, CatBoostClassifier from the CatBoost library is utilized.",
                        "URL": "https://cdn.siberian.dev/code/Classification/CatBoost/CatBoostClassifier_MinMaxScaler.ipynb",
                        "keywords": "catboost classifier,catboost,gradient boosting, decision tree,catboost algorithm,scaling technique,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/catboost-classifier-minmaxscaler"
                    },
                    {
                        "name": "CatBoostClassifier_Normalize.ipynb",
                        "title": "CatBoost Classifier With Normalization",
                        "description": "The Classification task using CatBoostClassifier. Before training the actual model, the training and test set will be normalized using Normalize function from the sci-kit learn library.",
                        "URL": "https://cdn.siberian.dev/code/Classification/CatBoost/CatBoostClassifier_Normalize.ipynb",
                        "keywords": "catboost classifier,catboost,gradient boosting, decision tree,catboost algorithm,scaling technique,normalization",
                        "display_url": "https://siberian.dev/classification/catboost-classifier-normalization"
                    },
                    {
                        "name": "CatBoostClassifier_Pool.ipynb",
                        "title": "CatBoost Classifier Using Pool",
                        "description": "Classification using CatBoostClassifier with data preprocessing via Pool. CatBoost is an algorithm for gradient boosting on decision trees. Pool used in CatBoost as a data structure to train a model from.",
                        "URL": "https://cdn.siberian.dev/code/Classification/CatBoost/CatBoostClassifier_Pool.ipynb",
                        "keywords": "catboost classifier,catboost,gradient boosting, decision tree,catboost algorithm,scaling technique",
                        "display_url": "https://siberian.dev/classification/catboost-classifier-using-pool"
                    },
                    {
                        "name": "CatBoostClassifier_StandardScaler.ipynb",
                        "title": "CatBoostClassifier With StandardScaler",
                        "description": "The Classification task using CatBoostClassifier. Along with model training, the template illustrates the impact of data rescaling using the StandardScaler function on the model accuracy.",
                        "URL": "https://cdn.siberian.dev/code/Classification/CatBoost/CatBoostClassifier_StandardScaler.ipynb",
                        "keywords": "catboost classifier,catboost,gradient boosting, decision tree,catboost algorithm,scaling technique,standardscaler",
                        "display_url": "https://siberian.dev/classification/catboost-classifier-standardscaler"
                    }
                ]
            },
            {
                "name": "Decision_Tree",
                "models": [
                    {
                        "name": "DecisionTreeClassifier.ipynb",
                        "title": "Decision Tree Classification",
                        "description": "The Classification task using a simple DecisionTreeClassifier based on the Classification and Regression Trees algorithm. A Decision tree is a flowchart-like tree structure where each internal node denotes a test on an attribute, each branch represents an outcome of the test, and each leaf node holds an outcome label.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Decision_Tree/DecisionTreeClassifier.ipynb",
                        "keywords": "decision tree classification,decision tree algorithm,decision tree example,regression tree,decision tree classification example",
                        "display_url": "https://siberian.dev/classification/decision-tree-classification"
                    },
                    {
                        "name": "DecisionTreeClassifier_MaxAbsScaler.ipynb",
                        "title": "Decision Tree Classification With MaxAbsScaler",
                        "description": "The Classification task using a simple DecisionTreeClassifier based on the Classification and Regression Trees algorithm along with the Feature scaling technique MaxAbsScaler. The goal is to create a model that predicts the value of a target variable by learning simple decision rules inferred from the data features.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Decision_Tree/DecisionTreeClassifier_MaxAbsScaler.ipynb",
                        "keywords": "decision tree classification,decision tree algorithm,decision tree example,regression tree,decision tree classification example,maxabsscaler",
                        "display_url": "https://siberian.dev/classification/decision-tree-classification-maxabsscaler"
                    },
                    {
                        "name": "DecisionTreeClassifier_MinMaxScaler.ipynb",
                        "title": "Decision Tree Classification With MinMaxScaler",
                        "description": "The Classification task using a simple DecisionTreeClassifier based on the Classification and Regression Trees algorithm along with the Feature scaling technique MinMaxScaler. A decision tree is the most powerful and popular tool for classification and prediction.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Decision_Tree/DecisionTreeClassifier_MinMaxScaler.ipynb",
                        "keywords": "decision tree classification,decision tree algorithm,decision tree example,regression tree,decision tree classification example,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/decision-tree-classification-minmaxscaler"
                    },
                    {
                        "name": "DecisionTreeClassifier_Normalize.ipynb",
                        "title": "Decision Tree Classification With Normalization",
                        "description": "The Classification task using a simple DecisionTreeClassifier based on the Classification and Regression Trees algorithm. Before model training for classification, the data is normalized using the sci-kit learns Normalize function from preprocessing class.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Decision_Tree/DecisionTreeClassifier_Normalize.ipynb",
                        "keywords": "decision tree classification,decision tree algorithm,decision tree example,regression tree,decision tree classification example,normalization",
                        "display_url": "https://siberian.dev/classification/decision-tree-classification-normalization"
                    },
                    {
                        "name": "DecisionTreeClassifier_RobustScaler.ipynb",
                        "title": "Decision Tree Classification With RobustScaler",
                        "description": "The Classification task using a DecisionTreeClassifier based on the Decision Trees algorithm along with the Feature scaling technique RobustScaler. A decision tree algorithm can be used for both regression and classification problems.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Decision_Tree/DecisionTreeClassifier_RobustScaler.ipynb",
                        "keywords": "decision tree classification,decision tree algorithm,decision tree example,regression tree,decision tree classification example,robustscaler",
                        "display_url": "https://siberian.dev/classification/decision-tree-classification-robustscaler"
                    },
                    {
                        "name": "DecisionTreeClassifier_Scale.ipynb",
                        "title": "Decision Tree Classification With Scale",
                        "description": "The Classification task using a simple DecisionTreeClassifier based on the Classification and Regression Trees algorithm along with the Feature scaling technique Scale. The sci-kit learn Scale function standardize a dataset along any axis. Center to the mean and component-wise scale to unit variance.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Decision_Tree/DecisionTreeClassifier_Scale.ipynb",
                        "keywords": "decision tree classification,decision tree algorithm,decision tree example,regression tree,decision tree classification example,scaling technique",
                        "display_url": "https://siberian.dev/classification/decision-tree-classification-scale"
                    },
                    {
                        "name": "DecisionTreeClassifier_StandardScaler.ipynb",
                        "title": "Decision Tree Classification With StAndardScalar",
                        "description": "The Classification problem using  DecisionTreeClassifier based on the Classification and Regression Trees algorithm along with the Feature scaling technique StandardScaler. StandardScaler is one of the popular data-rescaling techniques in the data science community.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Decision_Tree/DecisionTreeClassifier_StandardScaler.ipynb",
                        "keywords": "decision tree classification,decision tree algorithm,decision tree example,regression tree,decision tree classification example,standardscaler",
                        "display_url": "https://siberian.dev/classification/decision-tree-classification-standardscaler"
                    }
                ]
            },
            {
                "name": "Extra_Trees",
                "models": [
                    {
                        "name": "ExtraTreesClassifier.ipynb",
                        "title": "Extra Tree Classifier",
                        "description": "The Classification tasks using simple ExtraTreesClassifier based on the Extremely randomized trees algorithm. It constructs the set of decision trees. During tree construction, the decision rule is randomly selected. This algorithm is very similar to Random Forest except for a random selection of split values.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Extra_Trees/ExtraTreesClassifier.ipynb",
                        "keywords": "extra tree classifier,extra tree classifier algorithm,machine learning algorithm,extremely randomized trees classifier,ai template",
                        "display_url": "https://siberian.dev/classification/extra-tree-classifier"
                    },
                    {
                        "name": "ExtraTreesClassifier_MaxAbsScaler.ipynb",
                        "title": "Extra Tree Classifier With MaxAbsScaler",
                        "description": "The Classification tasks using a simple ExtraTreesClassifier based on the Extremely randomized trees algorithm, where the data rescaling technique used is the MaxAbsScaler function. As a decision tree-based algorithm, it doesn't require data normalization. But to understand its effects on the algorithm, the template uses MaxAbsScaler for the task.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Extra_Trees/ExtraTreesClassifier_MaxAbsScaler.ipynb",
                        "keywords": "extra tree classifier,extra tree classifier algorithm,machine learning algorithm,extremely randomized trees classifier,ai template,maxabsscaler",
                        "display_url": "https://siberian.dev/classification/extra-tree-classifier-maxabsscaler"
                    },
                    {
                        "name": "ExtraTreesClassifier_MinMaxScaler.ipynb",
                        "title": "Extra Tree Classifier With MinMaxScaler",
                        "description": "The Classification tasks using a simple ExtraTreesClassifier based on the Extremely randomized trees algorithm. Also, the template utilized MinMaxScaler has the data rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Extra_Trees/ExtraTreesClassifier_MinMaxScaler.ipynb",
                        "keywords": "extra tree classifier,extra tree classifier algorithm,machine learning algorithm,extremely randomized trees classifier,ai template,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/extra-tree-classifier-minmaxscaler"
                    },
                    {
                        "name": "ExtraTreesClassifier_Normalize.ipynb",
                        "title": "Extra Tree Classifier With Normalization",
                        "description": "The Classification tasks using a ExtraTreesClassifier based on the Extremely randomized trees algorithm, and data normalization is performed using the sci-kit learn's Normalize.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Extra_Trees/ExtraTreesClassifier_Normalize.ipynb",
                        "keywords": "extra tree classifier,extra tree classifier algorithm,machine learning algorithm,extremely randomized trees classifier,ai template,normalization",
                        "display_url": "https://siberian.dev/classification/extra-tree-classifier-normalization"
                    },
                    {
                        "name": "ExtraTreesClassifier_RobustScaler.ipynb",
                        "title": "Extra Tree Classifier With RobustScaler",
                        "description": "The Classification tasks using a simple ExtraTreesClassifier based on the Extremely randomized trees algorithm, where the data rescaling technique used is the RobustScaler function.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Extra_Trees/ExtraTreesClassifier_RobustScaler.ipynb",
                        "keywords": "extra tree classifier,extra tree classifier algorithm,machine learning algorithm,extremely randomized trees classifier,ai template,robustscaler",
                        "display_url": "https://siberian.dev/classification/extra-tree-classifier-robustscaler"
                    },
                    {
                        "name": "ExtraTreesClassifier_Scale.ipynb",
                        "title": "Extra Tree Classifier With Scale",
                        "description": "ExtraTreeClassifier from the sci-kit learns library for tabular Classification problems. For data normalization scale from preprocessing class of the sci-kit learn library has been used.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Extra_Trees/ExtraTreesClassifier_Scale.ipynb",
                        "keywords": "extra tree classifier,extra tree classifier algorithm,machine learning algorithm,extremely randomized trees classifier,ai template,scaling technique",
                        "display_url": "https://siberian.dev/classification/extra-tree-classifier-scale"
                    },
                    {
                        "name": "ExtraTreesClassifier_StandardScaler.ipynb",
                        "title": "Extra Tree Classifier With StandardScaler",
                        "description": "The Classification problem utilizing an ExtraTreesClassifier based on the Extremely randomized trees algorithm along StandardScaler for data normalization.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Extra_Trees/ExtraTreesClassifier_StandardScaler.ipynb",
                        "keywords": "extra tree classifier,extra tree classifier algorithm,machine learning algorithm,extremely randomized trees classifier,ai template,standardscaler",
                        "display_url": "https://siberian.dev/classification/extra-tree-classifier-standardscaler"
                    }
                ]
            },
            {
                "name": "Gradient_Boosting_Machine",
                "models": [
                    {
                        "name": "GradientBoostingClassifier.ipynb",
                        "title": "Gradient Boosting Classifier",
                        "description": "The Classification tasks using a GradientBoostingClassifier based on the Gradient Boosting Ensemble Learning Technique. The main idea behind this algorithm is to build models sequentially, and these subsequent models try to reduce the errors of the previous model.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Gradient_Boosting_Machine/GradientBoostingClassifier.ipynb",
                        "keywords": "gradient boosting classifier,gradient boosting,gradient boosting regressor,gradient boosting algorithm,tree based algorithm",
                        "display_url": "https://siberian.dev/classification/gradient-boosting-classifier"
                    },
                    {
                        "name": "GradientBoostingClassifier_MaxAbsScaler.ipynb",
                        "title": "Gradient Boosting Classifier With MaxAbsScaler",
                        "description": "The Classification tasks using a GradientBoostingClassifier based on the Gradient Boosting Ensemble Learning Technique. The objective is to minimize this loss function by adding weak learners using gradient descent. The template also uses MaxAbsScaler for data rescaling/normalization.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Gradient_Boosting_Machine/GradientBoostingClassifier_MaxAbsScaler.ipynb",
                        "keywords": "gradient boosting classifier,gradient boosting,gradient boosting regressor,gradient boosting algorithm,tree based algorithm,maxabsscaler",
                        "display_url": "https://siberian.dev/classification/gradient-boosting-classifier-maxabsscaler"
                    },
                    {
                        "name": "GradientBoostingClassifier_MinMaxScaler.ipynb",
                        "title": "Gradient Boosting Classifier With MinMaxScaler",
                        "description": "The Classification problem using a GradientBoostingClassifier based on the Gradient Boosting Ensemble Learning Technique. A gradient-boosting classifier is used when the target column is binary. MinMaxScaler is utilized for data normalization from the sci-kit learn library.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Gradient_Boosting_Machine/GradientBoostingClassifier_MinMaxScaler.ipynb",
                        "keywords": "gradient boosting classifier,gradient boosting,gradient boosting regressor,gradient boosting algorithm,tree based algorithm,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/gradient-boosting-classifier-minmaxscaler"
                    },
                    {
                        "name": "GradientBoostingClassifier_Normalize.ipynb",
                        "title": "Gradient Boosting Classifier With Normalization",
                        "description": "GradientBoostingClassifier based on the Gradient Boosting Ensemble Learning Technique for classification problem and feature rescaling technique Normalization",
                        "URL": "https://cdn.siberian.dev/code/Classification/Gradient_Boosting_Machine/GradientBoostingClassifier_Normalize.ipynb",
                        "keywords": "gradient boosting classifier,gradient boosting,gradient boosting regressor,gradient boosting algorithm,tree based algorithm,normalization",
                        "display_url": "https://siberian.dev/classification/gradient-boosting-classifier-normalization"
                    },
                    {
                        "name": "GradientBoostingClassifier_RobustScaler.ipynb",
                        "title": "Gradient Boosting Classifier With RobustScaler",
                        "description": "The Classification problem on tabular data using a GradientBoostingClassifier based on the Gradient Boosting Ensemble Learning Technique. Gradient boosting trees can be more accurate than random forests. The template also employs RobustScaler for data rescaling.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Gradient_Boosting_Machine/GradientBoostingClassifier_RobustScaler.ipynb",
                        "keywords": "gradient boosting classifier,gradient boosting,gradient boosting regressor,gradient boosting algorithm,tree based algorithm,robustscaler",
                        "display_url": "https://siberian.dev/classification/gradient-boosting-classifier-robustscaler"
                    },
                    {
                        "name": "GradientBoostingClassifier_Scale.ipynb",
                        "title": "Gradient Boosting Classifier With Scale",
                        "description": "Gradient Boosting Classifier for The Classification problems. The model is based on Boosting Approach of Ensemble learning. The data is normalized using the sci-kit learn Scale function.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Gradient_Boosting_Machine/GradientBoostingClassifier_Scale.ipynb",
                        "keywords": "gradient boosting classifier,gradient boosting,gradient boosting regressor,gradient boosting algorithm,tree based algorithm,scaling technique",
                        "display_url": "https://siberian.dev/classification/gradient-boosting-classifier-scale"
                    },
                    {
                        "name": "GradientBoostingClassifier_StandardScaler.ipynb",
                        "title": "Gradient Boosting Classifier With StandardScaler",
                        "description": "The Classification problem using a GradientBoostingClassifier. The gradient boosting algorithm is one of the most powerful algorithms in the field of machine learning. StandScaler is utilized as a data normalization technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Gradient_Boosting_Machine/GradientBoostingClassifier_StandardScaler.ipynb",
                        "keywords": "gradient boosting classifier,gradient boosting,gradient boosting regressor,gradient boosting algorithm,tree based algorithm,standardscaler",
                        "display_url": "https://siberian.dev/classification/gradient-boosting-classifier-standardscaler"
                    }
                ]
            },
            {
                "name": "Histogram_Based_Gradient_Boosting_Trees",
                "models": [
                    {
                        "name": "HistGradientBoostingClassifier.ipynb",
                        "title": "Histogram Based Gradient Boosting",
                        "description": "The Classification task using a simple Histogram based Gradient Boosting Trees. This estimator is much faster than GradientBoostingClassifier for big datasets.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingClassifier.ipynb",
                        "keywords": "histogram based gradient boosting,gradient boosting,sklearn histogram,machine learning algorithm,histogram based algorithm",
                        "display_url": "https://siberian.dev/classification/histogram-based-gradient-boosting"
                    },
                    {
                        "name": "HistGradientBoostingClassifier_MaxAbsScaler.ipynb",
                        "title": "Histogram Based Gradient Boosting With MaxAbsScaler",
                        "description": "Classification analysis using a HistGradientBoostingClassifier and the feature rescaling technique called MaxAbsScaler. The HistGradientBoostingClassifier is much faster than GradientBoostingClassifier for big datasets with more than 10000 entries or data points.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingClassifier_MaxAbsScaler.ipynb",
                        "keywords": "histogram based gradient boosting,gradient boosting,sklearn histogram,machine learning algorithm,histogram based algorithm,maxabsscaler",
                        "display_url": "https://siberian.dev/classification/histogram-based-gradient-boosting-maxaabsscaler"
                    },
                    {
                        "name": "HistGradientBoostingClassifier_MinMaxScaler.ipynb",
                        "title": "Histogram Based Gradient Boosting With MinMaxScaler",
                        "description": "Classification analysis using a HistGradientBoostingClassifier. This estimator has native support for missing values (NaNs). During training, the tree grower learns at each split point whether samples with missing values should go to the left or right child based on the potential gain. MinMaxScaler is utilized for data normalization.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingClassifier_MinMaxScaler.ipynb",
                        "keywords": "histogram based gradient boosting,gradient boosting,sklearn histogram,machine learning algorithm,histogram based algorithm,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/histogram-based-gradient-boosting-minmaxscaler"
                    },
                    {
                        "name": "HistGradientBoostingClassifier_Normalize.ipynb",
                        "title": "Histogram Based Gradient Boosting With Normalization",
                        "description": "Classification analysis using a HistGradientBoostingClassifier and the feature rescaling technique called Normalizer. The implementation of HistGradientBoosting gets inspiration from the LightGBM framework.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingClassifier_Normalize.ipynb",
                        "keywords": "histogram based gradient boosting,gradient boosting,sklearn histogram,machine learning algorithm,histogram based algorithm,normalization",
                        "display_url": "https://siberian.dev/classification/histogram-based-gradient-boosting-normalization"
                    },
                    {
                        "name": "HistGradientBoostingClassifier_RobustScaler.ipynb",
                        "title": "Histogram Based Gradient Boosting With RobustScaler",
                        "description": "Classification analysis using a HistGradientBoostingClassifier and the feature rescaling technique called RobustScaler. These histogram-based estimators can be orders of magnitude faster than GradientBoostingClassifier when the number of samples is larger than ten thousand.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingClassifier_RobustScaler.ipynb",
                        "keywords": "histogram based gradient boosting,gradient boosting,sklearn histogram,machine learning algorithm,histogram based algorithm,robustscaler",
                        "display_url": "https://siberian.dev/classification/histogram-based-gradient-boosting-roubustscaler"
                    },
                    {
                        "name": "HistGradientBoostingClassifier_Scale.ipynb",
                        "title": "Histogram Based Gradient Boosting With Scale",
                        "description": "Classification problem-solving using a HistGradientBoostingClassifier. Along with the Scale function from preprocessing class of sci-kit learn for data rescaling.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingClassifier_Scale.ipynb",
                        "keywords": "histogram based gradient boosting,gradient boosting,sklearn histogram,machine learning algorithm,histogram based algorithm,scaling technique",
                        "display_url": "https://siberian.dev/classification/histogram-based-gradient-boosting-scale"
                    },
                    {
                        "name": "HistGradientBoostingClassifier_StandardScaler.ipynb",
                        "title": "Histogram Based Gradient Boosting With StandardScaler",
                        "description": "This code template is to solve classification problems using a HistGradientBoostingClassifier and the data rescaling technique called StandardScaler.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingClassifier_StandardScaler.ipynb",
                        "keywords": "histogram based gradient boosting,gradient boosting,sklearn histogram,machine learning algorithm,histogram based algorithm,standardscaler",
                        "display_url": "https://siberian.dev/classification/histogram-based-gradient-boosting-standardscaler"
                    }
                ]
            },
            {
                "name": "k-Nearest_Neighbor",
                "models": [
                    {
                        "name": "KNeighborsClassifier.ipynb",
                        "title": "k-Nearest Neighbor Classifier",
                        "description": "The Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm. K-Nearest Neighbour is one of the simplest Machine Learning algorithms based on the Supervised Learning technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor",
                        "display_url": "https://siberian.dev/classification/knn-classifier"
                    },
                    {
                        "name": "KNeighborsClassifier_MaxAbsScaler.ipynb",
                        "title": "k-Nearest Neighbor Classifier With MaxAbsScaler",
                        "description": "The Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm. MaxAbsScaler is utilized for data rescaling to reduce the computational complexity of the distance matrix.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_MaxAbsScaler.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,maxabsscaler",
                        "display_url": "https://siberian.dev/classification/knn-classifier-maxabsscaler"
                    },
                    {
                        "name": "KNeighborsClassifier_MaxAbsScaler_PowerTransformer.ipynb",
                        "title": "k-Nearest Neighbor Classifier With MaxAbsScaler And Power Transformer",
                        "description": "The Classification task using KNeighborsClassifier. K-NN algorithm stores all the available data and classifies a new data point based on the similarity. The template utilizes the MaxAbsScaler feature scaling technique and PowerTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_MaxAbsScaler_PowerTransformer.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,maxabsscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/knn-classifier-maxabsscaler-and-power-transformer"
                    },
                    {
                        "name": "KNeighborsClassifier_MaxAbsScaler_QuantileTransformer.ipynb",
                        "title": "k-Nearest Neighbor Classifier With MaxAbsScaler And Quantile Transformer",
                        "description": "The Classification task using a KNeighborsClassifier based on the K-Nearest Neighbors algorithm along with the data rescaling technique MaxAbsScaler and feature transformation technique QuantileTransformer in a pipeline. The k-NN algorithm can be used for Regression but frequently is used for Classification problems.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_MaxAbsScaler_QuantileTransformer.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,maxabsscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/knn-classifier-maxabsscaler-and-quantile-transformer"
                    },
                    {
                        "name": "KNeighborsClassifier_MinMaxScaler.ipynb",
                        "title": "k-Nearest Neighbor Classifier With MinMaxScaler",
                        "description": "The Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm and feature rescaling technique MinMaxScaler in a pipeline. K-NN is also known as a lazy learner algorithm because it does not learn from the training set immediately. Instead, it stores the dataset, and at the time of classification, it acts on the dataset.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_MinMaxScaler.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/knn-classifier-minmaxscaler"
                    },
                    {
                        "name": "KNeighborsClassifier_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "k-Nearest Neighbor Classifier With MinMaxScaler And Polynomial Features",
                        "description": "The Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm. MinMaxScaler and Polynomial Features are used for rescaling and feature transformation in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,minmaxscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/knn-classifier-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "KNeighborsClassifier_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "k-Nearest Neighbor ClassifierWith MinMaxScaler And Power Transformer",
                        "description": "The Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm. MinMaxScaler and PowerTransformer are used in Pipeline for data rescaling and transformation.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,minmaxscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/knn-classifier-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "KNeighborsClassifier_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "k-Nearest Neighbor Classifier With MinMaxScaler And Quantile Transformer",
                        "description": "The Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm. MinMaxScaler and QuantileTransformer get utilized for data rescaling and feature transformation. A pipeline from sci-kit learn is used to fit all three operations.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,minmaxscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/knn-classifier-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "KNeighborsClassifier_Normalize.ipynb",
                        "title": "K-Nearest Neighbor Classifier With Normalization",
                        "description": "This Demonstration is for K-Nearest Neighbor Classifier for The Classification problem. It also includes data normalization using sci-kit learn's  Normalize function from preprocessing class.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_Normalize.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,normalization",
                        "display_url": "https://siberian.dev/classification/knn-classifier-normalization"
                    },
                    {
                        "name": "KNeighborsClassifier_Normalize_QuantileTransformer.ipynb",
                        "title": "k-Nearest Neighbor Classifier With Normalization And Quantile Transformer",
                        "description": "The Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm along with Normalize and Quantile Transformer. Normalize, and QuantileTransformer are for data rescaling and transformation. Quantile Transformation is a non-parametric data transformation technique to transform your numerical data distribution to follow a certain data distribution.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_Normalize_QuantileTransformer.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,normalization,quantile transformer",
                        "display_url": "https://siberian.dev/classification/knn-classifier-normalization-and-quantile-transformer"
                    },
                    {
                        "name": "KNeighborsClassifier_PolynomialFeatures.ipynb",
                        "title": "K-Nearest Neighbor Classifier With Polynomial Features",
                        "description": "The Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm and polynomial feature transformation in a pipeline. Polynomial Feature is a simple method that can get features\u00e2\u20ac\u2122 high-order and interaction terms.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_PolynomialFeatures.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,polynomial feature",
                        "display_url": "https://siberian.dev/classification/knn-classifier-polynomial-features"
                    },
                    {
                        "name": "KNeighborsClassifier_PowerTransformer.ipynb",
                        "title": "K-Nearest Neighbor Classifier With Power Transformer",
                        "description": "The Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm and feature transformation technique PowerTransformer in a pipeline. Power Transformer is often used to transform data to follow the Normal Distribution.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_PowerTransformer.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,power transformer",
                        "display_url": "https://siberian.dev/classification/knn-classifier-power-transformer"
                    },
                    {
                        "name": "KNeighborsClassifier_QuantileTransformer.ipynb",
                        "title": "K-Nearest Neighbor Classifier With Quantile Transformer",
                        "description": "The Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm and feature transformation technique QuantileTransformer in a pipeline. In the Scikit-Learn, the Quantile Transformer can transform the data into Normal distribution or Uniform distribution.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_QuantileTransformer.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,quantile transformer",
                        "display_url": "https://siberian.dev/classification/knn-classifier-quantile-transformer"
                    },
                    {
                        "name": "KNeighborsClassifier_RobustScaler.ipynb",
                        "title": "K-Nearest Neighbor Classifier With RobustScaler",
                        "description": "The Classification problem solving using KNeighborsClassifier and feature rescaling technique RobustScaler in a pipeline from sci-kit learn.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_RobustScaler.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,robust scaler",
                        "display_url": "https://siberian.dev/classification/knn-classifier-robustscaler"
                    },
                    {
                        "name": "KNeighborsClassifier_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "K-Nearest Neighbor Classifier With RobustScaler And Polynomial Features",
                        "description": "The Classification task using a simple KNeighborsClassifier. RobustScaler and PolynomialFeatures are used for rescaling and feature transformation in a pipeline. The purpose of the pipeline is to assemble several steps that can be cross-validated together while setting different parameters.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,robust scaler,polynomial feature",
                        "display_url": "https://siberian.dev/classification/knn-classifier-robustscaler-and-polynomial-features"
                    },
                    {
                        "name": "KNeighborsClassifier_RobustScaler_PowerTransformer.ipynb",
                        "title": "k-Nearest Neighbor Classifier With RobustScaler And Power Transformer",
                        "description": "The Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm. The model is fitted in Pipeline along with RobustScaler and PowerTransformer for data rescaling and data transformation.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,robust scaler, power transformer",
                        "display_url": "https://siberian.dev/classification/knn-classifier-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "KNeighborsClassifier_RobustScaler_QuantileTransformer.ipynb",
                        "title": "k-Nearest Neighbor Classifier With RobustScaler And Quantile Transformer",
                        "description": "The Classification task using a simple KNeighborsClassifier. KNeighborsClassifier, RobustScaler, and QuantileTransformer are fitted in a sci-kit learn pipeline. RobustScaler and QuantileTransformer are utilized for data engineering.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,robust scaler, quantile transformer",
                        "display_url": "https://siberian.dev/classification/knn-classifier-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "KNeighborsClassifier_Scale.ipynb",
                        "title": "K-Nearest Neighbor Classifier With Scale",
                        "description": "The Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm and scale separately. The algorithm at the training phase stores the data points, and when it gets new data or input, then it classifies that data into a category that is much similar or closer to the new data.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_Scale.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,scaling technique",
                        "display_url": "https://siberian.dev/classification/knn-classifier-scale"
                    },
                    {
                        "name": "KNeighborsClassifier_Scale_PolynomialFeatures.ipynb",
                        "title": "k-Nearest Neighbor Classifier With Scale And Polynomial Features",
                        "description": "The ability of KNeighorsClassifier to solve Classification problems in python. The code also utilizes Scale, PolynomialFeatures for rescaling, and feature transformation in a sci-kit learn pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_Scale_PolynomialFeatures.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,scaling technique,polynomial feature",
                        "display_url": "https://siberian.dev/classification/knn-classifier-scale-and-polynomial-features"
                    },
                    {
                        "name": "KNeighborsClassifier_Scale_PowerTransformer.ipynb",
                        "title": "k-Nearest Neighbor Classifier With Scale And Power Transformer",
                        "description": "It's demonstrates how to solve tabular classification problems using a sci-kit learn pipeline. The pipeline includes PowerTransformer for data transformation, and KNeighborsClassifier has the estimator.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_Scale_PowerTransformer.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,scaling technique,power transformer",
                        "display_url": "https://siberian.dev/classification/knn-classifier-scale-and-power-transformer"
                    },
                    {
                        "name": "KNeighborsClassifier_StandardScaler.ipynb",
                        "title": "K-Nearest Neighbor Classifier With StandardScaler",
                        "description": "The Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm. Before model training, the data is normalized using StandardScaler to reduce the complexity of the data.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_StandardScaler.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,standard scaler",
                        "display_url": "https://siberian.dev/classification/knn-classifier-standardscaler"
                    },
                    {
                        "name": "KNeighborsClassifier_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "k-Nearest Neighbor Classifier With StandardScaler And Polynomial Features",
                        "description": "The KNeighborsClassifier estimator based on K-Nearest Neighbors algorithm. The template also includes StandardScaler and PolynomialFeatures functions for data engineering tasks.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,standard scaler,polynomial feature",
                        "display_url": "https://siberian.dev/classification/knn-classifier-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "KNeighborsClassifier_StandardScaler_PowerTransformer.ipynb",
                        "title": "k-Nearest Neighbor Classifier With StandardScaler And Power Transformer",
                        "description": "The Classification problem using a KNeighborsClassifier based on the K-Nearest Neighbors algorithm. The Algorithm is ideal for non-linear data since there's no assumption about underlying data. The StandardScaler and PowerTransformer are used for rescaling and feature transformation in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,standard scaler, power transformer",
                        "display_url": "https://siberian.dev/classification/knn-classifier-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "KNeighborsClassifier_StandardScaler_QuantileTransformer.ipynb",
                        "title": "k-Nearest Neighbor Classifier With StandardScaler And Quantile Transformer",
                        "description": "The Classification task using a K-Nearest Neighbors algorithm-based estimator KNeighborsClassifier. StandardScaler and QuantileTransformer are used for data rescaling and data transformation in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "k-nearest neighbor classifier,knn algorithm,knn classifier,k-nearest neighbor algorithm,k-nearest neighbor,standard scaler, quantile transformer",
                        "display_url": "https://siberian.dev/classification/knn-classifier-standardscaler-and-quantile-transformer"
                    }
                ]
            },
            {
                "name": "LightGBM",
                "models": [
                    {
                        "name": "LGBMClassifier.ipynb",
                        "title": "LGBM Classifier",
                        "description": "The Classification task using LGBMClassifier. It is a decision Tree-based ensemble Machine Learning algorithm that uses a Gradient Boosting framework.",
                        "URL": "https://cdn.siberian.dev/code/Classification/LightGBM/LGBMClassifier.ipynb",
                        "keywords": "lgbm classifier,lightgbm classifier,lgbm algorithm,light gradient boosting machine,lgbm model,lgbm regressor",
                        "display_url": "https://siberian.dev/classification/lgbm-classifier"
                    },
                    {
                        "name": "LGBMClassifier_MaxAbsScaler.ipynb",
                        "title": "LGBM Classifier With MaxAbsScaler",
                        "description": "The Classification task using LGBMClassifier. LightGBM is a gradient-boosting framework based on decision trees to increase the efficiency of the model and reduces memory usage. MaxAbsScaler is utilized for data normalization.",
                        "URL": "https://cdn.siberian.dev/code/Classification/LightGBM/LGBMClassifier_MaxAbsScaler.ipynb",
                        "keywords": "lgbm classifier,lightgbm classifier,lgbm algorithm,light gradient boosting machine,lgbm model,lgbm regressor,maxabsscaler",
                        "display_url": "https://siberian.dev/classification/lgbm-classifier-maxabsscaler"
                    },
                    {
                        "name": "LGBMClassifier_MinMaxScaler.ipynb",
                        "title": "LGBM Classifier With MinMaxScaler",
                        "description": "The Classification task using LGBMClassifier with data scaling with MinMaxScaler. LightGBM uses two novel techniques: Gradient-based One Side Sampling and Exclusive Feature Bundling (EFB), which fulfills the limitations of the histogram-based algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Classification/LightGBM/LGBMClassifier_MinMaxScaler.ipynb",
                        "keywords": "lgbm classifier,lightgbm classifier,lgbm algorithm,light gradient boosting machine,lgbm model,lgbm regressor,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/lgbm-classifier-minmaxscaler"
                    },
                    {
                        "name": "LGBMClassifier_Normalize.ipynb",
                        "title": "LGBM Classifier With Normalization",
                        "description": "The Classification task using LGBMClassifier with data scaling with Normalize. LightGBM has a faster rate of execution, along with being able to maintain good accuracy levels.",
                        "URL": "https://cdn.siberian.dev/code/Classification/LightGBM/LGBMClassifier_Normalize.ipynb",
                        "keywords": "lgbm classifier,lightgbm classifier,lgbm algorithm,light gradient boosting machine,lgbm model,lgbm regressor,normalizaion",
                        "display_url": "https://siberian.dev/classification/lgbm-classifier-normalization"
                    },
                    {
                        "name": "LGBMClassifier_StandardScaler.ipynb",
                        "title": "LGBM Classifier With StandardScaler",
                        "description": "The Classification task using LGBMClassifier with data scaling with StandardScaler. The LightGBM algorithm performs well in machine learning competitions because of its robust handling of a variety of data types, relationships, and distributions.",
                        "URL": "https://cdn.siberian.dev/code/Classification/LightGBM/LGBMClassifier_StandardScaler.ipynb",
                        "keywords": "lgbm classifier,lightgbm classifier,lgbm algorithm,light gradient boosting machine,lgbm model,lgbm regressor,standardscaler",
                        "display_url": "https://siberian.dev/classification/lgbm-classifier-standardscaler"
                    }
                ]
            },
            {
                "name": "Linear_Models",
                "models": [
                    {
                        "name": "LogisticRegression.ipynb",
                        "title": "Logistic Regression",
                        "description": "The Classification tasks using Logistic Regression. In statistics, the logistic model (or logit model) is a statistical model that models the probability of an event taking place by having the log odds for the event be a linear combination of one or more independent variables.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression",
                        "display_url": "https://siberian.dev/classification/logistic-regression"
                    },
                    {
                        "name": "LogisticRegression_MaxAbsScaler_PolynomailFeatures.ipynb",
                        "title": "Logistic Regression With MaxAbsScaler And Polynomial Features",
                        "description": "The Classification task using LogisticRegression along with MaxAbsScaler feature scaling technique and PolynomialFeatures as Feature Transformation Technique in a pipeline. All the utilized estimators and functions are available in the sci-kit to learn.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_MaxAbsScaler_PolynomailFeatures.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,maxabsscaler,polunomial feature",
                        "display_url": "https://siberian.dev/classification/logistic-regression-maxabsscaler-and-polynomial-features"
                    },
                    {
                        "name": "LogisticRegression_MaxAbsScaler_PowerTransformer.ipynb",
                        "title": "Logistic Regression With MaxAbsScaler And Power Transformer",
                        "description": "The Classification tasks using LogisticRegression with MaxAbsScaler feature scaling technique and PowerTransformer as Feature Transformation Technique in a pipeline. In regression analysis, logistic regression or logit regression is estimating the parameters of a logistic model (the coefficients in the linear combination).",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_MaxAbsScaler_PowerTransformer.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,maxabsscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/logistic-regression-maxabsscaler-and-power-transformer"
                    },
                    {
                        "name": "LogisticRegression_MinMaxScaler.ipynb",
                        "title": "Logistic Regression With MinMaxScaler",
                        "description": "The Classification tasks using Logistic Regression and feature rescaling technique MinMaxScaler in a pipeline. Logistic regression is used in various fields, including machine learning, most medical fields, and social sciences.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_MinMaxScaler.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/logistic-regression-minmaxscaler"
                    },
                    {
                        "name": "LogisticRegression_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Logistic Regression With MinMaxScaler And Polynomial Features",
                        "description": "The Classification task using LogisticRegression with MinMaxScaler feature scaling technique and PolynomialTransformer as Feature Transformation Technique in a pipeline. Logistic regression can be used to predict the risk of developing a given disease based on the observed characteristics of the patient.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,minmaxscaler,polynomial transformer",
                        "display_url": "https://siberian.dev/classification/logistic-regression-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "LogisticRegression_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Logistic Regression With MinMaxScaler And Power Transformer",
                        "description": "The Classification task using LogisticRegression from sci-kit learn along with the MinMaxScaler feature scaling technique and PowerTransformer as Feature Transformation Technique in a pipeline. Logistic regression can be seen as a special case of the generalized linear model and is thus analogous to linear regression.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,minmaxscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/logistic-regression-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "LogisticRegression_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Logistic Regression With MinMaxScaler And Quantile Transformer",
                        "description": "The Classification task using LogisticRegression with MinMaxScaler feature scaling technique and QuantileTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,minmaxscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/logistic-regression-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "LogisticRegression_Normalize.ipynb",
                        "title": "Logistic Regression With Normalization",
                        "description": "The Classification tasks using Logistic Regression and feature rescaling technique Normalizer. Logistic regression is also known in the literature as logit regression, maximum-entropy classification (MaxEnt), or the log-linear classifier.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_Normalize.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,normalization",
                        "display_url": "https://siberian.dev/classification/logistic-regression-normalization"
                    },
                    {
                        "name": "LogisticRegression_Normalize_PolynomialFeatures.ipynb",
                        "title": "Logistic Regression With Normalization And Polynomial Features",
                        "description": "The Classification problem using a simple LogisticRegression where separate data rescaling and feature transformation are applied using Normalize and PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,normalization,polynomial features",
                        "display_url": "https://siberian.dev/classification/logistic-regression-normalization-and-polynomial-features"
                    },
                    {
                        "name": "LogisticRegression_Normalize_PowerTransformer.ipynb",
                        "title": "Logistic Regression With Normalization And Power Transformer",
                        "description": "The Code template utilizes LogisticRegression for tabular classification problems. The demonstration also includes Normalize and Power Transformer functions for data engineering.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_Normalize_PowerTransformer.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,normalization,power transformer",
                        "display_url": "https://siberian.dev/classification/logistic-regression-normalization-and-power-transformer"
                    },
                    {
                        "name": "LogisticRegression_Normalize_QuantileTransformer.ipynb",
                        "title": "Logistic Regression With Normalization And Quantile Transformer",
                        "description": "The Classification task using the LogisticRegression. Logistic regression is a classification algorithm used to find the probability of event success and failure. It is used when the dependent variable is binary. The template also includes Normalize feature scaling technique and QuantileTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_Normalize_QuantileTransformer.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,normalization,quantile transformer",
                        "display_url": "https://siberian.dev/classification/logistic-regression-normalization-and-quantile-transformer"
                    },
                    {
                        "name": "LogisticRegression_PolynomialFeatures.ipynb",
                        "title": "Logistic Regression With Polynomial Features",
                        "description": "The Classification tasks using Logistic Regression and the feature transformation technique PolynomialFeatures in a pipeline. Polynomial features are those features created by raising existing features to an exponent.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_PolynomialFeatures.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,polynomial features",
                        "display_url": "https://siberian.dev/classification/logistic-regression-polynomial-features"
                    },
                    {
                        "name": "LogisticRegression_PowerTransformer.ipynb",
                        "title": "Logistic Regression With Power Transformer",
                        "description": "The Classification tasks using LogisticRegression. Logistic regression is also known as Binomial logistics regression. It is based on a sigmoid function where output is probability and input can be from -infinity to +infinity.  A power Transformer is utilized to make data more Gaussian-like.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_PowerTransformer.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,power transformer",
                        "display_url": "https://siberian.dev/classification/logistic-regression-power-transformer"
                    },
                    {
                        "name": "LogisticRegression_QuantileTransformer.ipynb",
                        "title": "Logistic Regression With Quantile Transformer",
                        "description": "The Classification tasks using the LogisticRegression and feature transformation technique QuantileTransformer in a pipeline. Logistic regression is easier to implement and interpret.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_QuantileTransformer.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,quantile transformer",
                        "display_url": "https://siberian.dev/classification/logistic-regression-quantile-transformer"
                    },
                    {
                        "name": "LogisticRegression_RobustScaler.ipynb",
                        "title": "Logistic Regression With RobustScaler",
                        "description": "The Classification tasks using Logistic Regression. The algorithm makes no assumptions about distributions of classes in feature space. The template uses the data normalization technique RobustScaler in a sci-kit learn pipeline class.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_RobustScaler.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,robustscaler",
                        "display_url": "https://siberian.dev/classification/logistic-regression-robustscaler"
                    },
                    {
                        "name": "LogisticRegression_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "Logistic Regression With RobustScaler And Polynomial Features",
                        "description": "The demonstrating code template is for solving The Classification problem using the LogisticRegression algorithm. The demonstration also includes data engineering techniques such as data rescaling and transformation using RobustScaler, and PolynomialTransformer respectively.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,robustscaler,polynomial transformer",
                        "display_url": "https://siberian.dev/classification/logistic-regression-robustscaler-and-polynomial-features"
                    },
                    {
                        "name": "LogisticRegression_RobustScaler_PowerTransformer.ipynb",
                        "title": "Logistic Regression With RobustScaler And Power Transformer",
                        "description": "It uses a Logistic Regression estimator from the sci-kit learn library for tabular data classification. The data science pipeline also includes data rescaling and data transformation. For the mentioned task, RobustScaler and PowerTransformer from sci-kit learn are utilized.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,robustscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/logistic-regression-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "LogisticRegression_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Logistic Regression With RobustScaler And Quantile Transformer",
                        "description": "The Classification task using the LogisticRegression. The estimator is less inclined to over-fitting, but it can overfit in high dimensional datasets. The sample also includes RobustScaler and QuantileTransformer in a pipeline along with the model.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,robustscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/logistic-regression-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "LogisticRegression_Scale.ipynb",
                        "title": "Logistic Regression With Scale",
                        "description": "The Code is for the Classification problem using Logistic Regression and feature rescaling technique Scale. The algorithm is very fast at classifying unknown records.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_Scale.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,scaling technique",
                        "display_url": "https://siberian.dev/classification/logistic-regression-scale"
                    },
                    {
                        "name": "LogisticRegression_Scale_PolynomialFeatures.ipynb",
                        "title": "Logistic Regression With Scale And Polynomial Features",
                        "description": "The Classification task using a simple LogisticRegression. It is very fast algorithm for classifying unknown records. Illustration also includes data rescaling using Scale and feature transformation using PolynomialFeatures in a sci-kit learn pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_Scale_PolynomialFeatures.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,scaling technique,polynomial features",
                        "display_url": "https://siberian.dev/classification/logistic-regression-scale-and-polynomial-features"
                    },
                    {
                        "name": "LogisticRegression_Scale_PowerTransformer.ipynb",
                        "title": "Logistic Regression With Scale And Power Transformer",
                        "description": "The Classification task using a LogisticRegression. The module also illustrates the effect of data rescaling using Scale and data transformation using a Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_Scale_PowerTransformer.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,scaling technique,power transformer",
                        "display_url": "https://siberian.dev/classification/logistic-regression-scale-and-power-transformer"
                    },
                    {
                        "name": "LogisticRegression_Scale_QuantileTransformer.ipynb",
                        "title": "Logistic Regression With Scale And Quantile Transformer",
                        "description": "It can be used for the Classification analysis using a Logistic Regression. Logistic regression is easier to implement and interpret algorithm. The template also utilizes the sci-kit learn Pipeline class to perform data rescaling transformation through Scale and QuantileTransformer while fitting the model.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_Scale_QuantileTransformer.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,scaling technique,quantile transformer",
                        "display_url": "https://siberian.dev/classification/logistic-regression-scale-and-quantile-transformer"
                    },
                    {
                        "name": "LogisticRegression_StandardScaler.ipynb",
                        "title": "Logistic Regression With StandardScaler",
                        "description": "The Classification tasks using Logistic Regression. Logistic regression is also known as logit regression, maximum-entropy classification, or the log-linear classifier. The template also includes StandardScale from the scikit learns preprocessing class for the data normalization task.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_StandardScaler.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,standardscaler",
                        "display_url": "https://siberian.dev/classification/logistic-regression-standardscaler"
                    },
                    {
                        "name": "LogisticRegression_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Logistic Regression With StandardScaler And Polynomial Features",
                        "description": "The Code template includes a data science pipeline to solve tabular classification problems using a Logistic Regression estimator along with StandardScaler, and Polynomial Features has a data engineering process.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,standardscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/logistic-regression-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "LogisticRegression_StandardScaler_PowerTransformer.ipynb",
                        "title": "Logistic Regression With StandardScaler And Power Transformer",
                        "description": "The Classification template utilizes the LogisticRegression with StandardScaler feature scaling technique and PowerTransformer as Feature Transformation Technique. Logistic regression is used when the target variable takes only two values, and if the data is linearly separable, it is more efficient to classify it into two separate classes. The pipeline is utilized to fit the model/estimator along with data engineering methods.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,standardscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/logistic-regression-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "LogisticRegression_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Logistic Regression With StandardScaler And Quantile Transformer",
                        "description": "The Classification task using the LogisticRegression with StandardScaler feature scaling technique and QuantileTransformer as Feature Transformation Technique in a pipeline. Logistic regression analysis is used to examine the association of (categorical or continuous) independent variable(s) with one dichotomous dependent variable.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "logistic regression,logistic model,logit model,logistic regression example,binary logistic regression,multinomial logistic regression,ordinal logistic regression,standardscaler,qunatile transformer",
                        "display_url": "https://siberian.dev/classification/logistic-regression-standardscaler-and-quantile-transformer"
                    },
                    {
                        "name": "Perceptron.ipynb",
                        "title": "Perceptron Classifier",
                        "description": "The Classification task using simple Perceptron. It is a simple classification algorithm suitable for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier"
                    },
                    {
                        "name": "Perceptron_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "title": "Perceptron Classifier With MaxAbsScaler And Polynomial Features",
                        "description": "The Classification task using simple Perceptron. A Perceptron is a neural network unit that does certain computations to detect features or business intelligence in the input data. Along with the model fitting template utilizes MaxAbsScaler and Polynomial Features for data engineering tasks.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,maxabsscaler,poylnomial features",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-maxabsscaler-and-polynomial-features"
                    },
                    {
                        "name": "Perceptron_MaxAbsScaler_PowerTransformer.ipynb",
                        "title": "Perceptron Classifier With MaxAbsScaler And Power Transformer",
                        "description": "The Classification task using simple Perceptron. The algorithm is a two-class (binary) classification machine learning algorithm. Code also includes the feature rescaling technique MaxAbsScaler and the feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_MaxAbsScaler_PowerTransformer.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,maxabsscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-maxabsscaler-and-power-transformer"
                    },
                    {
                        "name": "Perceptron_MinMaxScaler.ipynb",
                        "title": "Perceptron Classifier With MinMaxScaler",
                        "description": "This Code Sample is for The Classification problem using a Perceptron. Perceptron is a type of neural network model, perhaps the simplest type of neural network model. It consists of a single node or neuron that takes a row of data as input and predicts a class label. MinMaxScaler is utilized to normalize the given data before training the model on it.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_MinMaxScaler.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-minmaxscaler"
                    },
                    {
                        "name": "Perceptron_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Perceptron Classifier With MinMaxScaler And Polynomial Features",
                        "description": "The Classification task using simple Perceptron. The perceptron model enables machines to automatically learn coefficients of weight which helps in classifying the inputs. Data engineering technique like data rescaling and transformation is utilized to understand their effect on the model result and performance. For this task, MinMaxScaler and PolynomialFeatures are utilized.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,minmaxscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "Perceptron_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Perceptron Classifier With MinMaxScaler And Power Transformer",
                        "description": "The demonstration is for The Classification problem using the Perceptron algorithm by utilizing the perceptron estimator available in the sci-kit learn library. The algorithm is also recognized as the Linear Binary Classifier. The perceptron model is extremely efficient and helpful in arranging the input data and classifying the same into different classes. The demonstration also includes MinMaxScaler and PowerTransformer for data engineering.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "Perceptron_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Perceptron Classifier With MinMaxScaler And Quantile Transformer",
                        "description": "The Code demonstration is for tabular Classification using the Perceptron algorithm using perceptron estimator. A perceptron is a single-layer neural network, and a multi-layer perceptron is called Neural Network. MinMaxScaler and QuantileTransformer are used to normalize and manipulate distribution before model training.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,minmaxscaler.quantile transformer",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "Perceptron_Normalize.ipynb",
                        "title": "Perceptron Classifier With Normalization",
                        "description": "The Classification task using a Perceptron, and the data rescaling technique used is the StandardScaler in a pipeline. The perceptron is a mathematical model of a biological neuron. While in actual neurons, the dendrite receives electrical signals from the axons of other neurons. In the perceptron, these electrical signals are represented as numerical values.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_Normalize.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,normalization",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-normalization"
                    },
                    {
                        "name": "Perceptron_Normalize_PolynomialFeatures.ipynb",
                        "title": "Perceptron Classifier With Normalization And Polynomial Features",
                        "description": "The Classification task using simple Perceptron. The Perceptron always converges to the best linear separator for a given dataset. The convergence criteria for Perceptron depend on the initial value of the weight vector. The template also includes Normalize for data rescaling and Polynomial Features to generate a matrix consisting of all polynomial combinations of the features with a degree less than or equal to the specified degree.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,normalization,polynomial features",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-normalization-and-polynomial-features"
                    },
                    {
                        "name": "Perceptron_Normalize_PowerTransformer.ipynb",
                        "title": "Perceptron Classifier With Normalization And Power Transformer",
                        "description": "The Code demonstration is to solve The Classification problem using the Perceptron algorithm. The template also utilizes the sci-kit learns Pipeline class to fit Normalize and PowerTransformer along with the model in a sequence of instructions.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_Normalize_PowerTransformer.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,normalization,power transformer",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-normalization-and-power-transformer"
                    },
                    {
                        "name": "Perceptron_Normalize_QuantileTransformer.ipynb",
                        "title": "Perceptron Classifier With Normalization And Quantile Transformer",
                        "description": "The Classification task using Perceptron. It was introduced by Frank Rosenblatt in 1957. He proposed a Perceptron learning rule based on the original MCP neuron. Perceptron Estimator, Normalize, and QuantileTransformer is utilized in a sci-kit learn pipeline to fit the model.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_Normalize_QuantileTransformer.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,normalization,quantile transformer",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-normalization-and-quantile-transformer"
                    },
                    {
                        "name": "Perceptron_PolynomialFeatures.ipynb",
                        "title": "Perceptron Classifier With Polynomial Features",
                        "description": "The Classification task using simple Perceptron. This algorithm enables neurons to learn and processes elements in the training set one at a time. The demonstration also includes the feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_PolynomialFeatures.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,polynomial features",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-polynomial-features"
                    },
                    {
                        "name": "Perceptron_PowerTransformer.ipynb",
                        "title": "Perceptron Classifier With Power Transformer",
                        "description": "The Classification task using simple Perceptron. The Perceptron algorithm learns the weights for the input signals to draw a linear decision boundary. Along with the estimator feature transformation technique, PowerTransformer is fitted in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_PowerTransformer.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,power transformer",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-power-transformer"
                    },
                    {
                        "name": "Perceptron_QuantileTransformer.ipynb",
                        "title": "Perceptron Classifier With Quantile Transformer",
                        "description": "The Classification task using simple Perceptron. A Perceptron accepts inputs, moderates them with certain weight values, then applies the transformation function to output the final result. QuantileTransformer is utilized for data transformation in a Pipeline class.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_QuantileTransformer.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,quantile transformer",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-quantile-transformer"
                    },
                    {
                        "name": "Perceptron_RobustScaler.ipynb",
                        "title": "Perceptron Classifier With RobustScaler",
                        "description": "This Code demonstrates a Classification problem using a Perceptron estimator from the sci-kit learn library. It is an algorithm for Supervised Learning of single-layer binary linear classifiers. RobustScaler is utilized for data normalization.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_RobustScaler.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,robustscaler",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-robustscaler"
                    },
                    {
                        "name": "Perceptron_RobustScaler_PowerTransformer.ipynb",
                        "title": "Perceptron Classifier With RobustScaler And Power Transformer",
                        "description": "The Classification task using  Perceptron. The Perceptron learning rule converges if the two classes can be separated by the linear hyperplane. However, if the classes cannot be separated perfectly by a linear classifier, it could give rise to errors. RobustScaler and PowerTransformer are utilized along with the estimator in a sci-kit learn pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,robustscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "Perceptron_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Perceptron Classifier With RobustScaler And Quantile Transformer",
                        "description": "The Classification task using simple Perceptron where the scaling technique used is RobustScaler and transformer used is QuantileTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,robustscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "Perceptron_Scale.ipynb",
                        "title": "Perceptron Classifier With Scale",
                        "description": "The Classification task using a Perceptron in which the data rescaling technique used is a seperate scaler. This is a simple classification algorithm suitable for large scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_Scale.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,scaling technique",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-scale"
                    },
                    {
                        "name": "Perceptron_Scale_PolynomialFeatures.ipynb",
                        "title": "Perceptron Classifier With RobustScaler And Polynomial Features",
                        "description": "The Classification task using simple Perceptron where the scaling technique used is Scale and transformer used is PolynomialFeatures.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_Scale_PolynomialFeatures.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,robustscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-robustscaler-and-polynomial-features"
                    },
                    {
                        "name": "Perceptron_Scale_PowerTransformer.ipynb",
                        "title": "Perceptron Classifier With RobustScaler And Scale",
                        "description": "The Classification task using simple Perceptron where the scaling technique used is Scale and transformer used is powerTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_Scale_PowerTransformer.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,robustscaler,scaling technique",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-robustscaler-and-scale"
                    },
                    {
                        "name": "Perceptron_Scale_QuantileTransformer.ipynb",
                        "title": "Perceptron Classifier With Scale And Quantile Transformer",
                        "description": "The Classification task using simple Perceptron with feature scaling using Scale and feature transformation using QuantileTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_Scale_QuantileTransformer.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,scaling technique,quantile transformer",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-scale-and-quantile-transformer"
                    },
                    {
                        "name": "Perceptron_StandardScaler.ipynb",
                        "title": "Perceptron Classifier With StandardScaler",
                        "description": "The Classification task using a Perceptron in which the data rescaling technique used is the StandardScaler function in a pipeline. This is a simple classification algorithm suitable for large scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_StandardScaler.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,standardscaler",
                        "display_url": "https://siberian.dev/ai-templates/perceptron-classifier-standardscaler"
                    },
                    {
                        "name": "Perceptron_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Perceptron Classifier With StandardScaler And Polynomial Features",
                        "description": "The Classification task using simple Perceptron. Which is a simple classification algorithm suitable for large scale learning and feature transformation technique PolynomialFeatures feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,standardscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "Perceptron_StandardScaler_PowerTransformer.ipynb",
                        "title": "Perceptron Classifier With StandardScaler And Power Transformer",
                        "description": "The Classification task using simple Perceptron. Which is a simple classification algorithm suitable for large scale learning and feature transformation technique PowerTransformer feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,standardscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "Perceptron_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Perceptron Classifier With StandardScaler And Quantile Transformer",
                        "description": "The Classification task using simple Perceptron. Which is a simple classification algorithm suitable for large scale learning where data rescaling is done using StandardScaler and feature transformation is done is using QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "perceptron classifier,perceptron algorithm,linear binary classifier,perceptron classifier example,perceptron network,single layer perceptron model,multi layer perceptron model,standardscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/perceptron-classifier-standardscaler-and-quantile-transformer"
                    },
                    {
                        "name": "RidgeClassifier.ipynb",
                        "title": "Ridge Classifier",
                        "description": "The Classification tasks using the simple RidgeClassifier. It first converts binary class to {-1, 1} and then treats The Classification task as a regression task.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier",
                        "display_url": "https://siberian.dev/classification/ridge-classifier"
                    },
                    {
                        "name": "RidgeClassifier_MaxAbsScaler.ipynb",
                        "title": "Ridge Classifier With MaxAbsScaler",
                        "description": "The Classification task using RidgeClassifier with MaxAbsScaler feature scaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_MaxAbsScaler.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,maxabsscaler",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-maxabsscaler"
                    },
                    {
                        "name": "RidgeClassifier_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "title": "Ridge Classifier With MaxAbsScaler And Polynomial Features",
                        "description": "The Classification tasks using RidgeClassifier, with feature scaling using MaxAbsScaler and also, feature transformation using Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,maxabsscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-maxabsscaler-and-polynomial-features"
                    },
                    {
                        "name": "RidgeClassifier_MaxAbsScaler_QuantileTransformer.ipynb",
                        "title": "Ridge Classifier With MaxAbsScaler And Quantile Transformer",
                        "description": "The Classification tasks using RidgeClassifier, with feature scaling using MaxAbsScaler and also, feature transformation using Quantile Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_MaxAbsScaler_QuantileTransformer.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,maxabsscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-maxabsscaler-and-quantile-transformer"
                    },
                    {
                        "name": "RidgeClassifier_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Ridge Classifier With MinMaxScaler And Polynomial Features",
                        "description": "The Classification tasks using RidgeClassifier with MinMaxScaler feature scaling technique and PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,minmaxscaler,polynomial transformer",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "RidgeClassifier_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Ridge Classifier With MinMaxScaler And Power Transformer",
                        "description": "The Classification tasks using RidgeClassifier with MinMaxScaler feature scaling technique and PowerTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,minmaxscaler,power tranformer",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "RidgeClassifier_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Ridge Classifier With MinMaxScaler And Quantile Transformer",
                        "description": "The Classification tasks using RidgeClassifier with MinMaxScaler feature scaling technique and QuantileTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,minmaxscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "RidgeClassifier_Normalize.ipynb",
                        "title": "Ridge classifier With Normalization",
                        "description": "The Classification tasks using RidgeClassifier and feature rescaling technique Normalization.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_Normalize.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,normalization",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-normalization"
                    },
                    {
                        "name": "RidgeClassifier_Normalize_PolynomialFeatures.ipynb",
                        "title": "Ridge Classifier With Normalization And Polynomial Features",
                        "description": "The Classification tasks using the simple RidgeClassifier where separate rescaling is done using Normalize and feature transformation is done using PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,normalization,polynomial features",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-normalization-and-polynomial-features"
                    },
                    {
                        "name": "RidgeClassifier_Normalize_PowerTransformer.ipynb",
                        "title": "Ridge Classifier With Normalization And Power Transformer",
                        "description": "The Classification tasks using the simple RidgeClassifier where separate rescaling is done using Normalize and feature transformation is done using PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_Normalize_PowerTransformer.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,normalization,power transformer",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-normalization-and-power-transformer"
                    },
                    {
                        "name": "RidgeClassifier_Normalize_QuantileTransformer.ipynb",
                        "title": "Ridge Classifier With Normalization And Quantile Transformer",
                        "description": "The Classification tasks using the simple RidgeClassifier where separate rescaling is done using Normalize and feature transformation is done using Quantile Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_Normalize_QuantileTransformer.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,normalization,quantile transformer",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-normalization-and-quantile-transformer"
                    },
                    {
                        "name": "RidgeClassifier_PowerTransformer.ipynb",
                        "title": "Ridge Classifier With Power Transformer",
                        "description": "The Classification tasks using the simple RidgeClassifier and feature transformation technique PowerTransformer in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_PowerTransformer.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,power transformer",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-power-transformer"
                    },
                    {
                        "name": "RidgeClassifier_QuantileTransformer.ipynb",
                        "title": "Ridge Classifier With Quantile Transformer",
                        "description": "The Classification tasks using the simple RidgeClassifier and feature transformation technique QuantileTransformer in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_QuantileTransformer.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,quantile transformer",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-quantile-transformer"
                    },
                    {
                        "name": "RidgeClassifier_RobustScaler.ipynb",
                        "title": "Ridge Classifier With RobustScaler And PipelIne",
                        "description": "The Classification tasks using RidgeClassifier and feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_RobustScaler.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,robustscaler",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-robustscaler-and-pipeline"
                    },
                    {
                        "name": "RidgeClassifier_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "Ridge Classifier With RobustScaler And Polynomial Features",
                        "description": "The Classification tasks using RidgeClassifier with RobustScaler feature scaling technique and Polynomial Features as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,robustscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-robustscaler-and-polynomial-features"
                    },
                    {
                        "name": "RidgeClassifier_RobustScaler_PowerTransformer.ipynb",
                        "title": "Ridge Classifier With RobustScaler And Power Transformer",
                        "description": "The Classification tasks using RidgeClassifier, feature rescaling using RobustScaler and feature transformation using Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,robustscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "RidgeClassifier_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Ridge Classifier With RobustScaler And Quantile Transformer",
                        "description": "The Classification tasks using RidgeClassifier, feature scaling using RobustScaler and also, feature transformation using Quantile Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,robustscaler,qunatile transformer",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "RidgeClassifier_Scale.ipynb",
                        "title": "Ridge Classifier With Scale",
                        "description": "The Classification tasks using RidgeClassifier and feature rescaling technique Scaling.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_Scale.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,scaling technique",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-scale"
                    },
                    {
                        "name": "RidgeClassifier_Scale_PolynomialFeatures.ipynb",
                        "title": "Ridge Classifier With Scale And Polynomial Features",
                        "description": "The Classification tasks using the simple RidgeClassifier where separate rescaling is done using Scale and feature transformation is done using PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_Scale_PolynomialFeatures.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,scaling technique,polynomial features",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-scale-and-polynomial-features"
                    },
                    {
                        "name": "RidgeClassifier_Scale_PowerTransformer.ipynb",
                        "title": "Ridge Classifier With Scale And Power Transformer",
                        "description": "The Classification tasks using the simple RidgeClassifier where separate rescaling is done using Scale and feature transformation is done using PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_Scale_PowerTransformer.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,scaling technique,power transformer",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-scale-and-power-transformer"
                    },
                    {
                        "name": "RidgeClassifier_Scale_QuantileTransformer.ipynb",
                        "title": "Ridge Classifier With Scale And Quantile Transformer",
                        "description": "The Classification task using RidgeClassifier with scale feature scaling technique and feature transforme is done by Quantile transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_Scale_QuantileTransformer.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,scaling technique,quantile transformer",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-scale-and-quantile-transformer"
                    },
                    {
                        "name": "RidgeClassifier_StandardScaler.ipynb",
                        "title": "Ridge Classifier With StandardScaler",
                        "description": "The Classification tasks using RidgeClassifier and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_StandardScaler.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,standardscaler",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-standardscaler"
                    },
                    {
                        "name": "RidgeClassifier_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Ridge Classifier With StandardScaler And Polynomial Features",
                        "description": "The Classification tasks using RidgeClassifier, feature rescaling using StandardScaler and feature transformation using Polynomial features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,standardscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "RidgeClassifier_StandardScaler_PowerTransformer.ipynb",
                        "title": "Ridge Classifier With StandardScaler And Power Transformer",
                        "description": "The Classification tasks using RidgeClassifier, feature rescaling using StandardScaler and feature transformation using Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,standardscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "RidgeClassifier_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Ridge Classifier With StandardScaler And Quantile Transformer",
                        "description": "The Classification tasks using RidgeClassifier, feature rescaling using StandardScaler and feature transformation using Quantile Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "ridge classifier,ridge regression,ridge classifier algorithm,ridge regression example,sklearn ridge classifier,standardscaler,qunatile transformer",
                        "display_url": "https://siberian.dev/classification/ridge-classifier-standardscaler-and-quantile-transformer"
                    },
                    {
                        "name": "SGDClassifier.ipynb",
                        "title": "Stochastic Gradient Descent Classifier",
                        "description": "The Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent approach.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm",
                        "display_url": "https://siberian.dev/classification/sgd-classifier"
                    },
                    {
                        "name": "SGDClassifier_MaxAbsScaler.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With MaxAbsScaler",
                        "description": "The Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent with MaxAbsScaler as Feature Rescaling technique",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_MaxAbsScaler.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,maxabscaler",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-maxabsscaler"
                    },
                    {
                        "name": "SGDClassifier_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With MaxAbsScaler And Polynomial Features",
                        "description": "The Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent with MaxAbsScaler as Feature Rescaling technique PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,maxabscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-maxabsscaler-and-polynomial-features"
                    },
                    {
                        "name": "SGDClassifier_MaxAbsScaler_PowerTransformer.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With MaxAbsScaler And Power Transformer",
                        "description": "The Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent with MaxAbsScaler as Feature Rescaling technique Power Transformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_MaxAbsScaler_PowerTransformer.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,maxabsscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-maxabsscaler-and-power-transformer"
                    },
                    {
                        "name": "SGDClassifier_MaxAbsScaler_QuantileTransformer.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With MaxAbsScaler And Quantile Transformer",
                        "description": "The Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent with MaxAbsScaler as Feature Rescaling technique Quantile Transformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_MaxAbsScaler_QuantileTransformer.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,maxabsscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-maxabsscaler-and-quantile-transformer"
                    },
                    {
                        "name": "SGDClassifier_MinMaxScaler.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With MinMaxScaler",
                        "description": "The Classification task using the SGDClassifier based on the Stochastic Gradient Descent approach and feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_MinMaxScaler.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-minmaxscaler"
                    },
                    {
                        "name": "SGDClassifier_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With MinMaxScaler And Polynomial Features",
                        "description": "The Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent with MinMaxScaler as Feature Rescaling technique PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,minmaxscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "SGDClassifier_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With MinMaxScaler And Power Transformer",
                        "description": "The Classification tasks using SGDClassifier based on the Stochastic Gradient Descent with MinMaxScaler as Feature Rescaling technique PowerTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,minmaxscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "SGDClassifier_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With MinMaxScaler And Quantile Transformer",
                        "description": "The Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent with MinMaxScaler as Feature Rescaling technique QuantileTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,minmaxscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "SGDClassifier_Normalize.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With Normalization",
                        "description": "The Classification task using the SGDClassifier based on the Stochastic Gradient Descent approach and feature rescaling technique Normalize.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_Normalize.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,normalization",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-normalization"
                    },
                    {
                        "name": "SGDClassifier_Normalize_PolynomialFeatures.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With Normalization And Polynomial Features",
                        "description": "Classification task using the SGDClassifier where separate rescaling is done using Normalize and feature transformation is done using PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,normalization,polynomial features",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-normalization-and-polynomial-features"
                    },
                    {
                        "name": "SGDClassifier_Normalize_PowerTransformer.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With Normalization And Power Transformer",
                        "description": "Classification task using the SGDClassifier where separate rescaling is done using Normalize and feature transformation is done using PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_Normalize_PowerTransformer.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,normalization,power transformer",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-normalization-and-power-transformer"
                    },
                    {
                        "name": "SGDClassifier_PolynomialFeatures.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With Polynomial Features",
                        "description": "The Classification task using the SGDClassifier based on the Stochastic Gradient Descent approach and feature Transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_PolynomialFeatures.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-polynomial-features"
                    },
                    {
                        "name": "SGDClassifier_PowerTransformer.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With Power Transformer",
                        "description": "The Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent approach and Feature Transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_PowerTransformer.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,power transformer",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-power-transformer"
                    },
                    {
                        "name": "SGDClassifier_QuantileTransformer.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With Quantile Transformer",
                        "description": "The Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent approach and Feature Transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_QuantileTransformer.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,quantile transformer",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-quantile-transformer"
                    },
                    {
                        "name": "SGDClassifier_RobustScaler.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With RobustScaler",
                        "description": "The Classification task using the SGDClassifier based on the Stochastic Gradient Descent approach and feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_RobustScaler.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,robustscaler",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-robustscaler"
                    },
                    {
                        "name": "SGDClassifier_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With RobustScaler And Polynomial Features",
                        "description": "The Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent with RobustScaler as Feature Rescaling technique PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,robustscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-robustscaler-and-polynomial-features"
                    },
                    {
                        "name": "SGDClassifier_RobustScaler_PowerTransformer.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With RobustScaler And Power Transformer",
                        "description": "The Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent with RobustScaler as Feature Rescaling technique Power Transformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,robustscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "SGDClassifier_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With RobustScaler And Quantile Transformer",
                        "description": "Classification analysis using the SGD Classifier where rescaling method used is RobustScaler and feature transformation is done via Quantile Transformer.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,robustscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "SGDClassifier_Scale.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With Scale",
                        "description": "The Classification task using the SGDClassifier based on the Stochastic Gradient Descent approach and feature rescaling technique Scale .",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_Scale.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,scaling technique",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-scale"
                    },
                    {
                        "name": "SGDClassifier_Scale_QuantileTransformer.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With Scale And Power Transformer",
                        "description": "Classification task using the SGDClassifier where separate rescaling is done using scale and feature transformation is done using QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_Scale_QuantileTransformer.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,scaling technique,power transformer",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-scale-and-power-transformer"
                    },
                    {
                        "name": "SGDClassifier_StandardScaler.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With StandardScaler",
                        "description": "The Classification task using the SGDClassifier based on the Stochastic Gradient Descent approach and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_StandardScaler.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,standardscaler",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-standardscaler"
                    },
                    {
                        "name": "SGDClassifier_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With StandardScaler And Polynomial Features",
                        "description": "The Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent approach with Feature Rescaling technique StandardScaler and Feature Transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,standardscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "SGDClassifier_StandardScaler_PowerTransformer.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With StandardScaler And Power Transformer",
                        "description": "The Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent approach with Feature Rescaling technique StandardScaler and Feature Transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,standardscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "SGDClassifier_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Stochastic Gradient Descent Classifier With StandardScaler And Quantile Transformer",
                        "description": "The Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent approach with Feature Rescaling technique StandardScaler and Feature Transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "stochastic gradient descent classifier,stochastic gradient descent,sgd regressor,sgd classifier,sgd classifier algorithm,sgd algorithm,standardscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/sgd-classifier-standardscaler-and-quantile-transformer"
                    }
                ]
            },
            {
                "name": "Naive_Bayes",
                "models": [
                    {
                        "name": "BernoulliNB.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier",
                        "description": "The Classification tasks using simple BernoulliNB based on the Naive Bayes algorithm. BernoulliNB is for data that is distributed according to multivariate Bernoulli distributions.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB.ipynb",
                        "keywords": "bernoulli naive bayes classifier,bernoulli naive bayes,naive bayes,bernoulli classifier,gaussian naive bayes classifier",
                        "display_url": "https://siberian.dev/classification/bernoulli-naive-bayes-classifier"
                    },
                    {
                        "name": "BernoulliNB_MaxAbsScaler.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier With MaxAbsScaler",
                        "description": "This code facilitates to solve the problem of classification problem using Bernoulli Naive Bayes Algorithm using MaxAbsScaler technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_MaxAbsScaler.ipynb",
                        "keywords": "bernoulli naive bayes classifier,bernoulli naive bayes,naive bayes,bernoulli classifier,gaussian naive bayes classifier,maxabsscaler",
                        "display_url": "https://siberian.dev/classification/bernoulli-naive-bayes-classifier-maxabsscaler"
                    },
                    {
                        "name": "BernoulliNB_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier With MaxAbsScaler And Polynomial Features",
                        "description": "This code facilitates to solve the problem of classification problem using Bernoulli Naive Bayes Algorithm using MaxAbsScaler technique and polynomialFeatures.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "keywords": "bernoulli naive bayes classifier,bernoulli naive bayes,naive bayes,bernoulli classifier,gaussian naive bayes classifier,maxabsscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/bernoulli-naive-bayes-classifier-maxabsscaler-and-polynomial-features"
                    },
                    {
                        "name": "BernoulliNB_MaxAbsScaler_PowerTransformer.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier With MaxAbsScaler And Power Transformer",
                        "description": "This code facilitates to solve the problem of classification problem using Bernoulli Naive Bayes Algorithm using MaxAbsScaler technique and PowerTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_MaxAbsScaler_PowerTransformer.ipynb",
                        "keywords": "bernoulli naive bayes classifier,bernoulli naive bayes,naive bayes,bernoulli classifier,gaussian naive bayes classifier,maxabsscaler",
                        "display_url": "https://siberian.dev/classification/bernoulli-naive-bayes-classifier-maxabsscaler-and-power-transformer"
                    },
                    {
                        "name": "BernoulliNB_MinMaxScaler.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier With MinMaxScaler",
                        "description": "This code facilitates to solve the problem of classification problem using Bernoulli Naive Bayes Algorithm using MinMaxScaler technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_MinMaxScaler.ipynb",
                        "keywords": "bernoulli naive bayes classifier,bernoulli naive bayes,naive bayes,bernoulli classifier,gaussian naive bayes classifier,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/bernoulli-naive-bayes-classifier-minmaxscaler"
                    },
                    {
                        "name": "BernoulliNB_Normalize.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier With Normalization",
                        "description": "This code facilitates to solve the problem of classification problem using Bernoulli Naive Bayes Algorithm using Normalize technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_Normalize.ipynb",
                        "keywords": "bernoulli naive bayes classifier,bernoulli naive bayes,naive bayes,bernoulli classifier,gaussian naive bayes classifier,normalization",
                        "display_url": "https://siberian.dev/classification/bernoulli-naive-bayes-classifier-normalization"
                    },
                    {
                        "name": "BernoulliNB_PolynomialFeatures.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier With Polynomial Features",
                        "description": "The Classification tasks using BernoulliNB based on the Naive Bayes algorithm along with feature transformation technique using Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_PolynomialFeatures.ipynb",
                        "keywords": "bernoulli naive bayes classifier,bernoulli naive bayes,naive bayes,bernoulli classifier,gaussian naive bayes classifier,ploynomial features",
                        "display_url": "https://siberian.dev/classification/bernoulli-naive-bayes-classifier-polynomial-features"
                    },
                    {
                        "name": "BernoulliNB_PowerTransformer.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier With Power Transformer",
                        "description": "The Classification tasks using simple BernoulliNB based on the Naive Bayes algorithm along with feature transformation technique using Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_PowerTransformer.ipynb",
                        "keywords": "bernoulli naive bayes classifier,bernoulli naive bayes,naive bayes,bernoulli classifier,gaussian naive bayes classifier,bernoullinb",
                        "display_url": "https://siberian.dev/classification/bernoulli-naive-bayes-classifier-power-transformer"
                    },
                    {
                        "name": "BernoulliNB_QuantileTransformer.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier With Quantile Transformer",
                        "description": "Regression analysis using Bernoulli Naive Bayes Algorithm where the transformer used is Quantile Transformer.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_QuantileTransformer.ipynb",
                        "keywords": "bernoulli naive bayes classifier,bernoulli naive bayes,naive bayes,bernoulli classifier,gaussian naive bayes classifier,bernoullinb,quantile transformer",
                        "display_url": "https://siberian.dev/classification/bernoulli-naive-bayes-classifier-quantile-transformer"
                    },
                    {
                        "name": "BernoulliNB_RobustScaler.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier With RobustScaler",
                        "description": "This code facilitates to solve the problem of classification problem using Bernoulli Naive Bayes Algorithm using RobustScaler technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_RobustScaler.ipynb",
                        "keywords": "bernoulli naive bayes classifier,bernoulli naive bayes,naive bayes,bernoulli classifier,gaussian naive bayes classifier,bernoullinb,robustscaler",
                        "display_url": "https://siberian.dev/classification/bernoulli-naive-bayes-classifier-robustscaler"
                    },
                    {
                        "name": "BernoulliNB_Scale.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier With Scale",
                        "description": "This code facilitates to solve the problem of classification problem using Bernoulli Naive Bayes Algorithm using Scale technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_Scale.ipynb",
                        "keywords": "bernoulli naive bayes classifier,bernoulli naive bayes,naive bayes,bernoulli classifier,gaussian naive bayes classifier,bernoullinb,scaling technique",
                        "display_url": "https://siberian.dev/classification/bernoulli-naive-bayes-classifier-scale"
                    },
                    {
                        "name": "BernoulliNB_StandardScaler.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier With StandardScaler",
                        "description": "This code facilitates to solve the problem of classification problem using Bernoulli Naive Bayes Algorithm using StandardScaler technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_StandardScaler.ipynb",
                        "keywords": "bernoulli naive bayes classifier,bernoulli naive bayes,naive bayes,bernoulli classifier,gaussian naive bayes classifier,bernoullinb,standardscaler",
                        "display_url": "https://siberian.dev/classification/bernoulli-naive-bayes-classifier-standardscaler"
                    },
                    {
                        "name": "CategoricalNB.ipynb",
                        "title": "Categorical Naive Bayes",
                        "description": "The Classification tasks using CategoricalNB based on the Naive Bayes algorithm for categorically distributed data.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/CategoricalNB.ipynb",
                        "keywords": "categorical naive bayes,gaussian naive bayes classifier,multinomial naive bayes classifier,bernoulli naive bayes classifier",
                        "display_url": "https://siberian.dev/classification/categorical-naive-bayes"
                    },
                    {
                        "name": "CategoricalNB_MinMaxScaler.ipynb",
                        "title": "Categorical Naive Bayes With MinMaxScaler",
                        "description": "The Classification tasks using CategoricalNB based on the Naive Bayes algorithm for categorically distributed data with feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/CategoricalNB_MinMaxScaler.ipynb",
                        "keywords": "categorical naive bayes,gaussian naive bayes classifier,multinomial naive bayes classifier,bernoulli naive bayes classifier,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/categorical-naive-bayes-minmaxscaler"
                    },
                    {
                        "name": "CategoricalNB_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Categorical Naive Bayes With MinMaxScaler And Quantile Transformer",
                        "description": "The Classification tasks using CategoricalNB based on the Naive Bayes algorithm for categorically distributed data with feature rescaling technique MinMaxScaler and feature transformation technique Quantile Transformation in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/CategoricalNB_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "categorical naive bayes,gaussian naive bayes classifier,multinomial naive bayes classifier,bernoulli naive bayes classifier,minmaxscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/categorical-naive-bayes-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "GaussianNB.ipynb",
                        "title": "Gaussian Naive Bayes",
                        "description": "The Classification tasks using GaussianNB based on the Gaussian Naive Bayes algorithm that follows Gaussian normal distribution and supports continuous data.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB.ipynb",
                        "keywords": "gaussian naive bayes,gaussian distribution,gaussian naive bayes algorithm,gaussian naive bayes classifier,naive bayes classifier",
                        "display_url": "https://siberian.dev/classification/gaussian-naive-bayes"
                    },
                    {
                        "name": "GaussianNB_MaxAbsScaler.ipynb",
                        "title": "Gaussian Naive Bayes With MaxAbsScaler",
                        "description": "Classification task using Gaussian Naive Bayes Algorithm where the scaling technique used is MaxAbsScaler.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_MaxAbsScaler.ipynb",
                        "keywords": "gaussian naive bayes,gaussian distribution,gaussian naive bayes algorithm,gaussian naive bayes classifier,naive bayes classifier,maxabsscaler",
                        "display_url": "https://siberian.dev/classification/gaussian-navie-bayes-maxabsscaler"
                    },
                    {
                        "name": "GaussianNB_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "title": "Gaussian Naive Bayes With MaxAbsScaler And Polynomial Features",
                        "description": "This code facilitates to solve the problem of classification problem using Gaussian Naive Bayes Algorithm using PolynomialFeatures, MaxAbsScaler techniques.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "keywords": "gaussian naive bayes,gaussian distribution,gaussian naive bayes algorithm,gaussian naive bayes classifier,naive bayes classifier,maxabsscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/gaussian-naive-bayes-maxabsscaler-and-polynomial-features"
                    },
                    {
                        "name": "GaussianNB_MaxAbsScaler_PowerTransformer.ipynb",
                        "title": "Gaussian Naive Bayes With MaxAbsScaler And Power Transformer",
                        "description": "The Classification tasks using GaussianNB based on the Gaussian Naive Bayes algorithm that follows Gaussian normal distribution and supports continuous data; feature scaling is done via MaxAbsScaler while feature transformation via Power Transformer",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_MaxAbsScaler_PowerTransformer.ipynb",
                        "keywords": "gaussian naive bayes,gaussian distribution,gaussian naive bayes algorithm,gaussian naive bayes classifier,naive bayes classifier,maxabsscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/gaussian-naive-bayes-maxabsscaler-and-power-transformer"
                    },
                    {
                        "name": "GaussianNB_MaxAbsScaler_QuantileTransformer.ipynb",
                        "title": "Gaussian Naive Bayes With MaxAbsScaler And Quantile Transformer",
                        "description": "The Classification tasks using GaussianNB based on the Gaussian Naive Bayes algorithm that follows Gaussian normal distribution and supports continuous data; feature scaling is done via MaxAbsScaler while feature transformation via Quantile Transformer",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_MaxAbsScaler_QuantileTransformer.ipynb",
                        "keywords": "gaussian naive bayes,gaussian distribution,gaussian naive bayes algorithm,gaussian naive bayes classifier,naive bayes classifier,maxabsscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/gaussian-navie-bayes-maxabsscaler-and-quantile-transformer"
                    },
                    {
                        "name": "GaussianNB_MinMaxScaler.ipynb",
                        "title": "Gaussian Naive Bayes With MinMaxScaler",
                        "description": "Classification task using Gaussian Naive Bayes Algorithm where the scaling technique used is MaxAbsScaler.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_MinMaxScaler.ipynb",
                        "keywords": "gaussian naive bayes,gaussian distribution,gaussian naive bayes algorithm,gaussian naive bayes classifier,naive bayes classifier,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/gaussian-naive-bayes-minmaxscaler"
                    },
                    {
                        "name": "GaussianNB_Normalize.ipynb",
                        "title": "Gaussian Naive Bayes With Normalization",
                        "description": "Classification task using Gaussian Naive Bayes Algorithm where the scaling technique used is Normalize.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_Normalize.ipynb",
                        "keywords": "gaussian naive bayes,gaussian distribution,gaussian naive bayes algorithm,gaussian naive bayes classifier,naive bayes classifier,normalization",
                        "display_url": "https://siberian.dev/classification/gaussian-naive-bayes-normalization"
                    },
                    {
                        "name": "GaussianNB_PolynomialFeatures.ipynb",
                        "title": "Gaussian Naive Bayes With Polynomial Features",
                        "description": "The Classification tasks using GaussianNB based on the Gaussian Naive Bayes algorithm that follows Gaussian normal distribution and supports continuous data along with feature transformation using PolynomialFeatures.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_PolynomialFeatures.ipynb",
                        "keywords": "gaussian naive bayes,gaussian distribution,gaussian naive bayes algorithm,gaussian naive bayes classifier,naive bayes classifier,polynomial features",
                        "display_url": "https://siberian.dev/classification/gaussian-naive-bayes-polynomial-features"
                    },
                    {
                        "name": "GaussianNB_PowerTransformer.ipynb",
                        "title": "Gaussian Naive Bayes With Power Transformer",
                        "description": "The Classification tasks using GaussianNB based on the Gaussian Naive Bayes algorithm that follows Gaussian normal distribution and supports continuous data along with feature transformation using Power Transformer",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_PowerTransformer.ipynb",
                        "keywords": "gaussian naive bayes,gaussian distribution,gaussian naive bayes algorithm,gaussian naive bayes classifier,naive bayes classifier,power transformer",
                        "display_url": "https://siberian.dev/classification/gaussian-naive-bayes-power-transformer"
                    },
                    {
                        "name": "GaussianNB_QuantileTransformer.ipynb",
                        "title": "Gaussian Naive Bayes With Quantile Transformer",
                        "description": "The Classification tasks using GaussianNB based on the Gaussian Naive Bayes algorithm that follows Gaussian normal distribution and supports continuous data along with feature transformation using Quantile Transformer.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_QuantileTransformer.ipynb",
                        "keywords": "gaussian naive bayes,gaussian distribution,gaussian naive bayes algorithm,gaussian naive bayes classifier,naive bayes classifier,quantile transformer",
                        "display_url": "https://siberian.dev/classification/gaussian-naive-bayes-quantile-transformer"
                    },
                    {
                        "name": "GaussianNB_RobustScaler.ipynb",
                        "title": "Gaussian Naive Bayes With RobustScaler",
                        "description": "Classification task using Gaussian Naive Bayes Algorithm where the scaling technique used is RobustScaler.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_RobustScaler.ipynb",
                        "keywords": "gaussian naive bayes,gaussian distribution,gaussian naive bayes algorithm,gaussian naive bayes classifier,naive bayes classifier,robustscaler",
                        "display_url": "https://siberian.dev/classification/gaussian-naive-bayes-robustscaler"
                    },
                    {
                        "name": "GaussianNB_Scale.ipynb",
                        "title": "Gaussian Naive Bayes With Scale",
                        "description": "Classification task using Gaussian Naive Bayes Algorithm where the scaling technique used is Scale.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_Scale.ipynb",
                        "keywords": "gaussian naive bayes,gaussian distribution,gaussian naive bayes algorithm,gaussian naive bayes classifier,naive bayes classifier,scaling technique",
                        "display_url": "https://siberian.dev/classification/gaussian-naive-bayes-scale"
                    },
                    {
                        "name": "GaussianNB_StandardScaler.ipynb",
                        "title": "Gaussian Naive Bayes With StandardScaler",
                        "description": "Classification task using Gaussian Naive Bayes Algorithm where the scaling technique used is StandardScaler.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_StandardScaler.ipynb",
                        "keywords": "gaussian naive bayes,gaussian distribution,gaussian naive bayes algorithm,gaussian naive bayes classifier,naive bayes classifier,standardscaler",
                        "display_url": "https://siberian.dev/classification/gaussian-naive-bayes-standardscaler"
                    },
                    {
                        "name": "MultinomialNB.ipynb",
                        "title": "MultInomial Naive Bayes Classifier",
                        "description": "The Classification tasks using MultinomialNB based on the Naive Bayes algorithm for multinomially distributed data.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/MultinomialNB.ipynb",
                        "keywords": "multinomial naive bayes,multinomial naive bayes algorithm,multinomial naive bayes classifier,multinomial classifier,multinomial naive bayes sklearn,sklearn naive bayes",
                        "display_url": "https://siberian.dev/classification/multinomial-naive-bayes-classifier"
                    },
                    {
                        "name": "MultinomialNB_MinMaxScaler.ipynb",
                        "title": "MultInomial Naive Bayes Classifier With MinMaxScaler",
                        "description": "Classification tasks using MultinomialNB based on the Naive Bayes algorithm for multinomially distributed data and feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/MultinomialNB_MinMaxScaler.ipynb",
                        "keywords": "multinomial naive bayes,multinomial naive bayes algorithm,multinomial naive bayes classifier,multinomial classifier,multinomial naive bayes sklearn,sklearn naive bayes,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/multinomial-naive-bayes-classifier-minmaxscaler"
                    },
                    {
                        "name": "MultinomialNB_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "MultInomial Naive Bayes Classifier With MinMaxScaler And Quantile Transformer",
                        "description": "Classification tasks using MultinomialNB based on the Naive Bayes algorithm for multinomially distributed data with feature rescaling technique MinMaxScaler and feature transformation technique Quantile Transformation in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/MultinomialNB_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "multinomial naive bayes,multinomial naive bayes algorithm,multinomial naive bayes classifier,multinomial classifier,multinomial naive bayes sklearn,sklearn naive bayes,minmaxscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/multinomial-naive-bayes-classifier-minmaxscaler-and-quantile-transformer"
                    }
                ]
            },
            {
                "name": "Nearest_Centroid",
                "models": [
                    {
                        "name": "NearestCentroidClassifier.ipynb",
                        "title": "Nearest Centroid Classifier",
                        "description": "The Classification task using a simple NearestCentroid. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier"
                    },
                    {
                        "name": "NearestCentroidClassifier_MaxAbsScaler.ipynb",
                        "title": "Nearest Centroid Classifier With MaxAbsScaler",
                        "description": "The Classification task using a simple NearestCentroid and data rescaling technique MaxAbsScaler in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_MaxAbsScaler.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,maxabsscaler",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-maxabsscaler"
                    },
                    {
                        "name": "NearestCentroidClassifier_MaxAbsScaler_PowerTransformer.ipynb",
                        "title": "Nearest Centroid Classifier With MaxAbsScaler And Power Transformer",
                        "description": "The Classification task using a simple NearestCentroid and data rescaling technique MaxAbsScaler and feature transformation PowerTransformer in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_MaxAbsScaler_PowerTransformer.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,maxabsscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-maxabsscaler-and-power-transformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_MaxAbsScaler_QuantileTransformer.ipynb",
                        "title": "Nearest Centroid ClassifierWith MaxAbsScaler And Quantile Transformer",
                        "description": "The Classification task using a simple NearestCentroid and data rescaling technique MaxAbsScaler and feature transformation QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_MaxAbsScaler_QuantileTransformer.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,maxabsscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-maxabsscaler-and-quantile-transformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_MinMaxScaler.ipynb",
                        "title": "Nearest Centroid Classifier With MinMaxScaler",
                        "description": "The Classification task using a simple NearestCentroid and data rescaling technique MinMaxScaler in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_MinMaxScaler.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-minmaxscaler"
                    },
                    {
                        "name": "NearestCentroidClassifier_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Nearest Centroid Classifier With MinMaxScaler And Polynomial Features",
                        "description": "The Classification task using a simple NearestCentroid with feature rescaling technique MinMaxScaler and feature transforming technique Polynomial Features in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,minmaxscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "NearestCentroidClassifier_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Nearest Centroid Classifier With MinMaxScaler And Power Transformer",
                        "description": "The Classification task using a simple NearestCentroid with feature rescaling technique MinMaxScaler and feature tranformation technique used is PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,minmaxscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Nearest Centroid Classifier With MinMaxScaler And Quantile Transformer",
                        "description": "The Classification task using a simple NearestCentroid with feature rescaling technique MinMaxScaler and feature transforming technique Quantile Transformer in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,minmaxscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_normalize.ipynb",
                        "title": "Nearest Centroid Classifier With Normalization",
                        "description": "The Classification task using a simple NearestCentroid and data rescaling technique MinMaxScaler in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_normalize.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,normalization",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-normalization"
                    },
                    {
                        "name": "NearestCentroidClassifier_Normalize_PolynomialFeatures.ipynb",
                        "title": "Nearest Centroid Classifier With Normalization And Polynomial Features",
                        "description": "The Classification task using a simple NearestCentroid where separate rescaling is done using Normalize and feature transformation is done using PolynomialFeatures in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,normalization,polynomial features",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-normalization-and-polynomial-features"
                    },
                    {
                        "name": "NearestCentroidClassifier_Normalize_PowerTransformer.ipynb",
                        "title": "Nearest Centroid Classifier With Normalization And Power Transformer",
                        "description": "The Classification task using a simple NearestCentroid where separate rescaling is done using Normalize and feature transformation is done using PowerTransformer in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_Normalize_PowerTransformer.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,normalization,power transformer",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifiier-normalization-and-power-transformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_Normalize_QuantileTransformer.ipynb",
                        "title": "Nearest Centroid Classifier With Normalization And Quantile Transformer",
                        "description": "The Classification task using a simple NearestCentroid where separate rescaling is done using Normalize and feature transformation is done using Quantile Transformerr in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_Normalize_QuantileTransformer.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,normalization,quantile transformer",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-normalization-and-quantile-transformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_PolynomialFeatures.ipynb",
                        "title": "Nearest Centroid Classifier With Polynomial Features",
                        "description": "The Classification task using a simple NearestCentroid and feature transforming technique Polynomial Features in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_PolynomialFeatures.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,polynomial features",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-polynomial-features"
                    },
                    {
                        "name": "NearestCentroidClassifier_PowerTransformer.ipynb",
                        "title": "Nearest Centroid Classifier With Power Transformer",
                        "description": "The Classification task using a simple NearestCentroid and feature tranformation technique PowerTransformer in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_PowerTransformer.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,power transformer",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-power-transformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_QuantileTransformer.ipynb",
                        "title": "Nearest Centroid Classifier With Quantile Transformer",
                        "description": "The Classification task using a simple NearestCentroid and feature transformation technique QuantileTransformer in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_QuantileTransformer.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,quantile transformer",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-quantile-transformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_RobustScaler.ipynb",
                        "title": "Nearest Centroid Classifier With RobustScaler",
                        "description": "The Classification task using a simple NearestCentroid and data rescaling technique RobustScaler in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_RobustScaler.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,robustscaler",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-robustscaler"
                    },
                    {
                        "name": "NearestCentroidClassifier_scale.ipynb",
                        "title": "Nearest Centroid Classifier With Scale",
                        "description": "The Classification task using a simple NearestCentroid and data rescaling technique MinMaxScaler in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_scale.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,scaling technique",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-scale"
                    },
                    {
                        "name": "NearestCentroidClassifier_Scale_PolynomialFeatures.ipynb",
                        "title": "Nearest Centroid Classifier With Scale And Polynomial Features",
                        "description": "The Classification task using a NearestCentroid Classifier where rescaling is done using Scale and feature transformation is done via Polynomial Features.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_Scale_PolynomialFeatures.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,scaling technique,polynomial features",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-scale-and-polynomial-features"
                    },
                    {
                        "name": "NearestCentroidClassifier_Scale_PowerTransformer.ipynb",
                        "title": "Nearest Centroid Classifier With Scale And Power Transformer",
                        "description": "The Classification task using a simple NearestCentroid where separate rescaling is done using scale and feature transformation is done using PowerTransformer in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_Scale_PowerTransformer.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,scaling technique,power transformer",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-scale-and-power-transformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_Scale_QuantileTransformer.ipynb",
                        "title": "Nearest Centroid Classifier With Scale And Quantile Transformer",
                        "description": "The Classification task using a simple NearestCentroid where separate rescaling is done using Scale and feature transformation is done using Quantile Transformer in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_Scale_QuantileTransformer.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,scaling technique,quantile transformer",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-scale-and-quantile-transformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_StandardScaler.ipynb",
                        "title": "Nearest Centroid Classifier With StandardScaler",
                        "description": "The Classification task using a simple NearestCentroid and data rescaling technique StandardScaler in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_StandardScaler.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,standard scaler",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-standardscaler"
                    },
                    {
                        "name": "NearestCentroidClassifier_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Nearest Centroid Classifier With StandardScaler And Polynomial Features",
                        "description": "The Classification task using a simple NearestCentroid with feature rescaling technique StandardScaler and feature transforming technique Polynomial Features in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,standard scaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "NearestCentroidClassifier_StandardScaler_PowerTransformer.ipynb",
                        "title": "Nearest Centroid Classifier With StandardScaler And Power Transformer",
                        "description": "The Classification task using a simple NearestCentroid with feature rescaling technique StandardScaler and feature tranformation technique PowerTransformer in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,standardscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Nearest Centroid Classifier With StandardScaler And Quantile Transformer",
                        "description": "The Classification task using a simple NearestCentroid with feature rescaling technique StandardScaler and feature tranformation technique QuantileTransformer in a pipeline.The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "nearest centroid classifier,nearest centroid,nearest centroid classifier algorithm,sklearn nearest neighbor,nearest centroid classifier python,standardscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/nearest-centroid-classifier-standardscaler-and-quantile-transformer"
                    }
                ]
            },
            {
                "name": "Other_Ensemble",
                "models": [
                    {
                        "name": "StackingClassifier.ipynb",
                        "title": "Stacking Classifier",
                        "description": "The Classification task using a Stacking Classifier. It implements an ensemble learning technique where the predictions of multiple classifiers get stacked and are used as features to train the meta-classifier which makes the final prediction.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Other_Ensemble/StackingClassifier.ipynb",
                        "keywords": "stacking classifier,stacking model,stacking classifier sklearn,stacking classifier example,stacking classifier machine learning",
                        "display_url": "https://siberian.dev/classification/stacking-classifier"
                    }
                ]
            },
            {
                "name": "Radius_Neighbors",
                "models": [
                    {
                        "name": "RadiusNeighborsClassifier.ipynb",
                        "title": "Radius Neighbors Classifier",
                        "description": "The Classification task using a simple Radius Neighbor Classifier. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "title": "Radius Neighbors Classifier With MaxAbsScaler And Polynomial Features",
                        "description": "This code facilitates to solve the problem of classification problem using Radius Neighbor Classifier Algorithm using PolynomialFeatures, MaxAbsScaler techniques.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,maxabsscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-maxabsscaler-and-polynomial-features"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_MaxAbsScaler_PowerTransformer.ipynb",
                        "title": "Radius Neighbors Classifier With MaxAbsScaler And Power Transformer",
                        "description": "This code facilitates to solve the problem of classification problem using Radius Neighbor Classifier Algorithm using PowerTransformer, MaxAbsScaler techniques.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_MaxAbsScaler_PowerTransformer.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,maxabsscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-maxabsscaler-and-power-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_MaxAbsScaler_QuantileTransformer.ipynb",
                        "title": "Radius Neighbors Classifier With MaxAbsScaler And Quantile Transformer",
                        "description": "The Classification task using a simple Radius Neighbor Classifier using MaxAbsScaler with pipeline and Quantile Transformer Feature Transformation. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_MaxAbsScaler_QuantileTransformer.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,maxabsscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-maxabsscaler-and-quantile-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_MinMaxScaler.ipynb",
                        "title": "Radius Neighbors Classifier With MinMaxScaler",
                        "description": "The Classification task using a simple Radius Neighbor Classifier, with data being scaled by MinMaxScaler. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_MinMaxScaler.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-minmaxscaler"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Radius Neighbors Classifier With MinMaxScaler And Polynomial Features",
                        "description": "The Classification task using a simple Radius Neighbor Classifier using MinMax Scaler with pipeline and Polynomial Feature Transformation. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,minmaxscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Radius Neighbors Classifier With MinMaxScaler And Power Transformer",
                        "description": "The Classification task using a simple Radius Neighbor Classifier using MinMax Scaler with pipeline and Power Transformation.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,minmaxscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Radius Neighbors Classifier With MinMaxScaler And Quantile Transformer",
                        "description": "Classification technique using RadiusNeighborsClassifier with feature rescaling technique called MinMaxScaler and feature transformation technique called Quantile Transformer.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,minmaxscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_Normalize.ipynb",
                        "title": "Radius Neighbors Classifier With Normalization",
                        "description": "The Classification task using a simple Radius Neighbor Classifier, with data being scaled by Normalizer. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_Normalize.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,normalization",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-normalization"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_Normalize_PowerTransformer.ipynb",
                        "title": "Radius Neighbors Classifier With Normalization And Power Transformer",
                        "description": "The Classification task using a simple Radius Neighbor Classifier with separate feature scaling using Normalize pipelining Power Transformer which is a feature transformation technique. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_Normalize_PowerTransformer.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,normalization,power transformer",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-normalization-and-power-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_Normalize_QuantileTransformer.ipynb",
                        "title": "Radius Neighbors Classifier With Normalization And Quantile Transformer",
                        "description": "The Classification task using a simple Radius Neighbor Classifier with separate feature scaling using Normalize pipelining QuantileTransformer which is a feature transformation technique. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_Normalize_QuantileTransformer.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,normalization,quantile transformer",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-normalization-and-quantile-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_PolynomialFeatures.ipynb",
                        "title": "Radius Neighbors Classifier With Polynomial Features",
                        "description": "The Classification task using a simple Radius Neighbor Classifier with pipeline and Polynomial Features Transformation. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_PolynomialFeatures.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,ploynomial features",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-polynomial-features"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_PowerTransformer.ipynb",
                        "title": "Radius Neighbors Classifier With Power Transformer",
                        "description": "The Classification task using a simple Radius Neighbor Classifier with pipeline and PowerTransformer Feature Transformation. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_PowerTransformer.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,power transformer",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-power-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_QuantileTransformer.ipynb",
                        "title": "Radius Neighbors Classifier With Quantile Transformer",
                        "description": "The Classification task using a simple Radius Neighbor Classifier with pipeline and QuantileTransformer Feature Transformation. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_QuantileTransformer.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,quantile transformer",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-quantile-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_RobustScaler.ipynb",
                        "title": "Radius Neighbors Classifier With RobustScaler",
                        "description": "The Classification task using a simple Radius Neighbor Classifier, with data being scaled by RobustScaler. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_RobustScaler.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,robustscaler",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-robustscaler"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_RobustScaler_PowerTransformer.ipynb",
                        "title": "Radius Neighbors Classifier With RobustScaler And Power Transformer",
                        "description": "The Classification task using a simple Radius Neighbor Classifier using RobustScaler with pipeline and Power Transformer Feature Transformation. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,robustscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_Scale.ipynb",
                        "title": "Radius Neighbors Classifier With Scale",
                        "description": "The Classification task using a simple Radius Neighbor Classifier, with data being scaled by scale. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_Scale.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,scaling technique",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-scale"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_Scale_PolynomialFeatures.ipynb",
                        "title": "Radius Neighbors Classifier With Scale And Polynomial Features",
                        "description": "The Classification task using a simple Radius Neighbor Classifier with separate feature scaling using Scale pipelining Power Transformer which is a feature transformation technique. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_Scale_PolynomialFeatures.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,scaling technique,polynomial features",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-scale-and-polynomial-features"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_Scale_PowerTransformer.ipynb",
                        "title": "Radius Neighbors Classifier With Scale And Power Transformer",
                        "description": "The Classification task using a simple Radius Neighbor Classifier with separate feature scaling using Scale pipelining Power Transformer which is a feature transformation technique. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_Scale_PowerTransformer.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,scaling technique,power transformer",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-scale-and-power-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_Scale_QuantileTransformer.ipynb",
                        "title": "Radius Neighbors Classifier With Scale And Quantile Transformer",
                        "description": "The Classification task using a simple Radius Neighbor Classifier with separate feature scaling using Scale pipelining Quantile Transformer which is a feature transformation technique. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_Scale_QuantileTransformer.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,scaling technique,quantile transformer",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-scale-and-quantile-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_StandardScaler.ipynb",
                        "title": "Radius Neighbors Classifier With StandardScaler",
                        "description": "The Classification task using a simple Radius Neighbor Classifier, with data being scaled by StandardScaler. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_StandardScaler.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,standardscaler",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-standardscaler"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Radius Neighbors Classifier With StandardScaler And Polynomial Features",
                        "description": "The Classification task using a simple Radius Neighbor Classifier using Standard Scaler with pipeline and Polynomial Features Feature Transformation. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,standardscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_StandardScaler_PowerTransformer.ipynb",
                        "title": "Radius Neighbors Classifier With StandardScaler And Power Transformer",
                        "description": "The Classification task using a simple Radius Neighbor Classifier using Standard Scaler with pipeline and Power Transformer Feature Transformation. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,standardscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Radius Neighbors Classifier With StandardScaler And Quantile Transformer",
                        "description": "The Classification task using a simple Radius Neighbor Classifier using Standard Scaler with pipeline and Quantile Transformer Feature Transformation. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "radiusneighborsclassifier,knn classifier, knn,sklearn knn,standardscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/radius-neighbors-classifier-standardscaler-and-quantile-transformer"
                    }
                ]
            },
            {
                "name": "Random_Forest",
                "models": [
                    {
                        "name": "RandomForestClassifier.ipynb",
                        "title": "Random Forest Classifier",
                        "description": "The Classification tasks using a simple RandomForestClassifier based on the Ensemble Learning technique. It is a meta estimator that fits multiple decision trees and uses averaging to improve the predictive accuracy and control over-fitting.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Random_Forest/RandomForestClassifier.ipynb",
                        "keywords": "random forest classifier,random forest,random forest algorithm,random forest classifier sklearn,random forest classifier example",
                        "display_url": "https://siberian.dev/classification/random-forest-classifier"
                    },
                    {
                        "name": "RandomForestClassifier_MaxAbsScaler.ipynb",
                        "title": "Random Forest Classifier With MaxAbsScaler",
                        "description": "The Classification tasks using a simple RandomForestClassifier based on the Ensemble Learning technique along with data rescaling using MaxAbsScaler. Random Forest is a meta estimator that fits multiple decision trees and uses averaging to improve the predictive accuracy and control over-fitting.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Random_Forest/RandomForestClassifier_MaxAbsScaler.ipynb",
                        "keywords": "random forest classifier,random forest,random forest algorithm,random forest classifier sklearn,random forest classifier example,maxabsscaler",
                        "display_url": "https://siberian.dev/classification/random-forest-classifier-maxabsscaler"
                    },
                    {
                        "name": "RandomForestClassifier_MinMaxScaler.ipynb",
                        "title": "Random Forest Classifier With MinMaxScaler",
                        "description": "The Classification tasks using a simple RandomForestClassifier based on the Ensemble Learning technique along with data rescaling using MinMaxScaler. Random Forest is a meta estimator that fits multiple decision trees and uses averaging to improve the predictive accuracy and control over-fitting.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Random_Forest/RandomForestClassifier_MinMaxScaler.ipynb",
                        "keywords": "random forest classifier,random forest,random forest algorithm,random forest classifier sklearn,random forest classifier example,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/random-forest-classifier-minmaxscaler"
                    },
                    {
                        "name": "RandomForestClassifier_Normalize.ipynb",
                        "title": "Random Forest Classifier With Normalization",
                        "description": "The Classification tasks using a simple RandomForestClassifier based on the Ensemble Learning technique and feature rescaling technique Normalize. It is a meta estimator that fits multiple decision trees and uses averaging to improve the predictive accuracy and control over-fitting.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Random_Forest/RandomForestClassifier_Normalize.ipynb",
                        "keywords": "random forest classifier,random forest,random forest algorithm,random forest classifier sklearn,random forest classifier example,normalization",
                        "display_url": "https://siberian.dev/classification/random-forest-classifier-normalization"
                    },
                    {
                        "name": "RandomForestClassifier_RobustScaler.ipynb",
                        "title": "Random Forest Classifier With RobustScaler",
                        "description": "The Classification tasks using a simple RandomForestClassifier based on the Ensemble Learning technique along with data rescaling using RobustScaler. Random Forest is a meta estimator that fits multiple decision trees and uses averaging to improve the predictive accuracy and control over-fitting.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Random_Forest/RandomForestClassifier_RobustScaler.ipynb",
                        "keywords": "random forest classifier,random forest,random forest algorithm,random forest classifier sklearn,random forest classifier example,robustscaler",
                        "display_url": "https://siberian.dev/classification/random-forest-classifier-robustscaler"
                    },
                    {
                        "name": "RandomForestClassifier_StandardScaler.ipynb",
                        "title": "Random Forest Classifier With StandardScaler",
                        "description": "The Classification tasks using a simple RandomForestClassifier based on the Ensemble Learning technique along with data rescaling using StandardScaler. Random Forest is a meta estimator that fits multiple decision trees and uses averaging to improve the predictive accuracy and control over-fitting.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Random_Forest/RandomForestClassifier_StandardScaler.ipynb",
                        "keywords": "random forest classifier,random forest,random forest algorithm,random forest classifier sklearn,random forest classifier example,standardscaler",
                        "display_url": "https://siberian.dev/classification/random-forest-classifier-standardscaler"
                    }
                ]
            },
            {
                "name": "Support_Vector_Machine",
                "models": [
                    {
                        "name": "LinearSVC.ipynb",
                        "title": "Linear Support Vector Classification",
                        "description": "The Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,linear svc",
                        "display_url": "https://siberian.dev/classification/linear-svc"
                    },
                    {
                        "name": "LinearSVC_MaxAbsScaler.ipynb",
                        "title": "Linear Support Vector Classification With MaxAbsScaler",
                        "description": "The Classification task using LinearSVC using MaxAbsScaler as Feature Rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_MaxAbsScaler.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,linear svc,maxabsscaler",
                        "display_url": "https://siberian.dev/classification/linear-svc-maxabsscaler"
                    },
                    {
                        "name": "LinearSVC_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "title": "Linear Support Vector Classification With MaxAbsScaler And Polynomial Features",
                        "description": "The Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique StandardScaler and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,linear svc,maxabsscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/linear-svc-maxabsscaler-and-polynomial-features"
                    },
                    {
                        "name": "LinearSVC_MaxAbsScaler_PowerTransformer.ipynb",
                        "title": "Linear Support Vector Classification With MaxAbsScaler And Power Transformer",
                        "description": "The Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique MaxAbsScaler and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_MaxAbsScaler_PowerTransformer.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,maxabsscaler,power transformer,linear svc",
                        "display_url": "https://siberian.dev/classification/linear-svc-maxabsscaler-and-power-transformer"
                    },
                    {
                        "name": "LinearSVC_MaxAbsScaler_QuantileTransformer.ipynb",
                        "title": "Linear Support Vector Classification With MaxAbsScaler And Quantile Transformer",
                        "description": "The Classification task using LinearSVC using MaxAbsScaler with pipeline and Quantile Transformer Feature Transformation.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_MaxAbsScaler_QuantileTransformer.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,quantile transformer,linear svc",
                        "display_url": "https://siberian.dev/classification//linear-svc-maxabsscaler-and-quantile-transformer"
                    },
                    {
                        "name": "LinearSVC_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Linear Support Vector Classification With MinMaxScaler And Polynomial Features",
                        "description": "The Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique MinMaxScaler and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,minmaxscaler,polynomial features,linear svc",
                        "display_url": "https://siberian.dev/classification/linear-svc-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "LinearSVC_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Linear Support Vector Classification With MinMaxScaler And Power Transformer",
                        "description": "The Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique MinMaxScaler and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,minmaxscaler,power transformer,linear svc",
                        "display_url": "https://siberian.dev/classification/linear-svc-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "LinearSVC_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Linear Support Vector Classification With MinMaxScaler And Quantile Transformer",
                        "description": "The Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique MinMaxScaler and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,minmaxscaler,quantile transformer,linear svc",
                        "display_url": "https://siberian.dev/classification/linear-svc-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "LinearSVC_Normalize.ipynb",
                        "title": "Linear Support Vector Classification With Normalization",
                        "description": "The Classification task using a simple Linear Support Vector Classifier (LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique Normalize",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_Normalize.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,normalization,linear svc",
                        "display_url": "https://siberian.dev/classification/linear-svc-normalization"
                    },
                    {
                        "name": "LinearSVC_Normalize_PolynomialFeatures.ipynb",
                        "title": "Linear Support Vector Classification With Scale And Polynomial Features",
                        "description": "The Classification task using a simple Linear Support Vector Classifier (LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique Normalize and feature transformation technique Polynomial Features in a pipeline and separately as well.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,scaling technique,polynomial features,linear svc",
                        "display_url": "https://siberian.dev/classification/linear-svc-scale-and-polynomial-features"
                    },
                    {
                        "name": "LinearSVC_Normalize_QuantileTransformer.ipynb",
                        "title": "Linear Support Vector Classification With Normalization And Quantile Transformer",
                        "description": "Classification analysis using the LinearSVC Classifier where rescaling method used is Normalize and feature transformation is done via Quantile Transformer.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_Normalize_QuantileTransformer.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,normalization,quantile transformer,linear svc",
                        "display_url": "https://siberian.dev/classification/linear-svc-normalization-and-quantile-transformer"
                    },
                    {
                        "name": "LinearSVC_PowerTransformer.ipynb",
                        "title": "Linear Support Vector Classification With Power Transformer",
                        "description": "The Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_PowerTransformer.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,power transformer,linear svc",
                        "display_url": "https://siberian.dev/classification/linear-svc-power-transformer"
                    },
                    {
                        "name": "LinearSVC_QuantileTransformer.ipynb",
                        "title": "Linear Support Vector Classification With Quantile Transformer",
                        "description": "The Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_QuantileTransformer.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,quantile transformer,linear svc",
                        "display_url": "https://siberian.dev/classification/linear-svc-quantile-transformer"
                    },
                    {
                        "name": "LinearSVC_RobustScaler.ipynb",
                        "title": "Linear Support Vector Classification With RobustScaler",
                        "description": "The Classification task using LinearSVC using RobustScaler with pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_RobustScaler.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,robustscaler,linear svc",
                        "display_url": "https://siberian.dev/classification/linear-svc-robustscaler"
                    },
                    {
                        "name": "LinearSVC_RobustScaler_PowerTransformer.ipynb",
                        "title": "Linear Support Vector Classification With RobustScaler And Power Transformer",
                        "description": "The Classification task using LinearSVC using RobustScaler with pipeline and Power Transformer Feature Transformation.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,robustscaler,power transformer,linear svc",
                        "display_url": "https://siberian.dev/classification/linear-svc-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "LinearSVC_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Linear Support Vector Classification With RobustScaler And Quantile Transformer",
                        "description": "The Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique RobustScaler and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,robustscaler,quantile transformer,linear svc",
                        "display_url": "https://siberian.dev/classification/linear-svc-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "LinearSVC_Scale.ipynb",
                        "title": "Linear Support Vector Classification With Scale",
                        "description": "The Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling using Scale.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_Scale.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,linear svc,scaling technique",
                        "display_url": "https://siberian.dev/classification/linear-svc-scale"
                    },
                    {
                        "name": "LinearSVC_Scale_PolynomialFeatures.ipynb",
                        "title": "Linear Support Vector Classification With Scale And Polynomial Features",
                        "description": "The Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with separate feature rescaling using Scale and pipelining PolynomialFeatures which is a feature transformation technique",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_Scale_PolynomialFeatures.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,linear svc,scaling technique,polynomial features",
                        "display_url": "https://siberian.dev/classification/linear-svc-scale-and-polynomial-features"
                    },
                    {
                        "name": "LinearSVC_Scale_PowerTransformer.ipynb",
                        "title": "Linear Support Vector Classification With Scale And Power Transformer",
                        "description": "The Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with separate feature rescaling using Scale and pipelining PowerTransformer which is a feature transformation technique",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_Scale_PowerTransformer.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,linear svc,scaling technique,power transformer",
                        "display_url": "https://siberian.dev/classification/linear-svc-scale-and-power-transformer"
                    },
                    {
                        "name": "LinearSVC_Scale_QuantileTransformer.ipynb",
                        "title": "Linear Support Vector Classification With Scale And Quantile Transformer",
                        "description": "The Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique Scale and feature transformation technique QuantileTransformer in a pipeline and separately as well.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_Scale_QuantileTransformer.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,linear svc,scaling technique,quantile transformer",
                        "display_url": "https://siberian.dev/classification/linear-svc-scale-and-quantile-transformer"
                    },
                    {
                        "name": "LinearSVC_StandardScaler.ipynb",
                        "title": "Linear Support Vector Classification With StandardScaler",
                        "description": "The Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_StandardScaler.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,linear svc,standardscaler",
                        "display_url": "https://siberian.dev/classification/linear-svc-standardscaler"
                    },
                    {
                        "name": "LinearSVC_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Linear Support Vector Classification With StandardScaler And Polynomial Features",
                        "description": "The Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique StandardScaler and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,linear svc,standardscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/linear-svc-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "LinearSVC_StandardScaler_PowerTransformer.ipynb",
                        "title": "Linear Support Vector Classification With StandardScaler And Power Transformer",
                        "description": "The Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique StandardScaler and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,linear svc,standardscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/linear-svc-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "LinearSVC_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Linear Support Vector Classification With StandardScaler And Quantile Transformer",
                        "description": "The Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique StandardScaler and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "linear support vector classification,support vector classification,svc,svm,svc algorithm,svm algorithm,linear svc,standardscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/linear-svc-standardscaler-and-quantile-transformer"
                    },
                    {
                        "name": "NuSVC.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC)",
                        "description": "The Classification task using a simple Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm",
                        "display_url": "https://siberian.dev/classification/nusvc"
                    },
                    {
                        "name": "NuSVC_MaxAbsScaler.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With MaxAbsScaler",
                        "description": "The Classification task using Nu-Support Vector Classifier (NuSVC) based on the Support Vector Machine algorithm with rescaling technique as MaxAbs Scaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_MaxAbsScaler.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,maxabsscaler",
                        "display_url": "https://siberian.dev/classification/nusvc-maxabsscaler"
                    },
                    {
                        "name": "NuSVC_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With MaxAbsScaler And Polynomial Features",
                        "description": "The Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with Polynomial Features as Feature Transformation Technique with rescaling technique as MaxAbsScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,maxabsscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/nusvc-maxabsscaler-and-polynomial-features"
                    },
                    {
                        "name": "NuSVC_MaxAbsScaler_PowerTransformer.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With MaxAbsScaler And Power Tranformer",
                        "description": "The Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique and rescaling technique as MaxAbs Scaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_MaxAbsScaler_PowerTransformer.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,maxabsscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/nusvc-maxabsscaler-and-power-tranformer"
                    },
                    {
                        "name": "NuSVC_MaxAbsScaler_QuantileTransformer.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With MaxAbsScaler And Quantile Transformer",
                        "description": "The Classification task using a simple Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with feature rescaling technique MaxAbsScaler and feature transformation technique QuantileTransformer in pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_MaxAbsScaler_QuantileTransformer.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,maxabsscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/nusvc-maxabsscaler-and-quantile-transformer"
                    },
                    {
                        "name": "NuSVC_MinMaxScaler.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With MinMaxScaler",
                        "description": "The Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with MinMaxScaler as feature rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_MinMaxScaler.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/nusvc-minmaxscaler"
                    },
                    {
                        "name": "NuSVC_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With MinMaxScaler And Polynomial Features",
                        "description": "The Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with Polynomial Features as Feature Transformation Technique with rescaling technique as MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,minmaxscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/nusvc-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "NuSVC_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With MinMaxScaler And Power Transformer",
                        "description": "The Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique with rescaling technique as MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,minmaxscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/nusvc-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "NuSVC_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With MinMaxScaler And Quantile Transformer",
                        "description": "The Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with QuantileTransformer as Feature Transformation Technique with rescaling technique as MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,minmaxscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/nusvc-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "NuSVC_Normalize.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With Normalization",
                        "description": "The Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with Normalize as feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_Normalize.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,normalization",
                        "display_url": "https://siberian.dev/classification/nusvc-normalization"
                    },
                    {
                        "name": "NuSVC_Normalize_PowerTransformer.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With Normalization And Power Transformer",
                        "description": "The Classification task using NuSVC Classifier with Normalizer feature scaling technique and PowerTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_Normalize_PowerTransformer.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,normalization,power transformer",
                        "display_url": "https://siberian.dev/classification/nusvc-normalization-and-power-transformer"
                    },
                    {
                        "name": "NuSVC_PolynomialFeatures.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With Polynomial Features",
                        "description": "The Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_PolynomialFeatures.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,polynomial features",
                        "display_url": "https://siberian.dev/classification/nusvc-polynomial-features"
                    },
                    {
                        "name": "NuSVC_PowerTransformer.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With Power Transformer",
                        "description": "The Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_PowerTransformer.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,power transformer",
                        "display_url": "https://siberian.dev/classification/nusvc-power-transformer"
                    },
                    {
                        "name": "NuSVC_QuantileTransformer.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With Quantile Transformer",
                        "description": "The Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with QuantileTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_QuantileTransformer.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,quantile transformer",
                        "display_url": "https://siberian.dev/classification/nusvc-quantile-transformer"
                    },
                    {
                        "name": "NuSVC_RobustScaler.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With RobustScaler",
                        "description": "The Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with RobustScaler as feature rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_RobustScaler.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,robustscaler",
                        "display_url": "https://siberian.dev/classification/nusvc-robustscaler"
                    },
                    {
                        "name": "NuSVC_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With RobustScaler And Polynomial Features",
                        "description": "The Classification task using a simple Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with feature rescaling technique RobustScaler and feature transformation technique PolynomialFeatures in pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,robustscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/nusvc-robustscaler-and-polynomial-features"
                    },
                    {
                        "name": "NuSVC_RobustScaler_PowerTransformer.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With RobustScaler And Power Transformer",
                        "description": "The Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique and rescaling technique as Robust Scaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,robustscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/nusvc-robust-scaler-and-power-transformer"
                    },
                    {
                        "name": "NuSVC_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With RobustScaler And Quantile Transformer",
                        "description": "The Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with Quantile Transformer as Feature Transformation Technique and rescaling technique as Robust Scaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,robustscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/nusvc-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "NuSVC_Scale.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With Scale",
                        "description": "The Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with Scale as feature rescaling technique",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_Scale.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,scaling technique",
                        "display_url": "https://siberian.dev/classification/nusvc-scale"
                    },
                    {
                        "name": "NuSVC_Scale_PolynomialFeatures.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With Scale And Polynomial Features",
                        "description": "The Classification task using a simple Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with feature rescaling technique Scaler and feature transformation technique PolynomialFeatures in pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_Scale_PolynomialFeatures.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,scaling technique,polynomial features",
                        "display_url": "https://siberian.dev/classification/nusvc-scale-and-polynomial-features"
                    },
                    {
                        "name": "NuSVC_Scale_PowerTransformer.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With Scale And Power Transformer",
                        "description": "The Classification task using a simple Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with Scaler as feature rescaling technique separately and PowerTransformer as feature transformation technique in pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_Scale_PowerTransformer.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,scaling technique,power transformer",
                        "display_url": "https://siberian.dev/classification/nusvc-scale-and-power-transformer"
                    },
                    {
                        "name": "NuSVC_StandardScaler.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With StandardScaler",
                        "description": "The Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm and feature rescaling technique StandardScaler in a pipeline. The implementation of NuSVC is based on libsvm.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_StandardScaler.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,standardscaler",
                        "display_url": "https://siberian.dev/classification/nusvc-standardscaler"
                    },
                    {
                        "name": "NuSVC_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With StandardScaler And Polynomial Features",
                        "description": "The Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with StandardScaler feature scaling technique and PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,standardscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/nusvc-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "NuSVC_StandardScaler_PowerTransformer.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With StandardScaler And Power Transformer",
                        "description": "The Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with StandardScaler feature scaling technique and PowerTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,standardscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/nusvc-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "NuSVC_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Nu-Support Vector Classification(NuSVC) With StandardScaler And Quantile Transformer",
                        "description": "The Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with StandardScaler feature scaling technique and QuantileTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "nu-support vector classification,nusvc,svm,support vector machine,nu svm,standardscaaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/nusvc-standardscaler-and-quantile-transformer"
                    },
                    {
                        "name": "SVC.ipynb",
                        "title": "Support Vector Classification(SVC)",
                        "description": "The Classification task using simple Support Vector Classifier(SVC) based on the Support Vector Machine algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm",
                        "display_url": "https://siberian.dev/classification/svc"
                    },
                    {
                        "name": "SVC_MaxAbsScaler.ipynb",
                        "title": "Support Vector Classification(SVC) With MaxAbsScaler",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with MaxAbsScaler feature scaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_MaxAbsScaler.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,maxabsscaler",
                        "display_url": "https://siberian.dev/classification/svc-maxabsscaler"
                    },
                    {
                        "name": "SVC_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "title": "Support Vector Classification(SVC) With MaxAbsScaler And Polynomial Features",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with MaxAbsScaler feature scaling technique and PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,maxabsscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/svc-maxabsscaler-and-polynomial-features"
                    },
                    {
                        "name": "SVC_MinMaxScaler.ipynb",
                        "title": "Support Vector Classification(SVC) With MinMaxScaler",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with MinMaxScaler as feature rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_MinMaxScaler.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/svc-minmaxscaler"
                    },
                    {
                        "name": "SVC_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Support Vector Classification With MinMaxScaler And Polynomial Features",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with MinMaxScaler feature scaling technique and PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,minmaxscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/svc-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "SVC_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Support Vector Classification With MinMaxScaler And Power Transformer",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique with rescaling technique as MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,minmaxscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/svc-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "SVC_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Support Vector Classification With MinMaxScaler And Quantile Transformer",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with QuantileTransformer as Feature Transformation Technique with rescaling technique as MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,minmaxscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/svc-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "SVC_Normalize.ipynb",
                        "title": "Support Vector Classification(SVC) With Normalization",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with Normalize as feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_Normalize.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,normalization",
                        "display_url": "https://siberian.dev/classification/svc-normalization"
                    },
                    {
                        "name": "SVC_Normalize_PolynomialFeatures.ipynb",
                        "title": "Support Vector Classification(SVC) With Normalization And Polynomial Features",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with normalize feature scaling technique and PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,normalization,polynomial features",
                        "display_url": "https://siberian.dev/classification/svc-normalization-and-polynomial-features"
                    },
                    {
                        "name": "SVC_Normalize_PowerTransformer.ipynb",
                        "title": "Support Vector Classification(SVC) With Normalization And Power Transformer",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with normalize feature scaling technique seperately and PowerTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_Normalize_PowerTransformer.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,normalization,power transformer",
                        "display_url": "https://siberian.dev/classification/svc-normalization-and-power-transformer"
                    },
                    {
                        "name": "SVC_Normalize_QuantileTransformer.ipynb",
                        "title": "Support Vector Classification(SVC) With Normalization And Quantile Transformer",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with normalize feature scaling technique seperately and QuantileTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_Normalize_QuantileTransformer.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,normalization,quantile transformer",
                        "display_url": "https://siberian.dev/classification/svc-normalization-and-quantile-transformer"
                    },
                    {
                        "name": "SVC_PolynomialFeatures.ipynb",
                        "title": "Support Vector Classification(SVC) With Polynomial Features",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_PolynomialFeatures.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,polynomial features",
                        "display_url": "https://siberian.dev/classification/svc-polynomial-features"
                    },
                    {
                        "name": "SVC_PowerTransformer.ipynb",
                        "title": "Support Vector Classification(SVC) With Power Transformer",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_PowerTransformer.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,power transformer",
                        "display_url": "https://siberian.dev/classification/svc-power-transformer"
                    },
                    {
                        "name": "SVC_QuantileTransformer.ipynb",
                        "title": "Support Vector Classification(SVC) With Quantile Transformer",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_QuantileTransformer.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,quantile transformer",
                        "display_url": "https://siberian.dev/classification/svc-quantile-transformer"
                    },
                    {
                        "name": "SVC_RobustScaler.ipynb",
                        "title": "Support Vector Classification(SVC) With RobustScaler",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with RobustScaler as feature rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_RobustScaler.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,robustscaler",
                        "display_url": "https://siberian.dev/classification/svc-robustscaler"
                    },
                    {
                        "name": "SVC_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "Support Vector Classification(SVC) With RobustScaler And Polynomial Features",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with RobustScaler feature scaling technique and PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,robustscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/svc-robustscaler-and-polynomial-features"
                    },
                    {
                        "name": "SVC_RobustScaler_PowerTransformer.ipynb",
                        "title": "Support Vector Classification(SVC) With RobustScaler And Power Transformer",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique and rescaling technique as Robust Scaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,robustscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/svc-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "SVC_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Support Vector Classification(SVC) With RobustScaler And Quantile Transformer",
                        "description": "The Classification task using Support Vector Classifier (SVC) based on the Support Vector Machine algorithm with QuantileTransformer as Feature Transformation Technique and rescaling technique as Robust Scaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,robustscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/svc-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "SVC_Scale.ipynb",
                        "title": "Support Vector Classification(SVC) With Scale",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with Scale as feature rescaling technique",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_Scale.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,scaling technique",
                        "display_url": "https://siberian.dev/classification/svc-scale"
                    },
                    {
                        "name": "SVC_Scale_QuantileTransformer.ipynb",
                        "title": "Support Vector Classification(SVC) With Scale And Quantile Transformer",
                        "description": "The Classification task using simple Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with data rescaling technique Scale separately and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_Scale_QuantileTransformer.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,scaling technique,quantile transformer",
                        "display_url": "https://siberian.dev/classification/svc-scale-and-quantile-transformer"
                    },
                    {
                        "name": "SVC_StandardScaler.ipynb",
                        "title": "Support Vector Classification(SVC) With StandardScaler",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_StandardScaler.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,standardscaler",
                        "display_url": "https://siberian.dev/classification/svc-standardscaler"
                    },
                    {
                        "name": "SVC_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Support Vector Classification(SVC) With StandardScaler And Polynomial Features",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with PolynomialFeatures as Feature Transformation Technique rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,standardscaler,polynomial features",
                        "display_url": "https://siberian.dev/classification/svc-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "SVC_StandardScaler_PowerTransformer.ipynb",
                        "title": "Support Vector Classification(SVC) With StandardScaler And Power Transformer",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,standardscaler,power transformer",
                        "display_url": "https://siberian.dev/classification/svc-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "SVC_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Support Vector Classification(SVC) With StandardScaler And Quantile Transformer",
                        "description": "The Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with QuantileTransformer as Feature Transformation Technique rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "support vector classification,svc,svc algorithm,support vector classification algorithm,svm,svm algorithm,support vector machine,support vector machine algorithm,standardscaler,quantile transformer",
                        "display_url": "https://siberian.dev/classification/svc-standardscaler-and-quantile-transformer"
                    }
                ]
            },
            {
                "name": "XGBoost",
                "models": [
                    {
                        "name": "XGBoostClassifier.ipynb",
                        "title": "Extreme Gradient Boosting Classifier(XGBoost)",
                        "description": "The Classification task using XGBoostClassifier under the XGBoost framework. It is a decision Tree-based ensemble Machine Learning algorithm that uses a Gradient Boosting framework.",
                        "URL": "https://cdn.siberian.dev/code/Classification/XGBoost/XGBoostClassifier.ipynb",
                        "keywords": "extreme gradient boosting classifier,xgboost,xgboost algorithm,extreme gradient boosting,extreme gradient boosting with xgboost,xgboost framework",
                        "display_url": "https://siberian.dev/classification/xgboost-classifier"
                    },
                    {
                        "name": "XGBoostClassifier_DMatrix.ipynb",
                        "title": "Extreme Gradient Boosting Classifier (XGBoost) Using DMatrix",
                        "description": "The Classification task using XGBoost along with the DMatrix. DMatrix is an internal data structure that gets used by the XGBoost framework. It is optimized for both memory efficiency and training speed.",
                        "URL": "https://cdn.siberian.dev/code/Classification/XGBoost/XGBoostClassifier_DMatrix.ipynb",
                        "keywords": "extreme gradient boosting classifier,xgboost,xgboost algorithm,extreme gradient boosting,extreme gradient boosting with xgboost,xgboost framework,",
                        "display_url": "https://siberian.dev/classification/xgboost-classifier-dmatrix"
                    },
                    {
                        "name": "XGBoostClassifier_MaxAbsScaler.ipynb",
                        "title": "Extreme Gradient Boosting Classifier (XGBoost) With MaxAbsScaler",
                        "description": "The Classification task using XGBoostClassifier. Even though data rescaling is an optional operation in the case of any tree-based algorithm, this template utilizes MaxAbsScaler to understand the effect on model performance.",
                        "URL": "https://cdn.siberian.dev/code/Classification/XGBoost/XGBoostClassifier_MaxAbsScaler.ipynb",
                        "keywords": "extreme gradient boosting classifier,xgboost,xgboost algorithm,extreme gradient boosting,extreme gradient boosting with xgboost,xgboost framework,maxabsscaler",
                        "display_url": "https://siberian.dev/classification/xgboost-classifier-maxabsscaler"
                    },
                    {
                        "name": "XGBoostClassifier_MinMaxScaler.ipynb",
                        "title": "Extreme Gradient Boosting Classifier (XGBoost) With MinMaxScaler",
                        "description": "The Classification task using XGBoostClassifier along with MinMaxScaler Rescaling Technique. The XGBoost (eXtreme Gradient Boosting) is a popular and efficient open-source implementation of the gradient-boosted trees algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Classification/XGBoost/XGBoostClassifier_MinMaxScaler.ipynb",
                        "keywords": "extreme gradient boosting classifier,xgboost,xgboost algorithm,extreme gradient boosting,extreme gradient boosting with xgboost,xgboost framework,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/xgboost-classifier-minmaxscaler"
                    },
                    {
                        "name": "XGBoostClassifier_Normalize.ipynb",
                        "title": "Extreme Gradient Boosting Classifier (XGBoost) With Normalization",
                        "description": "Classification analysis using the XGBoost Classifier. XGBoost is one of the most popular ML algorithms due to its tendency to yield highly accurate results. Normalize is utilized to perform data normalization.",
                        "URL": "https://cdn.siberian.dev/code/Classification/XGBoost/XGBoostClassifier_Normalize.ipynb",
                        "keywords": "extreme gradient boosting classifier,xgboost,xgboost algorithm,extreme gradient boosting,extreme gradient boosting with xgboost,xgboost framework,normalization",
                        "display_url": "https://siberian.dev/classification/xgboost-classifier-normalization"
                    },
                    {
                        "name": "XGBoostClassifier_StandardScaler.ipynb",
                        "title": "Extreme Gradient Boosting Classifier (XGBoost) With StandardScaler",
                        "description": "The Code Sample utilized XGBoostClassifier from the XGBoost library for classification problems on tabular data. Standard Scaler is also utilized to perform data rescaling.",
                        "URL": "https://cdn.siberian.dev/code/Classification/XGBoost/XGBoostClassifier_StandardScaler.ipynb",
                        "keywords": "extreme gradient boosting classifier,xgboost,xgboost algorithm,extreme gradient boosting,extreme gradient boosting with xgboost,xgboost framework,standardscaler",
                        "display_url": "https://siberian.dev/classification/xgboost-classifier-standardscaler"
                    }
                ]
            }
        ]
    },
    {
        "name": "Clustering",
        "image": "https://cdn.siberian.dev/code-gen/clustering_blue.png",
        "description": "Collect similar looking data points into groups of clusters.",
        "models": [
            {
                "name": "AffinityPropagation",
                "models": [
                    {
                        "name": "AffinityPropagation.ipynb",
                        "title": "AffInity Propagation",
                        "description": "This code sample is used for performing unsupervised technique called clustering to label the data with an Affinity Propagation algorithm",
                        "URL": "https://cdn.siberian.dev/code/Clustering/AffinityPropagation/AffinityPropagation.ipynb",
                        "keywords": "affinity propagation,clustering algorithm,affinity propagation algorithm,affinity propagation clustering,affinity propagation sklearn",
                        "display_url": "https://siberian.dev/clustering/affinity-propagation"
                    },
                    {
                        "name": "AffinityPropagation_MaxAbsScaler.ipynb",
                        "title": "AffInity Propagation With MaxAbsScaler",
                        "description": "This code sample is used for performing unsupervised technique called clustering to label the data with an Affinity Propagation algorithm with feature rescaling technique called MaxAbsScaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/AffinityPropagation/AffinityPropagation_MaxAbsScaler.ipynb",
                        "keywords": "affinity propagation,clustering algorithm,affinity propagation algorithm,affinity propagation clustering,affinity propagation sklearn,maxabsscaler",
                        "display_url": "https://siberian.dev/clustering/affinity-propagation-maxabsscaler"
                    },
                    {
                        "name": "AffinityPropagation_MinMaxScaler.ipynb",
                        "title": "AffInity Propagation With MinMaxScaler",
                        "description": "This code sample is used for performing unsupervised technique called clustering to label the data with an Affinity Propagation algorithm with scaling technique MinMaxScaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/AffinityPropagation/AffinityPropagation_MinMaxScaler.ipynb",
                        "keywords": "affinity propagation,clustering algorithm,affinity propagation algorithm,affinity propagation clustering,affinity propagation sklearn,minmaxscaler",
                        "display_url": "https://siberian.dev/clustering/affinity-propagation-minmaxscaler"
                    },
                    {
                        "name": "AffinityPropagation_Normalize.ipynb",
                        "title": "AffInity Propagation With Normalization",
                        "description": "This code sample is used for performing unsupervised technique called clustering to label the data with an Affinity Propagation algorithm with scaling technique Normalize.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/AffinityPropagation/AffinityPropagation_Normalize.ipynb",
                        "keywords": "affinity propagation,clustering algorithm,affinity propagation algorithm,affinity propagation clustering,affinity propagation sklearn,normalization",
                        "display_url": "https://siberian.dev/clustering/affinity-propagation-normalization"
                    },
                    {
                        "name": "AffinityPropagation_RobustScaler.ipynb",
                        "title": "AffInity Propagation With RobustScaler",
                        "description": "This code sample is used for performing unsupervised technique called clustering to label the data with an Affinity Propagation algorithm with scaling technique RobustScaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/AffinityPropagation/AffinityPropagation_RobustScaler.ipynb",
                        "keywords": "affinity propagation,clustering algorithm,affinity propagation algorithm,affinity propagation clustering,affinity propagation sklearn,robustscaler",
                        "display_url": "https://siberian.dev/clustering/affinity-propagation-robustscaler"
                    },
                    {
                        "name": "AffinityPropagation_Scale.ipynb",
                        "title": "AffInity Propagation With Scale",
                        "description": "This code sample is used for performing unsupervised technique called clustering to label the data with an Affinity Propagation algorithm with scaling technique 'scale' function",
                        "URL": "https://cdn.siberian.dev/code/Clustering/AffinityPropagation/AffinityPropagation_Scale.ipynb",
                        "keywords": "affinity propagation,clustering algorithm,affinity propagation algorithm,affinity propagation clustering,affinity propagation sklearn,scaling technique",
                        "display_url": "https://siberian.dev/clustering/affinity-propagation-scale"
                    },
                    {
                        "name": "AffinityPropagation_StandardScaler.ipynb",
                        "title": "AffInity Propagation With StandardScaler",
                        "description": "This code sample is used for performing unsupervised technique called clustering to label the data with an Affinity Propagation algorithm with scaling technique StandardScaler",
                        "URL": "https://cdn.siberian.dev/code/Clustering/AffinityPropagation/AffinityPropagation_StandardScaler.ipynb",
                        "keywords": "affinity propagation,clustering algorithm,affinity propagation algorithm,affinity propagation clustering,affinity propagation sklearn,standardscaler",
                        "display_url": "https://siberian.dev/clustering/affinity-propagation-standardscaler"
                    }
                ]
            },
            {
                "name": "Agglomerative_Clustering",
                "models": [
                    {
                        "name": "AgglomerativeClustering.ipynb",
                        "title": "Agglomerative Clustering",
                        "description": "The Cluster analysis using a simple Agglomerative Clustering algorithm. Which is type of hierarchical clustering, and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/Agglomerative_Clustering/AgglomerativeClustering.ipynb",
                        "keywords": "agglomerative clustering,agglomerative clustering algorithm,agglomerative clustering sklearn,agglomerative cluster,hierarchical clustering,hierarchical agglimerative clustering",
                        "display_url": "https://siberian.dev/clustering/agglomerative-clustering"
                    },
                    {
                        "name": "AgglomerativeClustering_MaxAbsScaler.ipynb",
                        "title": "Agglomerative Clustering With MaxAbsScaler",
                        "description": "The Cluster analysis using a simple Agglomerative Clustering algorithm with the MaxAbsScaler feature rescaling technique. Which is type of hierarchical clustering, and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/Agglomerative_Clustering/AgglomerativeClustering_MaxAbsScaler.ipynb",
                        "keywords": "agglomerative clustering,agglomerative clustering algorithm,agglomerative clustering sklearn,agglomerative cluster,hierarchical clustering,hierarchical agglimerative clustering,maxabsscaler",
                        "display_url": "https://siberian.dev/clustering/agglomerative-clustering-maxabsscaler"
                    },
                    {
                        "name": "AgglomerativeClustering_MinMaxScaler.ipynb",
                        "title": "Agglomerative Clustering With MinMaxScaler",
                        "description": "The Cluster analysis using a simple Agglomerative Clustering algorithm with the MinMaxScaler feature rescaling technique. Which is type of hierarchical clustering, and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/Agglomerative_Clustering/AgglomerativeClustering_MinMaxScaler.ipynb",
                        "keywords": "agglomerative clustering,agglomerative clustering algorithm,agglomerative clustering sklearn,agglomerative cluster,hierarchical clustering,hierarchical agglimerative clustering,minmaxscaler",
                        "display_url": "https://siberian.dev/clustering/agglomerative-clustering-minmaxscaler"
                    },
                    {
                        "name": "AgglomerativeClustering_Normalize.ipynb",
                        "title": "Agglomerative Clustering With Normalization",
                        "description": "The Cluster analysis using a simple Agglomerative Clustering algorithm with the Normalize as feature rescaling technique. Which is type of hierarchical clustering, and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/Agglomerative_Clustering/AgglomerativeClustering_Normalize.ipynb",
                        "keywords": "agglomerative clustering,agglomerative clustering algorithm,agglomerative clustering sklearn,agglomerative cluster,hierarchical clustering,hierarchical agglimerative clustering,normalization",
                        "display_url": "https://siberian.dev/clustering/agglomerative-clustering-normalization"
                    },
                    {
                        "name": "AgglomerativeClustering_RobustScaler.ipynb",
                        "title": "Agglomerative Clustering With RobustScaler",
                        "description": "The Cluster analysis using a simple Agglomerative Clustering algorithm with the RobustScaler feature rescaling technique. Which is type of hierarchical clustering, and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/Agglomerative_Clustering/AgglomerativeClustering_RobustScaler.ipynb",
                        "keywords": "agglomerative clustering,agglomerative clustering algorithm,agglomerative clustering sklearn,agglomerative cluster,hierarchical clustering,hierarchical agglimerative clustering,robustscaler",
                        "display_url": "https://siberian.dev/clustering/agglomerative-clustering-robustscaler"
                    },
                    {
                        "name": "AgglomerativeClustering_Scale.ipynb",
                        "title": "Agglomerative Clustering With Scale",
                        "description": "The Cluster analysis using a simple Agglomerative Clustering algorithm with the Scale as feature rescaling technique. Which is type of hierarchical clustering, and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/Agglomerative_Clustering/AgglomerativeClustering_Scale.ipynb",
                        "keywords": "agglomerative clustering,agglomerative clustering algorithm,agglomerative clustering sklearn,agglomerative cluster,hierarchical clustering,hierarchical agglimerative clustering,scaling technique",
                        "display_url": "https://siberian.dev/clustering/agglomerative-clustering-scale"
                    },
                    {
                        "name": "AgglomerativeClustering_StandardScaler.ipynb",
                        "title": "Agglomerative Clustering With StandardScaler",
                        "description": "The Cluster analysis using a simple Agglomerative Clustering algorithm with the StandardScaler feature rescaling technique. Which is type of hierarchical clustering, and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/Agglomerative_Clustering/AgglomerativeClustering_StandardScaler.ipynb",
                        "keywords": "agglomerative clustering,agglomerative clustering algorithm,agglomerative clustering sklearn,agglomerative cluster,hierarchical clustering,hierarchical agglimerative clustering,standardscaler",
                        "display_url": "https://siberian.dev/clustering/agglomerative-clustering-standardscaler"
                    }
                ]
            },
            {
                "name": "BIRCH",
                "models": [
                    {
                        "name": "BIRCH.ipynb",
                        "title": "BIRCH Clustering",
                        "description": "The Cluster analysis using a simple BIRCH(balanced iterative reducing and clustering using hierarchies) Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/BIRCH/BIRCH.ipynb",
                        "keywords": "birch clustering,birch,birch clustering algorithm,birch algorithm,birch clustering algorithm example,birch algorithm example",
                        "display_url": "https://siberian.dev/clustering/birch-clustering"
                    },
                    {
                        "name": "BIRCH_MaxAbsScaler.ipynb",
                        "title": "BIRCH Clustering With MaxAbsScaler",
                        "description": "The Cluster analysis using a simple BIRCH(balanced iterative reducing and clustering using hierarchies) Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters along with feature scaling using MaxAbsScaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/BIRCH/BIRCH_MaxAbsScaler.ipynb",
                        "keywords": "birch clustering,birch,birch clustering algorithm,birch algorithm,birch clustering algorithm example,birch algorithm example,maxabsscaler",
                        "display_url": "https://siberian.dev/clustering/birch-clustering-maxabsscaler"
                    },
                    {
                        "name": "BIRCH_MinMaxScaler.ipynb",
                        "title": "BIRCH Clustering With MinMaxScaler",
                        "description": "The Cluster analysis using a simple BIRCH(balanced iterative reducing and clustering using hierarchies) Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters along with feature scaling using MinMaxScaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/BIRCH/BIRCH_MinMaxScaler.ipynb",
                        "keywords": "birch clustering,birch,birch clustering algorithm,birch algorithm,birch clustering algorithm example,birch algorithm example,minmaxscaler",
                        "display_url": "https://siberian.dev/clustering/birch-clustering-minmaxscaler"
                    },
                    {
                        "name": "BIRCH_Normalize.ipynb",
                        "title": "BIRCH Clustering With Normalization",
                        "description": "The Cluster analysis using a simple BIRCH(balanced iterative reducing and clustering using hierarchies) Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters along with feature scaling using MinMaxScaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/BIRCH/BIRCH_Normalize.ipynb",
                        "keywords": "birch clustering,birch,birch clustering algorithm,birch algorithm,birch clustering algorithm example,birch algorithm example,normalization",
                        "display_url": "https://siberian.dev/clustering/birch-clustering-normalization"
                    },
                    {
                        "name": "BIRCH_RobustScaler.ipynb",
                        "title": "BIRCH Clustering With RobustScaler",
                        "description": "The Cluster analysis using a simple BIRCH(balanced iterative reducing and clustering using hierarchies) Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters along with feature scaling using RobustScaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/BIRCH/BIRCH_RobustScaler.ipynb",
                        "keywords": "birch clustering,birch,birch clustering algorithm,birch algorithm,birch clustering algorithm example,birch algorithm example,robustscaler",
                        "display_url": "https://siberian.dev/clustering/birch-clustering-robustscaler"
                    },
                    {
                        "name": "BIRCH_Scale.ipynb",
                        "title": "BIRCH Clustering With Scale",
                        "description": "The Cluster analysis using a simple BIRCH(balanced iterative reducing and clustering using hierarchies) Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters along with feature scaling using Scale.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/BIRCH/BIRCH_Scale.ipynb",
                        "keywords": "birch clustering,birch,birch clustering algorithm,birch algorithm,birch clustering algorithm example,birch algorithm example,scaling technique",
                        "display_url": "https://siberian.dev/clustering/birch-clustering-scale"
                    },
                    {
                        "name": "BIRCH_StandardScaler.ipynb",
                        "title": "BIRCH Clustering With StandardScaler",
                        "description": "The Cluster analysis using a simple BIRCH(balanced iterative reducing and clustering using hierarchies) Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters along with feature scaling using StandardScaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/BIRCH/BIRCH_StandardScaler.ipynb",
                        "keywords": "birch clustering,birch,birch clustering algorithm,birch algorithm,birch clustering algorithm example,birch algorithm example,standardscaler",
                        "display_url": "https://siberian.dev/clustering/birch-clustering-standardscaler"
                    }
                ]
            },
            {
                "name": "DBSCAN",
                "models": [
                    {
                        "name": "DBSCAN.ipynb",
                        "title": "DBSCAN",
                        "description": "The Cluster analysis using a simple DBSCAN (Density-Based Spatial Clustering of Applications with Noise) Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/DBSCAN/DBSCAN.ipynb",
                        "keywords": "dbscan,dbscan algorithm,dbscan clustering,dbscan clustering algorithm,dbscan sklearn",
                        "display_url": "https://siberian.dev/clustering/dbscan"
                    },
                    {
                        "name": "DBSCAN_MaxAbsScaler.ipynb",
                        "title": "DBSCAN With MaxAbsScaler",
                        "description": "The Cluster analysis using a simple DBSCAN (Density-Based Spatial Clustering of Applications with Noise) Clustering algorithm including 2D and 3D cluster visualization of the Clusters along with the MaxAbsScaler as a feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/DBSCAN/DBSCAN_MaxAbsScaler.ipynb",
                        "keywords": "dbscan,dbscan algorithm,dbscan clustering,dbscan clustering algorithm,dbscan sklearn,maxabsscaler",
                        "display_url": "https://siberian.dev/clustering/dbscan-maxabsscaler"
                    },
                    {
                        "name": "DBSCAN_MinMaxScaler.ipynb",
                        "title": "DBSCAN With MinMaxScaler",
                        "description": "The Cluster analysis using a simple DBSCAN (Density-Based Spatial Clustering of Applications with Noise) Clustering algorithm including 2D and 3D cluster visualization of the Clusters along with the MinMaxScaler as a feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/DBSCAN/DBSCAN_MinMaxScaler.ipynb",
                        "keywords": "dbscan,dbscan algorithm,dbscan clustering,dbscan clustering algorithm,dbscan sklearn,minmaxscaler",
                        "display_url": "https://siberian.dev/clustering/dbscan-minmaxscaler"
                    },
                    {
                        "name": "DBSCAN_Normalize.ipynb",
                        "title": "DBSCAN With Normalization",
                        "description": "The Cluster analysis using a simple DBSCAN (Density-Based Spatial Clustering of Applications with Noise) Clustering algorithm including 2D and 3D cluster visualization of the Clusters along with the Normalize as a feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/DBSCAN/DBSCAN_Normalize.ipynb",
                        "keywords": "dbscan,dbscan algorithm,dbscan clustering,dbscan clustering algorithm,dbscan sklearn,normalization",
                        "display_url": "https://siberian.dev/clustering/dbscan-normalization"
                    },
                    {
                        "name": "DBSCAN_RobustScaler.ipynb",
                        "title": "DBSCAN With RobustScaler",
                        "description": "The Cluster analysis using a simple DBSCAN (Density-Based Spatial Clustering of Applications with Noise) Clustering algorithm including 2D and 3D cluster visualization of the Clusters along with the RobustScaler as a feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/DBSCAN/DBSCAN_RobustScaler.ipynb",
                        "keywords": "dbscan,dbscan algorithm,dbscan clustering,dbscan clustering algorithm,dbscan sklearn,robustscaler",
                        "display_url": "https://siberian.dev/clustering/dbscan-robustscaler"
                    },
                    {
                        "name": "DBSCAN_Scale.ipynb",
                        "title": "DBSCAN With Scale",
                        "description": "The Cluster analysis using a simple DBSCAN (Density-Based Spatial Clustering of Applications with Noise) Clustering algorithm including 2D and 3D cluster visualization of the Clusters along with the Scale as a feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/DBSCAN/DBSCAN_Scale.ipynb",
                        "keywords": "dbscan,dbscan algorithm,dbscan clustering,dbscan clustering algorithm,dbscan sklearn,scaling technique",
                        "display_url": "https://siberian.dev/clustering/dbscan-scale"
                    },
                    {
                        "name": "DBSCAN_StandardScaler.ipynb",
                        "title": "DBSCAN With StandardScaler",
                        "description": "The Cluster analysis using a simple DBSCAN (Density-Based Spatial Clustering of Applications with Noise) Clustering algorithm including 2D and 3D cluster visualization of the Clusters along with the StandardScaler as a feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/DBSCAN/DBSCAN_StandardScaler.ipynb",
                        "keywords": "dbscan,dbscan algorithm,dbscan clustering,dbscan clustering algorithm,dbscan sklearn,standardscaler",
                        "display_url": "https://siberian.dev/clustering/dbscan-standardscaler"
                    }
                ]
            },
            {
                "name": "KMeans",
                "models": [
                    {
                        "name": "KMeans.ipynb",
                        "title": "K-Means Clustering",
                        "description": "The Cluster analysis using a simple KMeans Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/KMeans/KMeans.ipynb",
                        "keywords": "k-means clustering,k-means clustering algorithm,clustering algorithm,kmeans clustering sklearn,kmeans clustering python",
                        "display_url": "https://siberian.dev/clustering/kmeans-clustering"
                    },
                    {
                        "name": "KMeans_MaxAbsScaler.ipynb",
                        "title": "K-Means Clustering With MaxAbsScaler",
                        "description": "The Cluster analysis using a KMeans Clustering algorithm along with the MaxAbsScaler feature rescaling technique. The template also includes visualization of 2D and 3D Clusters along with seaborn pairplot.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/KMeans/KMeans_MaxAbsScaler.ipynb",
                        "keywords": "k-means clustering,k-means clustering algorithm,clustering algorithm,kmeans clustering sklearn,kmeans clustering python,maxabsscaler",
                        "display_url": "https://siberian.dev/clustering/kmeans-clustering-maxabsscaler"
                    },
                    {
                        "name": "KMeans_MinMaxScaler.ipynb",
                        "title": "K-Means Clustering With MinMaxScaler",
                        "description": "The Cluster analysis using a KMeans Clustering algorithm along with the MinMaxScaler feature rescaling technique. The template also includes visualization of 2D and 3D Clusters along with seaborn pairplot.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/KMeans/KMeans_MinMaxScaler.ipynb",
                        "keywords": "k-means clustering,k-means clustering algorithm,clustering algorithm,kmeans clustering sklearn,kmeans clustering python,minmaxscaler",
                        "display_url": "https://siberian.dev/clustering/kmeans-clustering-minmaxscaler"
                    },
                    {
                        "name": "KMeans_Normalize.ipynb",
                        "title": "K-Means Clustering With Normalization",
                        "description": "The Cluster analysis using a KMeans Clustering algorithm along with the Normalizer feature rescaling technique. The template also includes visualization of 2D and 3D Clusters along with seaborn pairplot.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/KMeans/KMeans_Normalize.ipynb",
                        "keywords": "k-means clustering,k-means clustering algorithm,clustering algorithm,kmeans clustering sklearn,kmeans clustering python,normalization",
                        "display_url": "https://siberian.dev/clustering/kmeans-clustering-normalization"
                    },
                    {
                        "name": "KMeans_RobustScaler.ipynb",
                        "title": "K-Means Clustering With RobustScaler",
                        "description": "The Cluster analysis using a KMeans Clustering algorithm along with the RobustScaler feature rescaling technique. The template also includes visualization of 2D and 3D Clusters along with seaborn pairplot.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/KMeans/KMeans_RobustScaler.ipynb",
                        "keywords": "k-means clustering,k-means clustering algorithm,clustering algorithm,kmeans clustering sklearn,kmeans clustering python,robustscaler",
                        "display_url": "https://siberian.dev/clustering/kmeans-clustering-robustscaler"
                    },
                    {
                        "name": "KMeans_Scale.ipynb",
                        "title": "K-Means Clustering With Scale",
                        "description": "The Cluster analysis using a KMeans Clustering algorithm along with the Normal Scaling feature rescaling technique. The template also includes visualization of 2D and 3D Clusters along with seaborn pairplot.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/KMeans/KMeans_Scale.ipynb",
                        "keywords": "k-means clustering,k-means clustering algorithm,clustering algorithm,kmeans clustering sklearn,kmeans clustering python,scaling technique",
                        "display_url": "https://siberian.dev/clustering/kmeans-clustering-scale"
                    },
                    {
                        "name": "KMeans_StandardScaler.ipynb",
                        "title": "K-Means Clustering With StandardScaler",
                        "description": "The Cluster analysis using a KMeans Clustering algorithm along with the StandardScaler feature rescaling technique. The template also includes visualization of 2D and 3D Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/KMeans/KMeans_StandardScaler.ipynb",
                        "keywords": "k-means clustering,k-means clustering algorithm,clustering algorithm,kmeans clustering sklearn,kmeans clustering python,standardscaler",
                        "display_url": "https://siberian.dev/clustering/kmeans-clustering-standardscaler"
                    }
                ]
            },
            {
                "name": "MeanShift",
                "models": [
                    {
                        "name": "MeanShift.ipynb",
                        "title": "Mean Shift",
                        "description": "The Cluster analysis using a simple Mean Shift(Centroid-Based Clustering using a flat kernel) Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MeanShift/MeanShift.ipynb",
                        "keywords": "mean shift,mean shift clustering,mean shift algorithm,mean shift clustering algorithm,mean shift sklearn",
                        "display_url": "https://siberian.dev/clustering/mean-shift"
                    },
                    {
                        "name": "MeanShift_MaxAbsScaler.ipynb",
                        "title": "Mean Shift Using MaxAbsScaler",
                        "description": "The Cluster analysis using a simple Mean Shift(Centroid-Based Clustering using a flat kernel) Clustering algorithm along with feature scaling using MaxAbsScaler and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MeanShift/MeanShift_MaxAbsScaler.ipynb",
                        "keywords": "mean shift,mean shift clustering,mean shift algorithm,mean shift clustering algorithm,mean shift sklearn,maxabsscaler",
                        "display_url": "https://siberian.dev/clustering/mean-shift-maxabsscaler"
                    },
                    {
                        "name": "MeanShift_MinMaxScaler.ipynb",
                        "title": "Mean Shift With MinMaxScaler",
                        "description": "The Cluster analysis using a simple Mean Shift(Centroid-Based Clustering using a flat kernel) Clustering algorithm along with feature scaling using MinMaxScaler and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MeanShift/MeanShift_MinMaxScaler.ipynb",
                        "keywords": "mean shift,mean shift clustering,mean shift algorithm,mean shift clustering algorithm,mean shift sklearn,minmaxscaler",
                        "display_url": "https://siberian.dev/clustering/mean-shift-minmaxscaler"
                    },
                    {
                        "name": "MeanShift_Normalize.ipynb",
                        "title": "Mean Shift With Normalization",
                        "description": "The Cluster analysis using a simple Mean Shift(Centroid-Based Clustering using a flat kernel) Clustering algorithm along with feature scaling using Normalize and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MeanShift/MeanShift_Normalize.ipynb",
                        "keywords": "mean shift,mean shift clustering,mean shift algorithm,mean shift clustering algorithm,mean shift sklearn,normalization",
                        "display_url": "https://siberian.dev/clustering/mean-shift-normalization"
                    },
                    {
                        "name": "MeanShift_RobustScaler.ipynb",
                        "title": "Mean Shift Using RobustScaler",
                        "description": "The Cluster analysis using a simple Mean Shift(Centroid-Based Clustering using a flat kernel) Clustering algorithm along with feature scaling using Robust Scaler and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MeanShift/MeanShift_RobustScaler.ipynb",
                        "keywords": "mean shift,mean shift clustering,mean shift algorithm,mean shift clustering algorithm,mean shift sklearn,robustscaler",
                        "display_url": "https://siberian.dev/clustering/mean-shift-robustscaler"
                    },
                    {
                        "name": "MeanShift_Scale.ipynb",
                        "title": "Mean Shift With Scale",
                        "description": "The Cluster analysis using a simple Mean Shift(Centroid-Based Clustering using a flat kernel) Clustering algorithm along with feature scaling using Scale and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MeanShift/MeanShift_Scale.ipynb",
                        "keywords": "mean shift,mean shift clustering,mean shift algorithm,mean shift clustering algorithm,mean shift sklearn,scaling technique",
                        "display_url": "https://siberian.dev/clustering/mean-shift-scale"
                    },
                    {
                        "name": "MeanShift_StandardScaler.ipynb",
                        "title": "Mean Shift Using StandardScaler",
                        "description": "The Cluster analysis using a simple Mean Shift(Centroid-Based Clustering using a flat kernel) Clustering algorithm along with feature scaling using Standard Scaler and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MeanShift/MeanShift_StandardScaler.ipynb",
                        "keywords": "mean shift,mean shift clustering,mean shift algorithm,mean shift clustering algorithm,mean shift sklearn,standardscaler",
                        "display_url": "https://siberian.dev/clustering/mean-shift-standardscaler"
                    }
                ]
            },
            {
                "name": "MiniBatchKMeans",
                "models": [
                    {
                        "name": "MiniBatchKMeans.ipynb",
                        "title": "Mini Batch K-Means",
                        "description": "The clustering analysis using the Simple MiniBatchKMeans.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MiniBatchKMeans/MiniBatchKMeans.ipynb",
                        "keywords": "mini batch k-means,mini batch k-means clustering,k-means,k-means clustering algorithm,k-means clustering",
                        "display_url": "https://siberian.dev/clustering/mini-batch-kmeans"
                    },
                    {
                        "name": "MiniBatchKMeans_MinMaxScaler.ipynb",
                        "title": "Mini Batch K-Means With MinMaxScaler",
                        "description": "Clustering analysis using the Simple MiniBatchKMeans where the scaling method used is MinMaxScaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MiniBatchKMeans/MiniBatchKMeans_MinMaxScaler.ipynb",
                        "keywords": "mini batch k-means,mini batch k-means clustering,k-means,k-means clustering algorithm,k-means clustering,minmaxscaler",
                        "display_url": "https://siberian.dev/clustering/mini-batch-kmeans-minmaxscaler"
                    },
                    {
                        "name": "MiniBatchKMeans_RobustScaler.ipynb",
                        "title": "Mini Batch K-Means With RobustScaler",
                        "description": "Clustering analysis using the Simple MiniBatchKMeans where the scaling method used is Robust Scaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MiniBatchKMeans/MiniBatchKMeans_RobustScaler.ipynb",
                        "keywords": "mini batch k-means,mini batch k-means clustering,k-means,k-means clustering algorithm,k-means clustering,robustscaler",
                        "display_url": "https://siberian.dev/clustering/mini-batch-kmeans-robustscaler"
                    },
                    {
                        "name": "MiniBatchKMeans_Scale.ipynb",
                        "title": "Mini Batch K-Means With Scale",
                        "description": "Clustering analysis using the Simple MiniBatchKMeans along with feature scaling using Scale.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MiniBatchKMeans/MiniBatchKMeans_Scale.ipynb",
                        "keywords": "mini batch k-means,mini batch k-means clustering,k-means,k-means clustering algorithm,k-means clustering,scaling technique",
                        "display_url": "https://siberian.dev/clustering/mini-batch-kmeans-scale"
                    },
                    {
                        "name": "MiniBatchKMeans_StandardScaled.ipynb",
                        "title": "Mini Batch K-Means With StandardScaler",
                        "description": "Clustering analysis using the Simple MiniBatchKMeans where the scaling method used is Standard Scaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MiniBatchKMeans/MiniBatchKMeans_StandardScaled.ipynb",
                        "keywords": "mini batch k-means,mini batch k-means clustering,k-means,k-means clustering algorithm,k-means clustering,standardscaler",
                        "display_url": "https://siberian.dev/clustering/mini-batch-kmeans-standardscaler"
                    }
                ]
            },
            {
                "name": "OPTICS",
                "models": [
                    {
                        "name": "OPTICS.ipynb",
                        "title": "Optics Clustering",
                        "description": "The Cluster analysis using a simple OPTICS (Ordering Points To Identify Cluster Structure) Clustering algorithm.It draws inspiration from the DBSCAN clustering algorithm. The Code Template includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/OPTICS/OPTICS.ipynb",
                        "keywords": "optics clustering,optics clustering algorithm,optics algorithm,clustering algorithm,dbscan,optics clustering example,optics clustering sklearn",
                        "display_url": "https://siberian.dev/clustering/optics-clustering"
                    },
                    {
                        "name": "OPTICS_MaxAbsScaler.ipynb",
                        "title": "Optics Clustering With MaxAbsScaler",
                        "description": "The Cluster analysis using a simple OPTICS (Ordering Points To Identify Cluster Structure) Clustering algorithm and feature rescaling technique MaxAbsScaler.It draws inspiration from the DBSCAN clustering algorithm. The Code Template includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/OPTICS/OPTICS_MaxAbsScaler.ipynb",
                        "keywords": "optics clustering,optics clustering algorithm,optics algorithm,clustering algorithm,dbscan,optics clustering example,optics clustering sklearn,maxabscaler",
                        "display_url": "https://siberian.dev/clustering/optics-clustering-maxabsscaler"
                    },
                    {
                        "name": "OPTICS_MinMaxScaler.ipynb",
                        "title": "Optics Clustering With MinMaxScaler",
                        "description": "The Cluster analysis using a simple OPTICS Clustering algorithm with the MinMaxScaler as a feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/OPTICS/OPTICS_MinMaxScaler.ipynb",
                        "keywords": "optics clustering,optics clustering algorithm,optics algorithm,clustering algorithm,dbscan,optics clustering example,optics clustering sklearn,minmaxscaler",
                        "display_url": "https://siberian.dev/clustering/optics-clustering-minmaxscaler"
                    },
                    {
                        "name": "OPTICS_Normalize.ipynb",
                        "title": "Optics Clustering With Normalization",
                        "description": "The Cluster analysis using a simple OPTICS (Ordering Points To Identify Cluster Structure) Clustering algorithm and feature rescaling technique Normalizer.It draws inspiration from the DBSCAN clustering algorithm. The Code Template includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/OPTICS/OPTICS_Normalize.ipynb",
                        "keywords": "optics clustering,optics clustering algorithm,optics algorithm,clustering algorithm,dbscan,optics clustering example,optics clustering sklearn,normalization",
                        "display_url": "https://siberian.dev/clustering/optics-clustering-normalization"
                    },
                    {
                        "name": "OPTICS_RobustScaler.ipynb",
                        "title": "Optics Clustering With RobustScaler",
                        "description": "The Cluster analysis using a simple OPTICS Clustering algorithm with the RobustScaler as a feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/OPTICS/OPTICS_RobustScaler.ipynb",
                        "keywords": "optics clustering,optics clustering algorithm,optics algorithm,clustering algorithm,dbscan,optics clustering example,optics clustering sklearn,robustscaler",
                        "display_url": "https://siberian.dev/clustering/optics-clustering-robustscaler"
                    },
                    {
                        "name": "OPTICS_Scale.ipynb",
                        "title": "Optics Clustering With Scale",
                        "description": "The Cluster analysis using a simple OPTICS (Ordering Points To Identify Cluster Structure) Clustering algorithm and feature rescaling technique Scale.It draws inspiration from the DBSCAN clustering algorithm. The Code Template includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/OPTICS/OPTICS_Scale.ipynb",
                        "keywords": "optics clustering,optics clustering algorithm,optics algorithm,clustering algorithm,dbscan,optics clustering example,optics clustering sklearn,scaling technique",
                        "display_url": "https://siberian.dev/clustering/optics-clustering-scale"
                    },
                    {
                        "name": "OPTICS_StandardScaler.ipynb",
                        "title": "Optics Clustering With StandardScaler",
                        "description": "The Cluster analysis using a simple OPTICS Clustering algorithm with the StandardScaler as a feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/OPTICS/OPTICS_StandardScaler.ipynb",
                        "keywords": "optics clustering,optics clustering algorithm,optics algorithm,clustering algorithm,dbscan,optics clustering example,optics clustering sklearn,standardscaler",
                        "display_url": "https://siberian.dev/clustering/optics-clustering-standardscaler"
                    }
                ]
            },
            {
                "name": "Spectral_Clustering",
                "models": [
                    {
                        "name": "SpectralClustering.ipynb",
                        "title": "Spectral Clustering",
                        "description": "The Cluster analysis using a Spectral Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/Spectral_Clustering/SpectralClustering.ipynb",
                        "keywords": "spectral clustering,spectral clustering algorithm,spectral clustering sklearn,eda technique",
                        "display_url": "https://siberian.dev/clustering/spectral-clustering"
                    },
                    {
                        "name": "SpectralClustering_RobustScaler.ipynb",
                        "title": "Spectral Clustering With RobustScaler",
                        "description": "The Cluster analysis using a Spectral Clustering algorithm with the RobustScaler feature rescaling technique and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/Spectral_Clustering/SpectralClustering_RobustScaler.ipynb",
                        "keywords": "spectral clustering,spectral clustering algorithm,spectral clustering sklearn,eda technique,robustscaler",
                        "display_url": "https://siberian.dev/clustering/spectral-clustering-robustscaler"
                    },
                    {
                        "name": "SpectralClustering_StandardScaler.ipynb",
                        "title": "Spectral Clustering With StandardScaler",
                        "description": "The Cluster analysis using a Spectral Clustering algorithm with the StandardScaler feature rescaling technique and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/Spectral_Clustering/SpectralClustering_StandardScaler.ipynb",
                        "keywords": "spectral clustering,spectral clustering algorithm,spectral clustering sklearn,eda technique,standardscaler",
                        "display_url": "https://siberian.dev/clustering/spectral-clustering-standardscaler"
                    }
                ]
            }
        ]
    },
    {
        "name": "Dimensionality_Reduction",
        "image": "https://cdn.siberian.dev/code-gen/dr_blue.png",
        "description": "Reduce input variables in a dataset by finding key contributors to output",
        "models": [
            {
                "name": "Isomaps",
                "models": [
                    {
                        "name": "Isomap.ipynb",
                        "title": "Isomap",
                        "description": "Isomap which is used as a dimensionality reduction technique. Isomap is a nonlinear dimensionality reduction method.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/Isomaps/Isomap.ipynb",
                        "keywords": "isomap,isomap embedding,isomap sklearn,isomap algorithm,isometric,isomap",
                        "display_url": "https://siberian.dev/dimensionality-reduction/isomap"
                    },
                    {
                        "name": "Isomap_MinMaxScaler.ipynb",
                        "title": "Isomap With MinMaxScaler",
                        "description": "The Isomap algorithm used for the dimensionality reduction technique along with the rescaling technique MinMaxScaler.  It is one of several widely used low-dimensional embedding methods. Isomap is used for computing a quasi-isometric, low-dimensional embedding of a set of high-dimensional data points.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/Isomaps/Isomap_MinMaxScaler.ipynb",
                        "keywords": "isomap,isomap embedding,isomap sklearn,isomap algorithm,isometric,isomap,minmaxscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/isomap-minmaxscaler"
                    },
                    {
                        "name": "Isomap_RobustScaler.ipynb",
                        "title": "Isomap With RobustScaler",
                        "description": "Isomap is used as a dimensionality reduction algorithm along with the rescaling technique RobustScaler. The algorithm provides a simple method for estimating the intrinsic geometry of a data manifold based on a rough estimate of each data point\u00e2\u20ac\u2122s neighbors on the manifold.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/Isomaps/Isomap_RobustScaler.ipynb",
                        "keywords": "isomap,isomap embedding,isomap sklearn,isomap algorithm,isometric,isomap,robustscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/isomap-robustscaler"
                    },
                    {
                        "name": "Isomap_StandardScaler.ipynb",
                        "title": "Isomap With StandardScaler",
                        "description": "Isomap, which is used for the dimensionality reduction process. Isomap is one representative of isometric mapping methods and extends metric multidimensional scaling (MDS) by incorporating the geodesic distances imposed by a weighted graph. The template also utilizes StandardScaler for data rescaling.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/Isomaps/Isomap_StandardScaler.ipynb",
                        "keywords": "isomap,isomap embedding,isomap sklearn,isomap algorithm,isometric,isomap,standardscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/isomap-standardscaler"
                    }
                ]
            },
            {
                "name": "LocallyLinearEmbedding",
                "models": [
                    {
                        "name": "LocallyLinearEmbedding.ipynb",
                        "title": "Locally Linear Embedding(LLE)",
                        "description": "LocallyLinearEmbedding in python for the dimensionality reduction technique. This can be thought of as a series of local Principal Component Analyses that are then compared spatially to find the best non-linear embedding.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/LocallyLinearEmbedding/LocallyLinearEmbedding.ipynb",
                        "keywords": "locally linear embedding,locally linear embedding algorithm,lle,lle algorithm,locally linear embedding sklearn",
                        "display_url": "https://siberian.dev/dimensionality-reduction/lle"
                    },
                    {
                        "name": "LocallyLinearEmbedding_MinMaxScaler.ipynb",
                        "title": "Locally Linear Embedding(LLE)With MinMaxScaler",
                        "description": "LocallyLinearEmbedding in python for the dimensionality reduction technique. The LLE algorithm is an unsupervised method for dimensionality reduction. It tries to reduce these n-Dimensions while trying to preserve the geometric features of the original non-linear feature structure. The MinMaxScaler is used for the feature rescaling technique to normalize data.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/LocallyLinearEmbedding/LocallyLinearEmbedding_MinMaxScaler.ipynb",
                        "keywords": "locally linear embedding,locally linear embedding algorithm,lle,lle algorithm,locally linear embedding sklearn,minmaxscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/lle-minmaxscaler"
                    },
                    {
                        "name": "LocallyLinearEmbedding_Normalize.ipynb",
                        "title": "Locally Linear Embedding(LLE) With Normalization",
                        "description": "LocallyLinearEmbedding in python for the dimensionality reduction technique. LLE first finds the k-nearest neighbors of the points. Then, it approximates each data vector as a weighted linear combination of its k-nearest neighbors. Finally, it computes the weights that best reconstruct the vectors from their neighbors and then produces the low-dimensional vectors best reconstructed by these weights. Normalize is utilized for the data rescaling process.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/LocallyLinearEmbedding/LocallyLinearEmbedding_Normalize.ipynb",
                        "keywords": "locally linear embedding,locally linear embedding algorithm,lle,lle algorithm,locally linear embedding sklearn,normalization",
                        "display_url": "https://siberian.dev/dimensionality-reduction/lle-normalization"
                    },
                    {
                        "name": "LocallyLinearEmbedding_RobustScaler.ipynb",
                        "title": "Locally Linear Embedding(LLE) With RobustScaler",
                        "description": "LocallyLinearEmbedding in python for the dimensionality reduction technique. LLE tends to accumulate sparse matrices. It is more efficient than the other algorithms in space and time complexity. This template also utilizes RobustScaler for data normalization to boost the speed of the model computational process.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/LocallyLinearEmbedding/LocallyLinearEmbedding_RobustScaler.ipynb",
                        "keywords": "locally linear embedding,locally linear embedding algorithm,lle,lle algorithm,locally linear embedding sklearn,robustscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/lle-robustscaler"
                    },
                    {
                        "name": "LocallyLinearEmbedding_StandardScaler.ipynb",
                        "title": "Locally Linear Embedding(LLE) With StandardScaler",
                        "description": "LocallyLinearEmbedding in python for the dimensionality reduction technique. The code also employs the StadardScaler as a data-rescaling technique from the sci-kit preprocessing library.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/LocallyLinearEmbedding/LocallyLinearEmbedding_StandardScaler.ipynb",
                        "keywords": "locally linear embedding,locally linear embedding algorithm,lle,lle algorithm,locally linear embedding sklearn,standardscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/lle-standardscaler"
                    }
                ]
            },
            {
                "name": "PCA",
                "models": [
                    {
                        "name": "IncrementalPCA.ipynb",
                        "title": "Incremental PCA",
                        "description": "Incremental Principal Component Analysis(IncrementalPCA) in python for dimensionality reduction technique. It is used to decompose a multivariate dataset into a set of successive orthogonal components that explain a maximum amount of the variance, keeping only the most significant singular vectors to project the data to a lower dimensional space.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/IncrementalPCA.ipynb",
                        "keywords": "incremental pca,incremental principal component analysis,pca,incremental pca sklearn,pca sklearn",
                        "display_url": "https://siberian.dev/dimensionality-reduction/incremental-pca"
                    },
                    {
                        "name": "IncrementalPCA_MaxAbsScaler.ipynb",
                        "title": "Incremental PCA With MaxAbsScaler",
                        "description": "Incremental Principal Component Analysis(IncrementalPCA) along with feature scaling MaxAbsScaler in python for dimensionality reduction technique. Incremental principal component analysis (IPCA) is typically used as a replacement for principal component analysis (PCA) when the dataset is too large to fit in memory.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/IncrementalPCA_MaxAbsScaler.ipynb",
                        "keywords": "incremental pca,incremental principal component analysis,pca,incremental pca sklearn,pca sklearn,maxabsscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/incremental-pca-maxabsscaler"
                    },
                    {
                        "name": "IncrementalPCA_MinMaxScaler.ipynb",
                        "title": "Incremental PCA With MinMaxScaler",
                        "description": "Incremental Principal Component Analysis(IncrementalPCA) along with feature rescaling MinMaxScaler in python for dimensionality reduction technique. IPCA builds a low-rank approximation for the input data using an amount of memory that is independent of the number of input data samples. It is still dependent on the input data features, but changing the batch size allows for control of memory usage.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/IncrementalPCA_MinMaxScaler.ipynb",
                        "keywords": "incremental pca,incremental principal component analysis,pca,incremental pca sklearn,pca sklearn,minmaxscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/incremental-pca-minmaxscaler"
                    },
                    {
                        "name": "IncrementalPCA_Normalize.ipynb",
                        "title": "Incremental PCA With Normalization",
                        "description": "Incremental Principal Component Analysis(IncrementalPCA) along with feature rescaling Normalizer in python for dimensionality reduction technique. It is used to decompose a multivariate dataset into a set of successive orthogonal components that explain a maximum amount of the variance, keeping only the most significant singular vectors to project the data to a lower dimensional space. Depending on the size of the input data, this algorithm can be much more memory efficient than a PCA and allows sparse input.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/IncrementalPCA_Normalize.ipynb",
                        "keywords": "incremental pca,incremental principal component analysis,pca,incremental pca sklearn,pca sklearn,normalization",
                        "display_url": "https://siberian.dev/dimensionality-reduction/incremental-pca-normalization"
                    },
                    {
                        "name": "IncrementalPCA_RobustScaler.ipynb",
                        "title": "Incremental PCA With RobustScaler",
                        "description": "Dimensionality Reduction using Incremental Principal Component Analysis(IncrementalPCA) along data rescaling method RobustScaler in python. IPCA is used to decompose a multivariate dataset into a set of successive orthogonal components that explain a maximum amount of the variance, keeping only the most significant singular vectors to project the data to a lower dimensional space.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/IncrementalPCA_RobustScaler.ipynb",
                        "keywords": "incremental pca,incremental principal component analysis,pca,incremental pca sklearn,pca sklearn,robustscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/incremental-pca-robustscaler"
                    },
                    {
                        "name": "IncrementalPCA_Scale.ipynb",
                        "title": "Incremental PCA With Scale",
                        "description": "Incremental Principal Component Analysis(IncrementalPCA) along with feature rescaling Scale in python for dimensionality reduction technique. It is used to decompose a multivariate dataset into a set of successive orthogonal components that explain a maximum amount of the variance, keeping only the most significant singular vectors to project the data to a lower dimensional space.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/IncrementalPCA_Scale.ipynb",
                        "keywords": "incremental pca,incremental principal component analysis,pca,incremental pca sklearn,pca sklearn,scaling technique",
                        "display_url": "https://siberian.dev/dimensionality-reduction/incremental-pca-scale"
                    },
                    {
                        "name": "IncrementalPCA_StandardScaler.ipynb",
                        "title": "Incremental PCA With StandardScaler",
                        "description": "The Code Template illustrates Dimensionality Reduction using Incremental Principal Component Analysis (IPCA). The pipeline includes StandScaler for data normalization for space and time complexity.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/IncrementalPCA_StandardScaler.ipynb",
                        "keywords": "incremental pca,incremental principal component analysis,pca,incremental pca sklearn,pca sklearn,standardscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/incremental-pca-standardscaler"
                    },
                    {
                        "name": "KernelPCA.ipynb",
                        "title": "Kernel PCA",
                        "description": "Kernel principal component analysis(Kernel PCA) in python is a non-linear technique for dimensionality reduction through the use of Kernel.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/KernelPCA.ipynb",
                        "keywords": "kernel pca,kernel principal component analysis,kernel pca sklearn,pca,kpca",
                        "display_url": "https://siberian.dev/dimensionality-reduction/kernel-pca"
                    },
                    {
                        "name": "KernelPCA_MaxAbsScaler.ipynb",
                        "title": "Kernel PCA With MaxAbsScaler",
                        "description": "Kernel Pricipal Component(Kernel PCA) in python is a non-linear technique for dimensionality reduction through use of kernel. Kernel PCA is an extension of principal component analysis (PCA) using techniques of kernel methods. Using kernel, the original linear operations of PCA is performed in a reproducing kernel Hilbert space.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/KernelPCA_MaxAbsScaler.ipynb",
                        "keywords": "kernel pca,kernel principal component analysis,kernel pca sklearn,pca,kpca,maxabsscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/kernel-pca-maxabsscaler"
                    },
                    {
                        "name": "KernelPCA_MinMaxScaler.ipynb",
                        "title": "Kernel PCA With MinMaxScaler",
                        "description": "Kernel Pricipal Component(Kernel PCA) in python is a non-linear technique for dimensionality reduction through the use of Kernel along with the MinMaxScaler as a feature rescaling technique. Kernel PCA has been demonstrated to be useful for novelty detection and image de-noising.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/KernelPCA_MinMaxScaler.ipynb",
                        "keywords": "kernel pca,kernel principal component analysis,kernel pca sklearn,pca,kpca,minmaxscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/kernel-pca-minmaxscaler"
                    },
                    {
                        "name": "KernelPCA_RobustScaler.ipynb",
                        "title": "Kernel PCA With RobustScaler",
                        "description": "Kernel Pricipal Component(Kernel PCA) in python is a non-linear technique for dimensionality reduction through the use of Kernel along with the RobustScaler as a feature rescaling technique. The basic idea behind it is to project the linearly inseparable data onto a higher dimensional space where it becomes linearly separable.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/KernelPCA_RobustScaler.ipynb",
                        "keywords": "kernel pca,kernel principal component analysis,kernel pca sklearn,pca,kpca,robustscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/kernel-pca-robustscaler"
                    },
                    {
                        "name": "KernelPCA_Scale.ipynb",
                        "title": "Kernel PCA With Scale",
                        "description": "Kernel Pricipal Component(Kernel PCA) in python is a non-linear technique for dimensionality reduction through the use of Kernel along with the Scale as a feature rescaling technique. Sometimes the structure of the data is nonlinear, and the principle components will not give us the optimal dimensionality reduction, so we use non-linear methods like KPCA.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/KernelPCA_Scale.ipynb",
                        "keywords": "kernel pca,kernel principal component analysis,kernel pca sklearn,pca,kpca,scaling technique",
                        "display_url": "https://siberian.dev/dimensionality-reduction/kernel-pca-scale"
                    },
                    {
                        "name": "KernelPCA_StandardScaler.ipynb",
                        "title": "Kernel PCA With StandardScaler",
                        "description": "Kernel Pricipal Component(Kernel PCA) in python is a non-linear technique for dimensionality reduction through the use of Kernel along with the StandardScaler as a feature rescaling technique. The idea of KPCA relies on the intuition that many datasets, which are not linearly separable in their space, can be made linearly separable by projecting them into a higher dimensional space.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/KernelPCA_StandardScaler.ipynb",
                        "keywords": "kernel pca,kernel principal component analysis,kernel pca sklearn,pca,kpca,standardscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/kernel-pca-standardscaler"
                    },
                    {
                        "name": "MiniBatchSparsePCA.ipynb",
                        "title": "Mini Batch Sparse PCA",
                        "description": "Mini-batch Sparse Principal Components Analysis in python for dimensionality reduction technique. It finds a set of sparse components that can optimally reconstruct the data. The amount of sparseness is controllable by the coefficient of the L1 penalty, given by the parameter alpha.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/MiniBatchSparsePCA.ipynb",
                        "keywords": "mini batch sparse pca,pca,sparse pca,sparse pca sklearn,sparse pca python",
                        "display_url": "https://siberian.dev/dimensionality-reduction/mini-batch-sparse-pca"
                    },
                    {
                        "name": "MiniBatchSparsePCA_MaxAbsScaler.ipynb",
                        "title": "Mini Batch Sparse PCA With MaxAbsScaler",
                        "description": "Mini Batch Sparse Principal Component Analysis along with feature scaling MaxAbsScaler in python for dimensionality reduction technique.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/MiniBatchSparsePCA_MaxAbsScaler.ipynb",
                        "keywords": "mini batch sparse pca,pca,sparse pca,sparse pca sklearn,sparse pca python,maxabsscaler,",
                        "display_url": "https://siberian.dev/dimensionality-reduction/mini-batch-sparse-pca-maxabsscaler"
                    },
                    {
                        "name": "MiniBatchSparsePCA_MinMaxScaler.ipynb",
                        "title": "Mini Batch Sparse PCA With MinMaxScaler",
                        "description": "Mini-batch Sparse Principal Components Analysis in python for dimensionality reduction technique. Mini-batch sparse PCA  is a variant of SparsePCA that is faster but less accurate. The increased speed is reached by iterating over small chunks of the set of features, for a given number of iterations.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/MiniBatchSparsePCA_MinMaxScaler.ipynb",
                        "keywords": "mini batch sparse pca,pca,sparse pca,sparse pca sklearn,sparse pca python,minmaxscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/mini-batch-sparse-pca-minmaxscaler"
                    },
                    {
                        "name": "MiniBatchSparsePCA_Normalizer.ipynb",
                        "title": "Mini Batch Sparse PCA With Normalization",
                        "description": "Mini-batch Sparse Principal Components Analysis in python for dimensionality reduction technique. It yields a more parsimonious, interpretable representation, clearly emphasizing which of the original features contribute to the differences between samples. The features are rescaled using sci-kit learns Normalizer.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/MiniBatchSparsePCA_Normalizer.ipynb",
                        "keywords": "mini batch sparse pca,pca,sparse pca,sparse pca sklearn,sparse pca python,normalization",
                        "display_url": "https://siberian.dev/dimensionality-reduction/mini-batch-sparse-pca-normalization"
                    },
                    {
                        "name": "MiniBatchSparsePCA_RobustScaler.ipynb",
                        "title": "Mini Batch Sparse PCA With RobustScaler",
                        "description": "Mini-batch Sparse Principal Components Analysis in python for dimensionality reduction technique. It finds a set of sparse components that can optimally reconstruct the data. In the template, RobustScaler is utilized for data normalization.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/MiniBatchSparsePCA_RobustScaler.ipynb",
                        "keywords": "mini batch sparse pca,pca,sparse pca,sparse pca sklearn,sparse pca python,robustscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/mini-batch-sparse-pca-robustscaler"
                    },
                    {
                        "name": "MiniBatchSparsePCA_Scale.ipynb",
                        "title": "Mini Batch Sparse PCA With Scale",
                        "description": "Mini-batch Sparse Principal Components Analysis in python for dimensionality reduction technique along with data rescaling using sci-kit learns scale function from preprocessing class. The algorithm finds a set of sparse components that can optimally reconstruct the data.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/MiniBatchSparsePCA_Scale.ipynb",
                        "keywords": "mini batch sparse pca,pca,sparse pca,sparse pca sklearn,sparse pca python,scaling technique",
                        "display_url": "https://siberian.dev/dimensionality-reduction/mini-batch-sparse-pca-scale"
                    },
                    {
                        "name": "MiniBatchSparsePCA_StandardScaler.ipynb",
                        "title": "Mini Batch Sparse PCA With StandardScaler",
                        "description": "The Dimensionality Reduction problem using the MiniBatchSparsePCA algorithm, which is a variant of SparsePCA. The input data is normalized using StandardScaler from sci-kit learn preprocessing class.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/MiniBatchSparsePCA_StandardScaler.ipynb",
                        "keywords": "mini batch sparse pca,pca,sparse pca,sparse pca sklearn,sparse pca python,standardscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/mini-batch-sparse-pca-standardscaler"
                    },
                    {
                        "name": "PCA.ipynb",
                        "title": "Principal Component Analysis(PCA)",
                        "description": "Principal Component Analysis(PCA) in python for dimensionality reduction technique. It is used to decompose a multivariate dataset into a set of successive orthogonal components that explain a maximum amount of variance.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/PCA.ipynb",
                        "keywords": "principal component analysis,pca,pca analysis,principal component analysis sklearn,principal component analysis algorithm,pca algorithm",
                        "display_url": "https://siberian.dev/dimensionality-reduction/pca"
                    },
                    {
                        "name": "PCA_MaxAbsScaler.ipynb",
                        "title": "Principal Component Analysis(PCA) With MaxAbsScaler",
                        "description": "Principal Component Analysis(PCA) along with feature scaling via MaxAbsScaler in python for dimensionality reduction technique. It is a common technique for analyzing large datasets containing a high number of features per observation. It increases the interpretability of data while preserving the maximum amount of information and enabling the visualization of multidimensional data.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/PCA_MaxAbsScaler.ipynb",
                        "keywords": "principal component analysis,pca,pca analysis,principal component analysis sklearn,principal component analysis algorithm,pca algorithm,maxabsscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/pca-maxabsscaler"
                    },
                    {
                        "name": "PCA_MinMaxScaler.ipynb",
                        "title": "Principal Component Analysis(PCA) With MinMaxScaler",
                        "description": "Principal Component Analysis(PCA) along with feature scaling MinMaxScaler in python for dimensionality reduction technique. Formally, PCA is a statistical technique for reducing the dimensionality of a dataset. This is accomplished by linearly transforming the data into a new coordinate system where (most of) the variation in the data can be described with fewer dimensions than the initial data.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/PCA_MinMaxScaler.ipynb",
                        "keywords": "principal component analysis,pca,pca analysis,principal component analysis sklearn,principal component analysis algorithm,pca algorithm,minmaxscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/pca-minmaxscaler"
                    },
                    {
                        "name": "PCA_Normalize.ipynb",
                        "title": "Principal Component Analysis(PCA) With Normalization",
                        "description": "Principal Component Analysis(PCA) along feature scaling Normalize in python for dimensionality reduction technique. PCA is used in exploratory data analysis and for making predictive models.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/PCA_Normalize.ipynb",
                        "keywords": "principal component analysis,pca,pca analysis,principal component analysis sklearn,principal component analysis algorithm,pca algorithm,normalization",
                        "display_url": "https://siberian.dev/dimensionality-reduction/pca-normalization"
                    },
                    {
                        "name": "PCA_RobustScaler.ipynb",
                        "title": "Principal Component Analysis(PCA) With RobustScaler",
                        "description": "Principal Component Analysis(PCA) along with feature scaling RobustScaler in python for dimensionality reduction technique. It is commonly used for dimensionality reduction by projecting each data point onto only the first few principal components to obtain lower-dimensional data while preserving as much of the data's variation as possible.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/PCA_RobustScaler.ipynb",
                        "keywords": "principal component analysis,pca,pca analysis,principal component analysis sklearn,principal component analysis algorithm,pca algorithm,robustscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/pca-robustscaler"
                    },
                    {
                        "name": "PCA_Scale.ipynb",
                        "title": "Principal Component Analysis(PCA) With Scaler",
                        "description": "Principal Component Analysis(PCA) along feature scaling via Scale in python for dimensionality reduction technique.   PCA is the simplest of the true eigenvector-based multivariate analyses and is closely related to factor analysis.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/PCA_Scale.ipynb",
                        "keywords": "principal component analysis,pca,pca analysis,principal component analysis sklearn,principal component analysis algorithm,pca algorithm,scaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/pca-scale"
                    },
                    {
                        "name": "PCA_StandardScaler.ipynb",
                        "title": "Principal Component Analysis(PCA) With StandardScaler",
                        "description": "Principal Component Analysis(PCA) along with feature scaling StandardScaler in python for dimensionality reduction technique. PCA rapidly transforms large amounts of data into smaller, easier-to-digest variables that can be more rapidly and readily analyzed.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/PCA_StandardScaler.ipynb",
                        "keywords": "principal component analysis,pca,pca analysis,principal component analysis sklearn,principal component analysis algorithm,pca algorithm,standardscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/pca-standardscaler"
                    },
                    {
                        "name": "SparsePCA.ipynb",
                        "title": "Sparse PCA",
                        "description": "Sparse Principal Component Analysis(SparsePCA) in python for dimensionality reduction technique. It is used to decompose a multivariate dataset into a set of successive orthogonal components that explain a maximum amount of the variance, keeping only the most significant singular vectors to project the data to a lower dimensional space.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/SparsePCA.ipynb",
                        "keywords": "pca,sparse pca,sparse pca sklearn,sparse pca python, sparse principal component analysis",
                        "display_url": "https://siberian.dev/dimensionality-reduction/sparse-pca"
                    },
                    {
                        "name": "SparsePCA_MaxAbsScaler.ipynb",
                        "title": "Sparse PCA With MaxAbsScaler",
                        "description": "Sparse Principal Component Analysis(SparsePCA) along with MaxAbsScaler in python for dimensionality reduction technique and Data Rescaling. Sparse principal component analysis (sparse PCA) is a specialized technique used in statistical analysis and, in particular, in the analysis of multivariate data sets.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/SparsePCA_MaxAbsScaler.ipynb",
                        "keywords": "pca,sparse pca,sparse pca sklearn,sparse pca python, sparse principal component analysis,maxabsscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/sparse-pca-maxabsscaler"
                    },
                    {
                        "name": "SparsePCA_MinMaxScaler.ipynb",
                        "title": "SparsePCA With MinMaxScaler",
                        "description": "Sparse Principal Component Analysis(SparsePCA) along with MinMax Scaler in python for dimensionality reduction technique and Data Rescaling. It extends the classic method of principal component analysis (PCA) for the reduction of dimensionality of data by introducing sparsity structures to the input variables.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/SparsePCA_MinMaxScaler.ipynb",
                        "keywords": "pca,sparse pca,sparse pca sklearn,sparse pca python, sparse principal component analysis,minmaxscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/sparse-pca-minmaxscaler"
                    },
                    {
                        "name": "SparsePCA_Normalize.ipynb",
                        "title": "Sparse PCA With Normalization",
                        "description": "Sparse Principal Component Analysis(SparsePCA) along with Standard Scaler in python for dimensionality reduction technique and Data Rescaling using Normalize.  Sparse PCA overcomes this disadvantage of original PCA by finding linear combinations that contain just a few input variables.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/SparsePCA_Normalize.ipynb",
                        "keywords": "pca,sparse pca,sparse pca sklearn,sparse pca python, sparse principal component analysis,normalization",
                        "display_url": "https://siberian.dev/dimensionality-reduction/sparse-pca-normalization"
                    },
                    {
                        "name": "SparsePCA_RobustScaler.ipynb",
                        "title": "Sparse PCA With RobustScaler",
                        "description": "Sparse Principal Component Analysis(SparsePCA) along with Robust Scaler in python for dimensionality reduction technique and Data Rescaling. SparsePCA is a variant of PCA, that intends to extract the set of sparse components that best reconstruct the data.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/SparsePCA_RobustScaler.ipynb",
                        "keywords": "pca,sparse pca,sparse pca sklearn,sparse pca python, sparse principal component analysis,robustscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/sparse-pca-robustscaler"
                    },
                    {
                        "name": "SparsePCA_Scale.ipynb",
                        "title": "Sparse PCA With Scale",
                        "description": "Sparse Principal Component Analysis(SparsePCA). It is used to decompose a multivariate dataset into a set of successive orthogonal components that explain a maximum amount of the variance, keeping only the most significant singular vectors to project the data to a lower dimensional space. And Scale is utilized in the template for data normalization.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/SparsePCA_Scale.ipynb",
                        "keywords": "pca,sparse pca,sparse pca sklearn,sparse pca python, sparse principal component analysis,scaling technique",
                        "display_url": "https://siberian.dev/dimensionality-reduction/sparse-pca-scale"
                    },
                    {
                        "name": "SparsePCA_StandardScaler.ipynb",
                        "title": "Sparse PCA With StandardScaler",
                        "description": "Sparse Principal Component Analysis(SparsePCA) along with Standard Scaler in python for dimensionality reduction technique and Data Rescaling. It is used to decompose a multivariate dataset into a set of successive orthogonal components that explain a maximum amount of the variance, keeping only the most significant singular vectors to project the data to a lower dimensional space.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/SparsePCA_StandardScaler.ipynb",
                        "keywords": "pca,sparse pca,sparse pca sklearn,sparse pca python, sparse principal component analysis,standardscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/sparse-pca-standardscaler"
                    }
                ]
            },
            {
                "name": "Spectral_Embedding",
                "models": [
                    {
                        "name": "SpectralEmbedding.ipynb",
                        "title": "Spectral Embedding",
                        "description": "Spectral Embedding in python is a non-linear technique for dimensionality reduction that is particularly well suited for the visualization of high-dimensional datasets.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/Spectral_Embedding/SpectralEmbedding.ipynb",
                        "keywords": "spectral embedding,spectral clustering,scaling technique,laplacian embedding,non-linear technique",
                        "display_url": "https://siberian.dev/dimensionality-reduction/spectral-embedding"
                    },
                    {
                        "name": "SpectralEmbedding_MinMaxScaler.ipynb",
                        "title": "Spectral Embedding With MinMaxScaler",
                        "description": "SpectralEmbedding in python is a non-linear technique for dimensionality reduction that is particularly well suited for the visualization of high-dimensional datasets.  Under its hood, the algorithm in action is Laplacian Eigenmaps. Laplacian Eigenmaps are considerably similar to Isometric Feature Mapping. This template utilizes the data rescaling technique MinMaxScaler from sklearn.preprocessing class.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/Spectral_Embedding/SpectralEmbedding_MinMaxScaler.ipynb",
                        "keywords": "spectral embedding,spectral clustering,scaling technique,laplacian embedding,non-linear technique,minmaxscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/spectral-embedding-minmaxscaler"
                    },
                    {
                        "name": "SpectralEmbedding_RobustScaler.ipynb",
                        "title": "Spectral Embedding With RobustScaler",
                        "description": "SpectralEmbedding in python is a non-linear technique for dimensionality reduction. This technique relies on the basic assumption that the data lies in a low-dimensional manifold in a high-dimensional space.  This template utilizes SpectralEmbedding implementation along with feature scaling using RobustScaler.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/Spectral_Embedding/SpectralEmbedding_RobustScaler.ipynb",
                        "keywords": "spectral embedding,spectral clustering,scaling technique,laplacian embedding,non-linear technique,robustscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/spectral-embedding-robustscaler"
                    },
                    {
                        "name": "SpectralEmbedding_StandardScaler.ipynb",
                        "title": "Spectral Embedding With StandardScaler",
                        "description": "SpectralEmbedding is a non-linear technique for dimensionality reduction. The Spectral Embedding (Laplacian Eigenmaps) algorithm consists of three: stages constructing the Adjacency Graph, Choosing the Weights, and Obtaining the Eigenmaps. The demonstration also utilizes StandScaler as the data normalization technique.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/Spectral_Embedding/SpectralEmbedding_StandardScaler.ipynb",
                        "keywords": "spectral embedding,spectral clustering,scaling technique,laplacian embedding,non-linear technique,standardscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/spectral-embedding-standardscaler"
                    }
                ]
            },
            {
                "name": "SVD",
                "models": [
                    {
                        "name": "TruncatedSVD.ipynb",
                        "title": "Truncated SVD",
                        "description": "TruncatedSVD in python for dimensionality reduction technique. It is used to decompose a multivariate dataset into a set of successive orthogonal components that explain a maximum amount of variance.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/SVD/TruncatedSVD.ipynb",
                        "keywords": "truncated svd,truncated svd algorithm,truncated svd sklearn,truncated singular value decomposition,singular value decomposition",
                        "display_url": "https://siberian.dev/dimensionality-reduction/truncated-svd"
                    },
                    {
                        "name": "TruncatedSVD_MaxAbsScaler.ipynb",
                        "title": "Truncated SVD With MaxAbsScaler",
                        "description": "TruncatedSVD in python for dimensionality reduction technique with MaxAbsScaler feature scaling. Contrary to PCA, this estimator does not center the data before computing the singular value decomposition.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/SVD/TruncatedSVD_MaxAbsScaler.ipynb",
                        "keywords": "truncated svd,truncated svd algorithm,truncated svd sklearn,truncated singular value decomposition,singular value decomposition,maxabsscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/truncated-svd-maxabsscaler"
                    },
                    {
                        "name": "TruncatedSVD_MinMaxScaler.ipynb",
                        "title": "Truncated SVD With MinMaxScaler",
                        "description": "TruncatedSVD in python for dimensionality reduction technique with MinMax Scaler feature scaling. Truncated Singular Value Decomposition (SVD) is a matrix factorization technique that factors a matrix M into the three matrices.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/SVD/TruncatedSVD_MinMaxScaler.ipynb",
                        "keywords": "truncated svd,truncated svd algorithm,truncated svd sklearn,truncated singular value decomposition,singular value decomposition,minmaxscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/truncated-svd-minmaxscaler"
                    },
                    {
                        "name": "TruncatedSVD_Normalize.ipynb",
                        "title": "Truncated SVD With Normalization",
                        "description": "TruncatedSVD in python for dimensionality reduction technique with Normalizer feature scaling. The sci-kit learn estimator supports two algorithms: a fast randomized SVD solver, and a \u00e2\u20ac\u0153naive\u00e2\u20ac algorithm that uses ARPACK as an eigensolver on X * X.T or X.T * X, whichever is more efficient.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/SVD/TruncatedSVD_Normalize.ipynb",
                        "keywords": "truncated svd,truncated svd algorithm,truncated svd sklearn,truncated singular value decomposition,singular value decomposition,normalization",
                        "display_url": "https://siberian.dev/dimensionality-reduction/truncated-svd-normalization"
                    },
                    {
                        "name": "TruncatedSVD_RobustScaler.ipynb",
                        "title": "Truncated SVD With RobustScaler",
                        "description": "TruncatedSVD in python for dimensionality reduction technique with Robust Scaler feature scaling. This is very similar to PCA, except that the factorization for SVD is done on the data matrix, whereas for PCA, the factorization is done on the covariance matrix.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/SVD/TruncatedSVD_RobustScaler.ipynb",
                        "keywords": "truncated svd,truncated svd algorithm,truncated svd sklearn,truncated singular value decomposition,singular value decomposition,robustscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/truncated-svd-robustscaler"
                    },
                    {
                        "name": "TruncatedSVD_Scale.ipynb",
                        "title": "Truncated SVD With Scale",
                        "description": "TruncatedSVD in python for dimensionality reduction technique with Scale feature scaling. Truncated SVD is different from regular SVDs in that it produces a factorization where the number of columns is equal to the specified truncation.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/SVD/TruncatedSVD_Scale.ipynb",
                        "keywords": "truncated svd,truncated svd algorithm,truncated svd sklearn,truncated singular value decomposition,singular value decomposition,scaling technique",
                        "display_url": "https://siberian.dev/dimensionality-reduction/truncated-svd-scale"
                    },
                    {
                        "name": "TruncatedSVD_StandardScaler.ipynb",
                        "title": "Truncated SVD With StandardScaler",
                        "description": "Dimensionality Reduction using TruncatedSVD or Truncated Singular Value Decomposition. The demonstration also utilizes the data rescaling technique Scale.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/SVD/TruncatedSVD_StandardScaler.ipynb",
                        "keywords": "truncated svd,truncated svd algorithm,truncated svd sklearn,truncated singular value decomposition,singular value decomposition,standardscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/truncated-svd-standardscaler"
                    }
                ]
            },
            {
                "name": "TSNE",
                "models": [
                    {
                        "name": "TSNE.ipynb",
                        "title": "t-SNE",
                        "description": "TSNE(t-distributed stochastic neighbor embedding) in python is a non-linear technique for dimensionality reduction that is particularly well suited for the visualization of high-dimensional datasets.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/TSNE/TSNE.ipynb",
                        "keywords": "t-sne,t-distributed stochastic neighbor embedding,t-sne machine learning,t-sne algorithm,t-sne sklearn",
                        "display_url": "https://siberian.dev/dimensionality-reduction/tsne"
                    },
                    {
                        "name": "TSNE_MinMaxScaler.ipynb",
                        "title": "t-SNE With MinMaxScaler",
                        "description": "TSNE(t-distributed stochastic neighbor embedding) for dimensionality reduction along with the MinMaxScaler as a feature rescaling technique. T-distributed stochastic neighbor embedding (t-SNE) is a statistical method for visualizing high-dimensional data by giving each data point a location in a two or three-dimensional map.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/TSNE/TSNE_MinMaxScaler.ipynb",
                        "keywords": "t-sne,t-distributed stochastic neighbor embedding,t-sne machine learning,t-sne algorithm,t-sne sklearn,,minmaxscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/tsne-minmaxscaler"
                    },
                    {
                        "name": "TSNE_Normalize.ipynb",
                        "title": "t-SNE With Normalization",
                        "description": "TSNE(t-distributed stochastic neighbor embedding) for Dimensionality reduction. It is a nonlinear dimensionality reduction technique well-suited for embedding high-dimensional data for visualization in a low-dimensional space of two or three dimensions. Normalize from sci-kit learn is utilized for data normalization.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/TSNE/TSNE_Normalize.ipynb",
                        "keywords": "t-sne,t-distributed stochastic neighbor embedding,t-sne machine learning,t-sne algorithm,t-sne sklearn,normalization",
                        "display_url": "https://siberian.dev/dimensionality-reduction/tsne-normalization"
                    },
                    {
                        "name": "TSNE_RobustScaler.ipynb",
                        "title": "t-SNE With RobustScaler",
                        "description": "TSNE(t-distributed stochastic neighbor embedding) in python is a non-linear technique for dimensionality reduction that is particularly well suited for the visualization of high-dimensional datasets along with the RobustScaler as a feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/TSNE/TSNE_RobustScaler.ipynb",
                        "keywords": "t-sne,t-distributed stochastic neighbor embedding,t-sne machine learning,t-sne algorithm,t-sne sklearn,robustscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/tsne-robustscaler"
                    },
                    {
                        "name": "TSNE_StandardScaler.ipynb",
                        "title": "t-SNE With StandardScaler",
                        "description": "TSNE(t-distributed stochastic neighbor embedding) for dimensionality reduction. t-SNE has been used for visualization in a wide range of applications, including genomics, computer security research, natural language processing, music analysis, cancer research, bioinformatics, geological domain interpretation, and biomedical signal processing.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/TSNE/TSNE_StandardScaler.ipynb",
                        "keywords": "t-sne,t-distributed stochastic neighbor embedding,t-sne machine learning,t-sne algorithm,t-sne sklearn,standardscaler",
                        "display_url": "https://siberian.dev/dimensionality-reduction/tsne-standardscaler"
                    }
                ]
            }
        ]
    },
    {
        "name": "EDA",
        "image": "https://cdn.siberian.dev/code-gen/EDA_blue.png",
        "description": "EDA is an approach of analyzing data to summarize their characteristics.",
        "models": [
            {
                "name": "Auto_Visualization",
                "models": [
                    {
                        "name": "AutoViz.ipynb",
                        "title": "Auto Visualization Using AutoViz",
                        "description": "The Exploratory Data Analysis using AutoViz. AutoViz performs automatic visualization of any dataset with one line. Give any input file (CSV, text, or JSON), and AutoViz will visualize it.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Auto_Visualization/AutoViz.ipynb",
                        "keywords": "autoviz,autoviml,autoeda,automated visualization,autoviz python,eda",
                        "display_url": "https://siberian.dev/eda/auto-visualization-using-autoviz"
                    },
                    {
                        "name": "DataPrep.ipynb",
                        "title": "Auto Visualization Using Dataprep",
                        "description": "The Exploratory Data Analysis using the DataPrep. It is the fastest and easiest EDA (Exploratory Data Analysis) library. It allows you to understand a Pandas DataFrame with a few lines of code.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Auto_Visualization/DataPrep.ipynb",
                        "keywords": "autoviz,autoviml,autoeda,automated visualization,autoviz python,eda",
                        "display_url": "https://siberian.dev/eda/auto-visualization-using-dataprep"
                    },
                    {
                        "name": "PandasVisualAnalysis.ipynb",
                        "title": "Auto Visualization Using Pandas Visual Analysis",
                        "description": "The Exploratory Data Analysis using the PandasVisualAnalysis. It is a package provided by python for interactive visual analysis in a Jupyter notebook. It generates an interactive visual analysis widget to analyze pandas' Data Frame.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Auto_Visualization/PandasVisualAnalysis.ipynb",
                        "keywords": "autoviz,autoviml,autoeda,automated visualization,autoviz python,eda,pandas visusal analysis",
                        "display_url": "https://siberian.dev/eda/auto-visualization-using-pandas-visual-analysis"
                    },
                    {
                        "name": "Pandas_Profiling.ipynb",
                        "title": "Auto Visualization Using Pandas-Profilling",
                        "description": "The Exploratory Data Analysis using Pandas profiling. Pandas profiling is an open-source library with which we can do an exploratory data analysis with just a few lines of code.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Auto_Visualization/Pandas_Profiling.ipynb",
                        "keywords": "autoviz,autoviml,autoeda,automated visualization,autoviz python,eda,pandas profiling",
                        "display_url": "https://siberian.dev/eda/auto-visualization-using-pandas-profiling"
                    },
                    {
                        "name": "SweetViz.ipynb",
                        "title": "Auto Visualization Using SweetViz",
                        "description": "The Exploratory Data Analysis using the SweetViz. It is an open-source library that generates beautiful, high-density visualizations. Output is a fully self-contained HTML application.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Auto_Visualization/SweetViz.ipynb",
                        "keywords": "autoviz,autoviml,autoeda,automated visualization,autoviz python,eda,sweetviz",
                        "display_url": "https://siberian.dev/eda/auto-visualization-using-sweetviz"
                    }
                ]
            },
            {
                "name": "Basic_Visualization",
                "models": [
                    {
                        "name": "CorrelationPlot.ipynb",
                        "title": "Visualization Using Correlation Plot",
                        "description": "The Exploratory Data Analysis using a Correlation Plot which plots a 2D correlation matrix between two discrete dimensions, using colored cells to represent data from usually a monochromatic scale.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Basic_Visualization/CorrelationPlot.ipynb",
                        "keywords": "correlation plot,exploratory data analysis\n,monochromatic scale,correlation matrix,correlation visusalization",
                        "display_url": "https://siberian.dev/eda/visualization-using-correlation-plot"
                    },
                    {
                        "name": "Histogram.ipynb",
                        "title": "Visualization Using Histogram",
                        "description": "The Exploratory Data Analysis using Histogram. A histogram represents the distribution of a variable by creating bins (intervals) along the range of values and showing vertical bars to indicate the number of observations in each bin.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Basic_Visualization/Histogram.ipynb",
                        "keywords": "correlation plot,exploratory data analysis\r\n,monochromatic scale,correlation matrix,correlation visusalization,histogram",
                        "display_url": "https://siberian.dev/eda/visualization-using-histogram"
                    },
                    {
                        "name": "PairwisePlot.ipynb",
                        "title": "Visualization Using Pair Plot",
                        "description": "The Exploratory Data Analysis using the Pairwise. It is an open-source library that generates beautiful, high-density visualizations. Output is a fully self-contained HTML application.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Basic_Visualization/PairwisePlot.ipynb",
                        "keywords": "correlation plot,exploratory data analysis\n,monochromatic scale,correlation matrix,correlation visusalization,pair plot,",
                        "display_url": "https://siberian.dev/eda/auto-visualization-using-pairwise-plot"
                    },
                    {
                        "name": "ScatterPlot.ipynb",
                        "title": "Visualization Using Scatter Plot",
                        "description": "The Exploratory Data Analysis using a Scatter Plot, which plots numeric data with the possibility of several semantic groupings.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Basic_Visualization/ScatterPlot.ipynb",
                        "keywords": "correlation plot,exploratory data analysis\r\n,monochromatic scale,correlation matrix,correlation visusalization,scatter plot",
                        "display_url": "https://siberian.dev/eda/visualization-using-scatter-plot"
                    },
                    {
                        "name": "ViolenPlot.ipynb",
                        "title": "Visualization Using Violen Plot",
                        "description": "The Exploratory Data Analysis using Violen Plot. A violen plot plots numeric data with a rotated kernel density plot on each side showing the full distribution of the data.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Basic_Visualization/ViolenPlot.ipynb",
                        "keywords": "correlation plot,exploratory data analysis\r\n,monochromatic scale,correlation matrix,correlation visusalization,violen plot",
                        "display_url": "https://siberian.dev/eda/visualization-using-violen-plot"
                    },
                    {
                        "name": "WordCloud.ipynb",
                        "title": "Visualization Using WordCloud",
                        "description": "This code is to summarize vast pieces of information visually. It is created using WordCloud from the wordcloud package.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Basic_Visualization/WordCloud.ipynb",
                        "keywords": "correlation plot,exploratory data analysis\r\n,monochromatic scale,correlation matrix,correlation visusalization,wordcloud",
                        "display_url": "https://siberian.dev/eda/visualization-using-wordcloud"
                    }
                ]
            }
        ]
    },
    {
        "name": "NLP",
        "image": "https://cdn.siberian.dev/code-gen/nlp_blue.png",
        "description": "Give computers an ability to understand human dialect.",
        "models": [
            {
                "name": "Natural_Language_Processing",
                "models": [
                    {
                        "name": "FillMaskBERT_Cased.ipynb",
                        "title": "Fill-Mask Using BERT Base Model(cased)",
                        "description": "this code is to perform a Mask filling operation in python using the HuggingFace library. In this template, BERT Model has been demonstrated. BERT is a transformers model pre-trained on a large corpus of English data in a self-supervised fashion. BERT has originally been released in base and large variations for cased and uncased input text",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/FillMaskBERT_Cased.ipynb",
                        "keywords": "bert base model,bert model,hugging face,hugging face library,bert base cased,bert base uncased",
                        "display_url": "https://siberian.dev/nlp/fill-mask-using-bert-base-model-cased"
                    },
                    {
                        "name": "FillMaskBERT_Uncased.ipynb",
                        "title": "Fill-Mask Using BERT base model (uncased)",
                        "description": "This code is to perform a Mask filling operation in python using the HuggingFace library. In this template, BERT Model is utilized. BERT is a transformers model pretrained on a large corpus of English data in a self-supervised fashion. The uncased BERT models also strip out accent markers.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/FillMaskBERT_Uncased.ipynb",
                        "keywords": "bert base model,bert model,hugging face,hugging face library,bert base uncased,bert base case",
                        "display_url": "https://siberian.dev/nlp/fill-mask-using-bert-base-model-uncased"
                    },
                    {
                        "name": "FillMaskRoBERTa_Base.ipynb",
                        "title": "Fill-Mask Using Roberta Base model",
                        "description": "This code is to perform a Mask filling operation in python using the HuggingFace library. In this template, RoBERTa Model is utilized.RoBERTa is a transformers model pretrained on a large corpus of English data in a self-supervised fashion.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/FillMaskRoBERTa_Base.ipynb",
                        "keywords": "bert base model,bert model,hugging face,hugging face library,bert base cased,bert base uncased,roberta base model",
                        "display_url": "https://siberian.dev/nlp/fill-mask-using-roberta-base-model"
                    },
                    {
                        "name": "FillMaskRoBERTa_Large.ipynb",
                        "title": "Fill-Mask Using Roberta large model",
                        "description": "This code is to perform a Mask filling operation in python using the HuggingFace library. In this template, RoBERTa Model is utilized.RoBERTa is a transformers model pretrained on a large corpus of English data in a self-supervised fashion. Masked language modeling is the task of masking some of the words in a sentence and predicting which words should replace those masks.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/FillMaskRoBERTa_Large.ipynb",
                        "keywords": "bert base model,bert model,hugging face,hugging face library,bert base cased,bert base uncased,roberta large model",
                        "display_url": "https://siberian.dev/nlp/fill-mask-using-roberta-large-model"
                    },
                    {
                        "name": "QuestionAnswer_BERT.ipynb",
                        "title": "Question And Answer Application Using BRET",
                        "description": "Question Answer Application using BRET which stands for Bidirectional Encoder Representations from Transformers.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/QuestionAnswer_BERT.ipynb",
                        "keywords": "bert base model,bert model,hugging face,hugging face library,bert base cased,bert base uncased,bidirectional encoder",
                        "display_url": "https://siberian.dev/nlp/question-answer-application-using-bret"
                    },
                    {
                        "name": "QuestionAnswer_Roberta_base.ipynb",
                        "title": "Question Answer Application Using Roberta-base",
                        "description": "Question Answer Application using Roberta-base, which stands for Robustly Optimized Bidirectional Encoder Representations from Transformers.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/QuestionAnswer_Roberta_base.ipynb",
                        "keywords": "bert base model,bert model,hugging face,hugging face library,bert base cased,bert base uncased,roberta base model",
                        "display_url": "https://siberian.dev/nlp/question-answer-application-using-roberta-base"
                    },
                    {
                        "name": "TextClassificationBERT.ipynb",
                        "title": "Text Classification Using BERT",
                        "description": "Text Classification task using  Bidirectional Encoder Representations from Transformers(BERT). BERT makes use of a Transformer, an attention mechanism that learns contextual relations between words (or sub-words) in a text.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextClassificationBERT.ipynb",
                        "keywords": "bert base model,bert model,hugging face,hugging face library,bert base cased,bert base uncased,bidirectional encoder representation",
                        "display_url": "https://siberian.dev/nlp/text-classification-using-bert"
                    },
                    {
                        "name": "TextClassification_BernoulliNB_TfidfVectorizer.ipynb",
                        "title": "Text Classification Using BernoullinB And Tfidf Vectorizer",
                        "description": "Text Classification using the BernoulliNB algorithm along with the Text Feature technique TfidfVectorizer from Scikit-learn in python.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextClassification_BernoulliNB_TfidfVectorizer.ipynb",
                        "keywords": "bernoullinb,tfidf vectorizer,tf-idf features,tfidf vectorization,bernoullinb algorithm",
                        "display_url": "https://siberian.dev/nlp/text-classification-using-bernoullinb-and-tfidf-vectorizer"
                    },
                    {
                        "name": "TextClassification_CNN.ipynb",
                        "title": "Text Classification Using CNN",
                        "description": "Text Classification using Convolutional Neural Networks (CNN or ConvNet). A Convolutional Neural Network (ConvNet/CNN) is a Deep Learning algorithm that can take in an input, assign importance (learnable weights and biases) to various aspects/objects in the image, and be able to differentiate one from the other.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextClassification_CNN.ipynb",
                        "keywords": "bernoullinb,tfidf vectorizer,tf-idf features,tfidf vectorization,bernoullinb algorithm,cnn,convolutional neural networks,convnet",
                        "display_url": "https://siberian.dev/nlp/text-classification-using-cnn"
                    },
                    {
                        "name": "TextClassification_GradientBoostingClassifier_CountVectorizer.ipynb",
                        "title": "Text Classification Using Gradient Boosting Classifier And Count Vectorizer",
                        "description": "Text Classification using GradientBoostingClassifier based on the Gradient Boosting Ensemble Learning Technique along with the Text Feature technique CountVectorizer from Scikit-learn in python. Scikit-learn\u00e2\u20ac\u2122s CountVectorizer is used to convert a collection of text documents to a vector of term/token counts.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextClassification_GradientBoostingClassifier_CountVectorizer.ipynb",
                        "keywords": "bernoullinb,tfidf vectorizer,tf-idf features,tfidf vectorization,bernoullinb algorithm,gradient boosting, gradient boosting classifier,count vectorizer",
                        "display_url": "https://siberian.dev/nlp/text-classification-using-gradient-boosting-classifier-and-count-vectorizer"
                    },
                    {
                        "name": "TextClassification_GradientBoosting_TfidfVectorizer.ipynb",
                        "title": "Text Classification Using Gradient Boosting Classifier And Tfidf Vectorizer",
                        "description": "Text Classification using Gradient Boosting Classifier along with the Text Feature technique TfidfVectorizer from Scikit-learn in python. TF-IDF is used to reduce the weight of tokens that appear frequently compared to tokens that appear rarely.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextClassification_GradientBoosting_TfidfVectorizer.ipynb",
                        "keywords": "bernoullinb,tfidf vectorizer,tf-idf features,tfidf vectorization,bernoullinb algorithm,gradient boosting classifier,gradient boosting",
                        "display_url": "https://siberian.dev/nlp/text-classification-using-gradient-boosting-classifier-and-tfidf-vectorizer"
                    },
                    {
                        "name": "TextClassification_LinearSVC_CountVectorizer.ipynb",
                        "title": "Text Classification Using LinearSVC And Count Vectorizer",
                        "description": "Text Classification using LinearSVC based on the Support Vector Machine Algorithm along with the Text Feature technique CountVectorizer from Scikit-learn in python. CountVectorizer creates a matrix in which each unique word is represented by a column of the matrix, and each text sample from the document is a row in the matrix.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextClassification_LinearSVC_CountVectorizer.ipynb",
                        "keywords": "bernoullinb,tfidf vectorizer,tf-idf features,tfidf vectorization,bernoullinb algorithm,linearsvc, svc, count vectorizer,vector machine algorithm",
                        "display_url": "https://siberian.dev/nlp/text-classification-using-linear-svcand-count-vectorizer"
                    },
                    {
                        "name": "TextClassification_LinearSVC_TfidfVectorizer.ipynb",
                        "title": "Text Classification Using LinearSVC And Tfidf Vectorizer",
                        "description": "Text Classification using LinearSVC based on the Support Vector Machine Algorithm along with the Text Feature technique TfidfVectorizer from Scikit-learn in python. One can import the TfidfVectorizer function from preprocessing class.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextClassification_LinearSVC_TfidfVectorizer.ipynb",
                        "keywords": "bernoullinb,tfidf vectorizer,tf-idf features,tfidf vectorization,bernoullinb algorithm,linearsvc, svc, count vectorizer,vector machine algorithm",
                        "display_url": "https://siberian.dev/nlp/text-classification-using-linear-svc-and-tfidf-vectorizer"
                    },
                    {
                        "name": "TextClassification_LSTM.ipynb",
                        "title": "Text Classification Using LSTM",
                        "description": "Text Classification using Long short-term memory in python. LSTMs are explicitly designed to avoid the long-term dependency problem. Remembering information for long periods is practically their default behavior, not something they struggle to learn.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextClassification_LSTM.ipynb",
                        "keywords": "lstm,long short term memory,multi text classification,lstm architecture,bi-lstm",
                        "display_url": "https://siberian.dev/nlp/text-classification-using-lstm"
                    },
                    {
                        "name": "TextClassification_MultinomialNB_CountVectorizer.ipynb",
                        "title": "Text Classification Using MultInomialNB And Countvectorizer",
                        "description": "Text Classification using MultinomialNB based on the Naive Bayes algorithm for multinomially distributed data along with the Text Feature technique CountVectorizer from Scikit-learn in python. CountVectorizer creates a matrix in which each unique word is represented by a column of the matrix, and each text sample from the document is a row in the matrix.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextClassification_MultinomialNB_CountVectorizer.ipynb",
                        "keywords": "multinomialnb,countvectorizer,multinomial naive bayes,navie bayes,navie bayes classification",
                        "display_url": "https://siberian.dev/nlp/text-classification-using-multinomialnb-and-count-vectorizer"
                    },
                    {
                        "name": "TextClassification_MultinomialNB_TfidfVectorizer.ipynb",
                        "title": "Text Classification Using MultInomialNB And Tfidf Vectorizer",
                        "description": "Text Classification using the MultinomialNB algorithm along with the Text Feature technique TfidfVectorizer from Scikit-learn in python.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextClassification_MultinomialNB_TfidfVectorizer.ipynb",
                        "keywords": "multinomialnb,tfidf,multinomial naive bayes,navie bayes,navie bayes classification",
                        "display_url": "https://siberian.dev/nlp/text-classification-using-multinomialnb-and-tfidf-vectorizer"
                    },
                    {
                        "name": "TextClassification_RandomForestClassifier_CountVectorizer.ipynb",
                        "title": "Text Classification Using Random Forest Classifier And Countvectorizer",
                        "description": "Text Classification using RandomForestClassifier and CountVectorizer from Scikit-learn in python. Scikit-learn\u00e2\u20ac\u2122s CountVectorizer is used to convert a collection of text documents to a vector of term/token counts.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextClassification_RandomForestClassifier_CountVectorizer.ipynb",
                        "keywords": "random forest classifier,countvectorizer,random forest classifier sklearn,random forest algorithm",
                        "display_url": "https://siberian.dev/nlp/text-classification-using-random-forest-classifier-and-count-vectorizer"
                    },
                    {
                        "name": "TextClassification_RandomForestClassifier_TfidfVectorizer.ipynb",
                        "title": "Text Classification Using Random Forest Classifier And Tfidf Vectorizer",
                        "description": "Text Classification using Random Forest Classifier along with the Text Feature technique TfidfVectorizer from Scikit-learn in python.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextClassification_RandomForestClassifier_TfidfVectorizer.ipynb",
                        "keywords": "random forest classifier,tfidf,random forest classifier sklearn,random forest algorithm",
                        "display_url": "https://siberian.dev/nlp/text-classification-using-random-forest-classifier-and-tfidf-vectorizer"
                    },
                    {
                        "name": "TextClassification_SVC_CountVectorizer.ipynb",
                        "title": "Text Classification Using SVC And Count Vectorizer",
                        "description": "Text Classification using SVC based on the Support Vector Machine Algorithm along with the Text Feature technique CountVectorizer from Scikit-learn in python. Countvectorizer makes it easy for text data to be used directly in machine learning and deep learning models such as text classification.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextClassification_SVC_CountVectorizer.ipynb",
                        "keywords": "svc,countvectorizer,support vector classifer,svc algorithm,support vector machine algorithm",
                        "display_url": "https://siberian.dev/nlp/text-classification-using-svc-and-count-vectorizer"
                    },
                    {
                        "name": "TextClassification_SVC_TfidfVectorizer.ipynb",
                        "title": "Text Classification Using SVM And TfidfVectorizer",
                        "description": "Text Classification using SVC based on the Support Vector Machine Algorithm along with the Text Feature technique TfidfVectorizer from Scikit-learn in python. TF-IDF  method is a widely used technique in Information Retrieval and Text Mining.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextClassification_SVC_TfidfVectorizer.ipynb",
                        "keywords": "svc,countvectorizer,support vector classifer,svc algorithm,support vector machine algorithm,tfidfvectorizer,svm algorithm",
                        "display_url": "https://siberian.dev/nlp/text-classification-using-svc-and-tfidf-vectorizer"
                    },
                    {
                        "name": "TextClassification_XGBoost_CountVectorizer.ipynb",
                        "title": "Text Classification Using XGBoost And CountVectorizer",
                        "description": "Text Classification using XGBoost along with the Text Feature technique CountVectorizer from Scikit-learn in python. CountVectorizer is used to transform a given text into a vector based on the frequency (count) of each word that occurs in the entire text.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextClassification_XGBoost_CountVectorizer.ipynb",
                        "keywords": "xgboost,countvectorizer,xgboost algorithm,xgboost classifer,xgboost sklearn,countvectorizer sklearn",
                        "display_url": "https://siberian.dev/nlp/text-classification-using-xgboost-and-count-vectorizer"
                    },
                    {
                        "name": "TextClassification_XGBoost_TfidfVectorizer.ipynb",
                        "title": "Text Classification Using XGBoost And Tfidf Vectorizer",
                        "description": "Text Classification using XGBoost along with the Text Feature technique TfidfVectorizer from Scikit-learn in python. TF-IDF stands for Term Frequency \u00e2\u20ac\u201d Inverse Document Frequency. It is a technique to quantify words in a set of documents.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextClassification_XGBoost_TfidfVectorizer.ipynb",
                        "keywords": "xgboost,tfidf,xgboost algorithm,xgboost classifer,xgboost sklearn,countvectorizer sklearn,tfidf vectorizer",
                        "display_url": "https://siberian.dev/nlp/text-classification-using-xgboost-and-tfidf-vectorizer"
                    },
                    {
                        "name": "TextEmotionDetection _text2emotion.ipynb",
                        "title": "Text Emotion Detection Using text2emotion",
                        "description": "Text Emotion Detection using the text2emotion technique.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextEmotionDetection _text2emotion.ipynb",
                        "keywords": "text emotion detection,text2emotion,huggingface",
                        "display_url": "https://siberian.dev/nlp/text-emotion-detection-using-text2emotion"
                    },
                    {
                        "name": "TextGenerationGPT2.ipynb",
                        "title": "Text Generation Using GPT2",
                        "description": "The Text Generation task which is a problem associated with NLG(Natural Language Generation). In this Project, GPT-2 is utilized for Text Generation. GPT-2 is a transformers model pre-trained on a very large corpus of English data in a self-supervised fashion. GPT-2 is an acronym for Generative Pretrained Transformer 2.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextGenerationGPT2.ipynb",
                        "keywords": "gpt-2,text generation,generative pretrained transformer,hugging face,nlg,natural language generation",
                        "display_url": "https://siberian.dev/nlp/text-generation-using-gpt2"
                    },
                    {
                        "name": "TextGenerationGPTNEO125M.ipynb",
                        "title": "Text Generation Using GPT Neo 125M",
                        "description": "The Text Generation task which is a problem associated with NLG(Natural Language Generation). In this Project, GPT Neo 125M is utilized for Text Generation. GPT-Neo 125M is a transformer model designed using EleutherAI's replication of the GPT-3 architecture.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextGenerationGPTNEO125M.ipynb",
                        "keywords": "gpt-2,text generation,generative pretrained transformer,hugging face,nlg,natural language generation,gpt neo,gpt-neo 125m",
                        "display_url": "https://siberian.dev/nlp/text-generation-using-gpt-neo-125m"
                    },
                    {
                        "name": "TextGenerationGPTNEO1_3B.ipynb",
                        "title": "Text Generation Using GPT Neo 2.7B",
                        "description": "The Text Generation task which is a problem associated with NLG(Natural Language Generation). In this Project, GPT Neo 2.7B is utilized for Text Generation. The model is based on OpenAI's GPT-3 model.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextGenerationGPTNEO1_3B.ipynb",
                        "keywords": "gpt-2,text generation,generative pretrained transformer,hugging face,nlg,natural language generation,gpt neo,gpt-neo 2.7b",
                        "display_url": "https://siberian.dev/nlp/text-generation-using-gpt-neo-2.7b"
                    },
                    {
                        "name": "TextSummarizationDistilBART.ipynb",
                        "title": "Text Summarization Using DistilBART",
                        "description": "The Text Summarization task, one of the problems associated with NLP(Natural Language Processing). In this Code template, DistilBART pre-trained model is utilized, which is a transformer-based model.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextSummarizationDistilBART.ipynb",
                        "keywords": "nlp,distilbart,bert,distilbart,natural language processing",
                        "display_url": "https://siberian.dev/nlp/text-summarization-using-distilbart"
                    },
                    {
                        "name": "TextSummarizationPegasus.ipynb",
                        "title": "Text Summarization Using Pegasus",
                        "description": "Text summarization using the Transformer based model Pegasus from the HugginFace library. PEGASUS uses an encoder-decoder model for sequence-to-sequence learning.",
                        "URL": "https://cdn.siberian.dev/code/NLP/Natural_Language_Processing/TextSummarizationPegasus.ipynb",
                        "keywords": "pegasus,huggingface,pegasus model,bert,bert model",
                        "display_url": "https://siberian.dev/nlp/text-summarization-using-pegasus"
                    }
                ]
            }
        ]
    },
    {
        "name": "Regression",
        "image": "https://cdn.siberian.dev/code-gen/regression_blue.png",
        "description": "Establish a correlation of data to a real or continious target variable.",
        "models": [
            {
                "name": "Adaptive_Boosting",
                "models": [
                    {
                        "name": "AdaBoostRegressor.ipynb",
                        "title": "AdaBoost Regression",
                        "description": "Regression analysis using a simple AdaBoostRegressor based on the Boosting Ensemble Learning technique.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Adaptive_Boosting/AdaBoostRegressor.ipynb",
                        "keywords": "adaboost regression,adaboost regressor,adaboost,adaboost regression algorithm,boosting regression",
                        "display_url": "https://siberian.dev/regression/adaboost-regression"
                    },
                    {
                        "name": "AdaBoostRegressor_MinMaxScaler.ipynb",
                        "title": "AdaBoost Regression With MinMaxScaler",
                        "description": "Regression analysis using a simple AdaBoostRegressor based on the Boosting Ensemble Learning technique and feature rescaling technique called MinMaxScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Adaptive_Boosting/AdaBoostRegressor_MinMaxScaler.ipynb",
                        "keywords": "adaboost regression,adaboost regressor,adaboost,adaboost regression algorithm,boosting regression,minmaxscaler",
                        "display_url": "https://siberian.dev/regression/adaboost-regression-minmaxscaler"
                    },
                    {
                        "name": "AdaBoostRegressor_Normalize.ipynb",
                        "title": "AdaBoost Regression With Normalization",
                        "description": "Regression analysis using a simple AdaBoostRegressor based on the Boosting Ensemble Learning technique and feature rescaling technique called Normalize",
                        "URL": "https://cdn.siberian.dev/code/Regression/Adaptive_Boosting/AdaBoostRegressor_Normalize.ipynb",
                        "keywords": "adaboost regression,adaboost regressor,adaboost,adaboost regression algorithm,boosting regression,normalization",
                        "display_url": "https://siberian.dev/regression/adaboost-regression-normalization"
                    },
                    {
                        "name": "AdaBoostRegressor_RobustScaler.ipynb",
                        "title": "AdaBoost Regression With RobustScaler",
                        "description": "Regression analysis using a simple AdaBoostRegressor based on the Boosting Ensemble Learning technique and feature rescaling technique called RobustScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Adaptive_Boosting/AdaBoostRegressor_RobustScaler.ipynb",
                        "keywords": "adaboost regression,adaboost regressor,adaboost,adaboost regression algorithm,boosting regression,robustscaler",
                        "display_url": "https://siberian.dev/regression/adaboost-regression-robustscaler"
                    },
                    {
                        "name": "AdaBoostRegressor_Scale.ipynb",
                        "title": "AdaBoost Regression With Scale",
                        "description": "Regression analysis using a simple AdaBoostRegressor based on the Boosting Ensemble Learning technique and feature rescaling technique called Scale",
                        "URL": "https://cdn.siberian.dev/code/Regression/Adaptive_Boosting/AdaBoostRegressor_Scale.ipynb",
                        "keywords": "adaboost regression,adaboost regressor,adaboost,adaboost regression algorithm,boosting regression,scaling technique",
                        "display_url": "https://siberian.dev/regression/adaboost-regression-scale"
                    },
                    {
                        "name": "AdaBoostRegressor_StandardScaler.ipynb",
                        "title": "AdaBoost Regression With StandardScaler",
                        "description": "Regression analysis using a simple AdaBoostRegressor based on the Boosting Ensemble Learning technique and feature rescaling technique called StandardScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Adaptive_Boosting/AdaBoostRegressor_StandardScaler.ipynb",
                        "keywords": "adaboost regression,adaboost regressor,adaboost,adaboost regression algorithm,boosting regression,standardscaler",
                        "display_url": "https://siberian.dev/regression/adaboost-regression-standardscaler"
                    }
                ]
            },
            {
                "name": "CatBoost",
                "models": [
                    {
                        "name": "CatBoostRegressor.ipynb",
                        "title": "CatBoost Regressor",
                        "description": "Regression analysis using CatBoostRegressor. CatBoost is an algorithm for gradient boosting on decision trees.",
                        "URL": "https://cdn.siberian.dev/code/Regression/CatBoost/CatBoostRegressor.ipynb",
                        "keywords": "catboost regressor,gradient boosting,decision tree algorithm,gradient boositng algorithm,catboost algorithm",
                        "display_url": "https://siberian.dev/regression/catboost-regressor"
                    },
                    {
                        "name": "CatBoostRegressor_Pool.ipynb",
                        "title": "CatBoost Regressor Using Pool",
                        "description": "Regression analysis using CatBoostRegressor and data loading using Pool. CatBoost is an algorithm for gradient boosting on decision trees.",
                        "URL": "https://cdn.siberian.dev/code/Regression/CatBoost/CatBoostRegressor_Pool.ipynb",
                        "keywords": "catboost regressor,gradient boosting,decision tree algorithm,gradient boositng algorithm,catboost algorithm",
                        "display_url": "https://siberian.dev/regression/catboost-regressor-using-pool"
                    },
                    {
                        "name": "CatBoostRegressor_RobustScaler.ipynb",
                        "title": "CatBoost Regressor With RobustScaler",
                        "description": "Regression analysis using CatBoostRegressor and Robust Scaler Feature Scaling technique. CatBoost is an algorithm for gradient boosting on decision trees.",
                        "URL": "https://cdn.siberian.dev/code/Regression/CatBoost/CatBoostRegressor_RobustScaler.ipynb",
                        "keywords": "catboost regressor,gradient boosting,decision tree algorithm,gradient boositng algorithm,catboost algorithm,robustscaler",
                        "display_url": "https://siberian.dev/regression/catboost-regressor-robustscaler"
                    },
                    {
                        "name": "CatBoostRegressor_Scale.ipynb",
                        "title": "CatBoost Regressor With Scale",
                        "description": "Regression analysis using CatBoostRegressor with data rescaling technique scale. CatBoost is an algorithm for gradient boosting on decision trees.",
                        "URL": "https://cdn.siberian.dev/code/Regression/CatBoost/CatBoostRegressor_Scale.ipynb",
                        "keywords": "catboost regressor,gradient boosting,decision tree algorithm,gradient boositng algorithm,catboost algorithm,scaling technique",
                        "display_url": "https://siberian.dev/regression/catboost-regressor-scale"
                    }
                ]
            },
            {
                "name": "Decision_Tree",
                "models": [
                    {
                        "name": "DecisionTreeRegressor.ipynb",
                        "title": "Decision Tree Regression",
                        "description": "Regression analysis using simple DecisionTreeRegressor based on The Classification and Regression Trees algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Decision_Tree/DecisionTreeRegressor.ipynb",
                        "keywords": "decision tree regression,decision tree regression algorithm,decision tree algorithm,decision tree regression sklearn,regression tree algorithm",
                        "display_url": "https://siberian.dev/regression/decision-tree-regression"
                    },
                    {
                        "name": "DecisionTreeRegressor_MinMaxScaler.ipynb",
                        "title": "Decision Tree Regression With MinMaxScaler",
                        "description": "Regression analysis using simple DecisionTreeRegressor based on The Classification and Regression Trees algorithm along with MinMaxScaler Feature Scaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Decision_Tree/DecisionTreeRegressor_MinMaxScaler.ipynb",
                        "keywords": "decision tree regression,decision tree regression algorithm,decision tree algorithm,decision tree regression sklearn,regression tree algorithm,minmaxscaler",
                        "display_url": "https://siberian.dev/regression/decision-tree-regression-minmaxscaler"
                    },
                    {
                        "name": "DecisionTreeRegressor_Normalize.ipynb",
                        "title": "Decision Tree Regression With Normalization",
                        "description": "Regression analysis using simple DecisionTreeRegressor based on The Classification and Regression Trees algorithm along with Normalize Feature Scaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Decision_Tree/DecisionTreeRegressor_Normalize.ipynb",
                        "keywords": "decision tree regression,decision tree regression algorithm,decision tree algorithm,decision tree regression sklearn,regression tree algorithm,normalization",
                        "display_url": "https://siberian.dev/regression/decision-tree-regression-normalization"
                    },
                    {
                        "name": "DecisionTreeRegressor_RobustScaler.ipynb",
                        "title": "Decision Tree Regression With RobustScaler",
                        "description": "Regression analysis using simple DecisionTreeRegressor based on The Classification and Regression Trees algorithm along with RobustScaler Feature Scaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Decision_Tree/DecisionTreeRegressor_RobustScaler.ipynb",
                        "keywords": "decision tree regression,decision tree regression algorithm,decision tree algorithm,decision tree regression sklearn,regression tree algorithm,robustscaler",
                        "display_url": "https://siberian.dev/regression/decision-tree-regression-robustscaler"
                    },
                    {
                        "name": "DecisionTreeRegressor_Scale.ipynb",
                        "title": "Decision Tree Regression With Scale",
                        "description": "The regression analysis using DecisionTree Regressor and feature scaling technique scale without a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Decision_Tree/DecisionTreeRegressor_Scale.ipynb",
                        "keywords": "decision tree regression,decision tree regression algorithm,decision tree algorithm,decision tree regression sklearn,regression tree algorithm,scaling technique",
                        "display_url": "https://siberian.dev/regression/decision-tree-regression-scale"
                    },
                    {
                        "name": "DecisionTreeRegressor_StandardScaler.ipynb",
                        "title": "Decision Tree Regression With StandardScaler",
                        "description": "Regression analysis using simple DecisionTreeRegressor with data rescaling via StandardScaler.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Decision_Tree/DecisionTreeRegressor_StandardScaler.ipynb",
                        "keywords": "decision tree regression,decision tree regression algorithm,decision tree algorithm,decision tree regression sklearn,regression tree algorithm,standardscaler",
                        "display_url": "https://siberian.dev/regression/decision-tree-regression-standardscaler"
                    }
                ]
            },
            {
                "name": "Extra_Trees",
                "models": [
                    {
                        "name": "ExtraTreesRegressor.ipynb",
                        "title": "Extra Trees Regression",
                        "description": "Regression analysis using a simple ExtraTreesRegressor based on the Extremely randomized trees algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Extra_Trees/ExtraTreesRegressor.ipynb",
                        "keywords": "extra trees regression,extra tree algorithm,regression algorithm,extra trees classifier",
                        "display_url": "https://siberian.dev/regression/extra-trees-regression"
                    },
                    {
                        "name": "ExtraTreesRegressor_MinMaxScaler.ipynb",
                        "title": "Extra Trees Regression With MinMaxScaler",
                        "description": "Regression analysis using a simple ExtraTreesRegressor based on the Extremely randomized trees algorithm using feature scaling via MinMaxScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Extra_Trees/ExtraTreesRegressor_MinMaxScaler.ipynb",
                        "keywords": "regression,simple,extratreesregressor,extremelyrandomizedtrees,scaling,minmaxscaler",
                        "display_url": "https://siberian.dev/regression/extra-trees-regression-minmaxscaler"
                    },
                    {
                        "name": "ExtraTreesRegressor_Normalize.ipynb",
                        "title": "Extra Trees Regression With Normalization",
                        "description": "Regression analysis using a simple ExtraTreesRegressor based on the Extremely randomized trees algorithm using feature scaling via Normalize",
                        "URL": "https://cdn.siberian.dev/code/Regression/Extra_Trees/ExtraTreesRegressor_Normalize.ipynb",
                        "keywords": "regression,simple,extratreesregressor,extremelyrandomizedtrees,scaling,normalize",
                        "display_url": "https://siberian.dev/regression/extra-trees-regression-normalization"
                    },
                    {
                        "name": "ExtraTreesRegressor_RobustScaler.ipynb",
                        "title": "Extra Trees Regression With RobustScaler",
                        "description": "Regression analysis using a simple ExtraTreesRegressor based on the Extremely randomized trees algorithm using feature scaling via RobustScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Extra_Trees/ExtraTreesRegressor_RobustScaler.ipynb",
                        "keywords": "regression,simple,extratreesregressor,extremelyrandomizedtrees,scaling,robustscaler",
                        "display_url": "https://siberian.dev/regression/extra-trees-regression-robustscaler"
                    },
                    {
                        "name": "ExtraTreesRegressor_Scale.ipynb",
                        "title": "Extra Trees Regression With Scale",
                        "description": "Regression analysis using a simple ExtraTreesRegressor based on the Extremely randomized trees algorithm using feature scaling via Scale",
                        "URL": "https://cdn.siberian.dev/code/Regression/Extra_Trees/ExtraTreesRegressor_Scale.ipynb",
                        "keywords": "regression,simple,extratreesregressor,extremelyrandomizedtrees,scaling,scale",
                        "display_url": "https://siberian.dev/regression/extra-trees-regression-scale"
                    },
                    {
                        "name": "ExtraTreesRegressor_StandardScaler.ipynb",
                        "title": "Extra Trees Regression With StandardScaler",
                        "description": "Regression analysis using a simple ExtraTreesRegressor based on the Extremely randomized trees algorithm using feature scaling via StandardScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Extra_Trees/ExtraTreesRegressor_StandardScaler.ipynb",
                        "keywords": "regression,simple,extratreesregressor,extremelyrandomizedtrees,scaling,standardscaler",
                        "display_url": "https://siberian.dev/regression/extra-trees-regression-standardscaler"
                    }
                ]
            },
            {
                "name": "Gradient_Boosting_Machine",
                "models": [
                    {
                        "name": "GradientBoostingRegressor.ipynb",
                        "title": "Gradient Boosting Regressor",
                        "description": "Regression analysis using a simple GradientBoostingRegressor based on the Gradient Boosting Ensemble Learning Technique.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Gradient_Boosting_Machine/GradientBoostingRegressor.ipynb",
                        "keywords": "regression,simple,gradientboostingregressor,gradientboosting,ensemble,learningtechnique",
                        "display_url": "https://siberian.dev/regression/gradient-boosting-regressor"
                    },
                    {
                        "name": "GradientBoostingRegressor_MinMaxScaler.ipynb",
                        "title": "Gradient Boosting Regressor With MinMaxScaler",
                        "description": "Regression analysis using a simple GradientBoostingRegressor based on the Gradient Boosting Ensemble Learning Technique using MinMaxScalerfor Feature Rescaling.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Gradient_Boosting_Machine/GradientBoostingRegressor_MinMaxScaler.ipynb",
                        "keywords": "regression,simple,gradientboostingregressor,gradientboosting,ensemble,learningtechnique,minmaxscalerfor,rescaling",
                        "display_url": "https://siberian.dev/regression/gradient-boosting-regressor-minmaxscaler"
                    },
                    {
                        "name": "GradientBoostingRegressor_Normalize.ipynb",
                        "title": "Gradient Boosting Regressor With Normalization",
                        "description": "Regression analysis using a simple GradientBoostingRegressor based on the Gradient Boosting Ensemble Learning Technique using Normalize for Feature Rescaling.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Gradient_Boosting_Machine/GradientBoostingRegressor_Normalize.ipynb",
                        "keywords": "regression,simple,gradientboostingregressor,gradientboosting,ensemble,learningtechnique,normalize,rescaling",
                        "display_url": "https://siberian.dev/regression/gradient-boosting-regressor-normalization"
                    },
                    {
                        "name": "GradientBoostingRegressor_RobustScaler.ipynb",
                        "title": "Gradient Boosting Regressor With RobustScaler",
                        "description": "Regression analysis using a simple GradientBoostingRegressor based on the Gradient Boosting Ensemble Learning Technique using RobustScaler for Feature Rescaling.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Gradient_Boosting_Machine/GradientBoostingRegressor_RobustScaler.ipynb",
                        "keywords": "regression,simple,gradientboostingregressor,gradientboosting,ensemble,learningtechnique,robustscaler,rescaling",
                        "display_url": "https://siberian.dev/regression/gradient-boosting-regressor-robustscaler"
                    },
                    {
                        "name": "GradientBoostingRegressor_Scale.ipynb",
                        "title": "Gradient Boosting Regressor With Scale",
                        "description": "Regression analysis using a simple GradientBoostingRegressor based on the Gradient Boosting Ensemble Learning Technique using Scale for Feature Rescaling.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Gradient_Boosting_Machine/GradientBoostingRegressor_Scale.ipynb",
                        "keywords": "regression,simple,gradientboostingregressor,gradientboosting,ensemble,learningtechnique,scale,rescaling",
                        "display_url": "https://siberian.dev/regression/gradient-boosting-regressor-scale"
                    },
                    {
                        "name": "GradientBoostingRegressor_StandardScaler.ipynb",
                        "title": "Gradient Boosting Regressor With StandardScaler",
                        "description": "Regression analysis using a simple GradientBoostingRegressor based on the Gradient Boosting Ensemble Learning Technique using StandardScaler for Feature Rescaling.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Gradient_Boosting_Machine/GradientBoostingRegressor_StandardScaler.ipynb",
                        "keywords": "regression,simple,gradientboostingregressor,gradientboosting,ensemble,learningtechnique,standardscaler,rescaling",
                        "display_url": "https://siberian.dev/regression/gradient-boosting-regressor-standardscaler"
                    }
                ]
            },
            {
                "name": "Histogram_Based_Gradient_Boosting_Trees",
                "models": [
                    {
                        "name": "HistGradientBoostingRegressor.ipynb",
                        "title": "Histogram Based Gradient Boosting Regression",
                        "description": "The regression analysis using a simple Histogram based Gradient Boosting Trees Regressor. This estimator is much faster than GradientBoostingRegressor for big datasets.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingRegressor.ipynb",
                        "keywords": "regression,simple,histogram,gradientboosting,trees,regressor,estimator,faster,gradientboostingregressor,datasets",
                        "display_url": "https://siberian.dev/regression/histogram-based-gradient-boosting-regression"
                    },
                    {
                        "name": "HistGradientBoostingRegressor_MinMaxScaler.ipynb",
                        "title": "Histogram Based Gradient Boosting Regression With MinMaxScaler",
                        "description": "The regression analysis using a simple Histogram based Gradient Boosting Trees Regressor and the feature rescaling technique MinMaxScaler .",
                        "URL": "https://cdn.siberian.dev/code/Regression/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingRegressor_MinMaxScaler.ipynb",
                        "keywords": "regression,simple,histogram,gradientboosting,trees,regressor,rescalingtechnique,minmaxscaler,",
                        "display_url": "https://siberian.dev/regression/histogram-based-gradient-boosting-regression-minmaxscaler"
                    },
                    {
                        "name": "HistGradientBoostingRegressor_Normalize.ipynb",
                        "title": "Histogram Based Gradient Boosting Regression With Normalization",
                        "description": "The regression analysis using a simple Histogram based Gradient Boosting Trees Regressor and the feature rescaling technique Normalization.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingRegressor_Normalize.ipynb",
                        "keywords": "regression,simple,histogram,gradientboosting,trees,regressor,rescalingtechnique,normalizer,",
                        "display_url": "https://siberian.dev/regression/histogram-based-gradient-boosting-regression-normalization"
                    },
                    {
                        "name": "HistGradientBoostingRegressor_RobustScaler.ipynb",
                        "title": "Histogram Based Gradient Boosting Regression With RobustScaler",
                        "description": "The regression analysis using a simple Histogram based Gradient Boosting Trees Regressor and the feature rescaling technique RobustScaler .",
                        "URL": "https://cdn.siberian.dev/code/Regression/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingRegressor_RobustScaler.ipynb",
                        "keywords": "regression,simple,histogram,gradientboosting,trees,regressor,rescalingtechnique,robustscaler,",
                        "display_url": "https://siberian.dev/regression/histogram-based-gradient-boosting-regression-robustscaler"
                    },
                    {
                        "name": "HistGradientBoostingRegressor_Scale.ipynb",
                        "title": "Histogram Based Gradient Boosting Regression With Scale",
                        "description": "The regression analysis using a simple Histogram based Gradient Boosting Trees Regressor and the feature rescaling technique Scale.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingRegressor_Scale.ipynb",
                        "keywords": "regression,simple,histogram,gradientboosting,trees,regressor,rescalingtechnique,scale",
                        "display_url": "https://siberian.dev/regression/histogram-based-gradient-boosting-regression-scale"
                    },
                    {
                        "name": "HistGradientBoostingRegressor_StandardScaler.ipynb",
                        "title": "Histogram Based Gradient Boosting Regression With StandardScaler",
                        "description": "The regression analysis using a simple Histogram based Gradient Boosting Trees Regressor and the feature rescaling technique StandardScaler .",
                        "URL": "https://cdn.siberian.dev/code/Regression/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingRegressor_StandardScaler.ipynb",
                        "keywords": "regression,simple,histogram,gradientboosting,trees,regressor,rescalingtechnique,standardscaler,",
                        "display_url": "https://siberian.dev/regression/histogram-based-gradient-boosting-regression-standardscaler"
                    }
                ]
            },
            {
                "name": "k-Nearest_Neighbor",
                "models": [
                    {
                        "name": "KNeighborsRegressor.ipynb",
                        "title": "K-Nearest Neighbor Regression",
                        "description": "The regression analysis using a simple KNeighborsRegressor based on the K-Nearest Neighbors algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor.ipynb",
                        "keywords": "regression,simple,kneighborsregressor,knearestneighbors,",
                        "display_url": "https://siberian.dev/regression/knn-regression"
                    },
                    {
                        "name": "KNeighborsRegressor_MinMaxScaler.ipynb",
                        "title": "K-Nearest Neighbor Regression With MinMaxScaler",
                        "description": "The regression analysis using a simple KNeighborsRegressor based on the K-Nearest Neighbors algorithm and feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_MinMaxScaler.ipynb",
                        "keywords": "regression,simple,kneighborsregressor,knearestneighbors,rescalingtechnique,minmaxscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/knn-regression-minmaxscaler"
                    },
                    {
                        "name": "KNeighborsRegressor_Normalize.ipynb",
                        "title": "K-Nearest Neighbor Regression With Normalization",
                        "description": "The regression analysis using a simple KNeighborsRegressor based on the K-Nearest Neighbors algorithm using feature scaling via Normalizer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_Normalize.ipynb",
                        "keywords": "regression,simple,kneighborsregressor,knearestneighbors,scaling,normalizer",
                        "display_url": "https://siberian.dev/regression/knn-regression-normalization"
                    },
                    {
                        "name": "KNeighborsRegressor_Normalize_PolynomialFeatures.ipynb",
                        "title": "K-Nearest Neighbor Regression With Normalization And Polynomial Features",
                        "description": "The regression analysis using a simple KNeighborsRegressor where separate rescaling is done using Normalize and feature transformation is done using PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "regression,simple,kneighborsregressor,rescaling,normalize,datatranformation,polynomials,pipeline",
                        "display_url": "https://siberian.dev/regression/knn-regression-normalization-and-polynomial-features"
                    },
                    {
                        "name": "KNeighborsRegressor_Normalize_PowerTransformer.ipynb",
                        "title": "K-Nearest Neighbor Regression With Normalization And Power Transformer",
                        "description": "The regression analysis using a simple KNeighborsRegressor where separate rescaling is done using Normalize and feature transformation is done using PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_Normalize_PowerTransformer.ipynb",
                        "keywords": "regression,simple,kneighborsregressor,rescaling,normalize,datatranformation,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/knn-regression-normalization-and-power-transformer"
                    },
                    {
                        "name": "KNeighborsRegressor_Normalize_QuantileTransformer.ipynb",
                        "title": "K-Nearest Neighbor Regression With Normalization And Quantile Transformer",
                        "description": "The regression analysis using a simple KNeighborsRegressor where separate rescaling is done using Normalize and feature transformation is done using QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_Normalize_QuantileTransformer.ipynb",
                        "keywords": "regression,simple,kneighborsregressor,rescaling,normalize,datatranformation,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/knn-regression-normalization-and-quantile-transformer"
                    },
                    {
                        "name": "KNeighborsRegressor_PolynomialFeatures.ipynb",
                        "title": "K-Nearest Neighbor Regression With Polynomial Features",
                        "description": "The regression analysis using a simple KNeighborsRegressor where feature transformation is done using Polynomial features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_PolynomialFeatures.ipynb",
                        "keywords": "regression,simple,kneighborsregressor,datatranformation,polynomial,s,pipeline",
                        "display_url": "https://siberian.dev/regression/knn-regression-polynomial-features"
                    },
                    {
                        "name": "KNeighborsRegressor_PowerTransformer.ipynb",
                        "title": "K-Nearest Neighbor Regression With Power Transformer",
                        "description": "The regression analysis using a simple KNeighborsRegressor where feature transformation is done using PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_PowerTransformer.ipynb",
                        "keywords": "regression,simple,kneighborsregressor,datatranformation,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/knn-regression-power-transformer"
                    },
                    {
                        "name": "KNeighborsRegressor_QuantileTransformer.ipynb",
                        "title": "K-Nearest Neighbor Regression With Quantile Transformer",
                        "description": "The regression analysis using a simple KNeighborsRegressor where feature transformation is done using Quantile Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_QuantileTransformer.ipynb",
                        "keywords": "regression,simple,kneighborsregressor,datatranformation,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/knn-regression-quantile-transformer"
                    },
                    {
                        "name": "KNeighborsRegressor_RobustScaler.ipynb",
                        "title": "K-Nearest Neighbor Regression With RobustScaler",
                        "description": "The regression analysis using a simple KNeighborsRegressor based on the K-Nearest Neighbors algorithm and feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_RobustScaler.ipynb",
                        "keywords": "regression,simple,kneighborsregressor,knearestneighbors,rescalingtechnique,robustscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/knn-regression-robustscaler"
                    },
                    {
                        "name": "KNeighborsRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "title": "K-Nearest Neighbor Regression With RobustScaler And Quantile Transformer",
                        "description": "The regression analysis using a simple KNeighborsRegressor where rescaling method used is RobustScaler and feature transformation is done using Quantile Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,simple,kneighborsregressor,rescaling,method,robustscaler,datatranformation,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/knn-regression-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "KNeighborsRegressor_Scale.ipynb",
                        "title": "K-Nearest Neighbor Regression With Scale",
                        "description": "The regression analysis using a simple KNeighborsRegressor based on the K-Nearest Neighbors algorithm using feature scaling via Scale.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_Scale.ipynb",
                        "keywords": "regression,simple,kneighborsregressor,knearestneighbors,scaling,scale",
                        "display_url": "https://siberian.dev/regression/knn-regression-scale"
                    },
                    {
                        "name": "KNeighborsRegressor_Scale_PolynomialFeatures.ipynb",
                        "title": "K-Nearest Neighbor Regression With Scale And Polynomial Features",
                        "description": "The regression analysis using a simple KNeighborsRegressor with PolynomialFeatures as Feature Transformation Technique, rescaling technique Scaling in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_Scale_PolynomialFeatures.ipynb",
                        "keywords": "regression,simple,kneighborsregressor,polynomials,datatranformationtechnique,rescalingtechnique,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/knn-regression-scale-and-polynomial-features"
                    },
                    {
                        "name": "KNeighborsRegressor_Scale_PowerTransformer.ipynb",
                        "title": "K-Nearest Neighbor Regression With Scale And Power Transformer",
                        "description": "The regression analysis using a simple KNeighborsRegressor with Power Transformer as Feature Transformation Technique, rescaling technique Scaling in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_Scale_PowerTransformer.ipynb",
                        "keywords": "regression,simple,kneighborsregressor,power,transformer,datatranformationtechnique,rescalingtechnique,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/knn-regression-scale-and-power-transformer"
                    },
                    {
                        "name": "KNeighborsRegressor_StandardScaler.ipynb",
                        "title": "K-Nearest Neighbor Regression With StandardScaler",
                        "description": "The regression analysis using a simple KNeighborsRegressor based on the K-Nearest Neighbors algorithm and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_StandardScaler.ipynb",
                        "keywords": "regression,simple,kneighborsregressor,knearestneighbors,rescalingtechnique,standardscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/knn-regression-standardscaler"
                    },
                    {
                        "name": "KNeighborsRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "K-Nearest Neighbor Regression With StandardScaler And Polynomial Features",
                        "description": "The regression analysis using a simple KNeighborsRegressor where rescaling method used is StandardScaler and feature transformation is done using Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,simple,kneighborsregressor,rescaling,method,standardscaler,datatranformation,polynomial,s,pipeline",
                        "display_url": "https://siberian.dev/regression/knn-regression-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "KNeighborsRegressor_StandardScaler_PowerTransformer.ipynb",
                        "title": "K-Nearest Neighbor Regression With StandardScaler And Power Transformer",
                        "description": "The regression analysis using a simple KNeighborsRegressor where rescaling method used is StandardScaler and feature transformation is done using Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "regression,simple,kneighborsregressor,rescaling,method,standardscaler,datatranformation,power,transformer,pipeline",
                        "display_url": "https://siberian.dev/regression/knn-regression-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "KNeighborsRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "title": "K-Nearest Neighbor Regression With StandardScaler And Quantile Transformer",
                        "description": "The regression analysis using a simple KNeighborsRegressor where rescaling method used is StandardScaler and feature transformation is done using Quantile Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,simple,kneighborsregressor,rescaling,method,standardscaler,datatranformation,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/knn-regression-standardscaler-and-quantile-transformer"
                    }
                ]
            },
            {
                "name": "LightGBM",
                "models": [
                    {
                        "name": "LGBMRegressor.ipynb",
                        "title": "LGBM Regressor",
                        "description": "The regression analysis using a simple LGBMRegressor without any scaling techniques or pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/LightGBM/LGBMRegressor.ipynb",
                        "keywords": "regression,simple,lgbmregressor,scaling,techniques,pipeline",
                        "display_url": "https://siberian.dev/regression/lgbm-regressor"
                    },
                    {
                        "name": "LGBMRegressor_Dataset.ipynb",
                        "title": "LGBM Regressor Using Dataset",
                        "description": "Regression analysis using LGBM along with Dataset.Dataset is an internal data structure that is used by the LGBM framework. It is optimized for both memory efficiency and training speed.",
                        "URL": "https://cdn.siberian.dev/code/Regression/LightGBM/LGBMRegressor_Dataset.ipynb",
                        "keywords": "regression,lgbm,datasetdataset,internal,data,structure,lgbm,framework,optimized,memory,efficiency,training,speed",
                        "display_url": "https://siberian.dev/regression/lgbm-regressor-using-dataset"
                    },
                    {
                        "name": "LGBMRegressor_MinMaxScaler.ipynb",
                        "title": "LGBM RegressorWith MinMaxScaler",
                        "description": "The regression analysis using a simple LGBMRegressor with scaling technique MinMaxScaler.",
                        "URL": "https://cdn.siberian.dev/code/Regression/LightGBM/LGBMRegressor_MinMaxScaler.ipynb",
                        "keywords": "regression,simple,lgbmregressor,scalingtechnique,minmaxscaler",
                        "display_url": "https://siberian.dev/regression/lgbm-regressor-minmaxscaler"
                    },
                    {
                        "name": "LGBMRegressor_Normalize.ipynb",
                        "title": "LGBM Regressor With Normalization",
                        "description": "Regression analysis using the LGBMRegressor where rescaling method used is Normalizer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/LightGBM/LGBMRegressor_Normalize.ipynb",
                        "keywords": "regression,lgbmregressor,rescaling,method,normalizer",
                        "display_url": "https://siberian.dev/regression/lgbm-regressor-normalization"
                    },
                    {
                        "name": "LGBMRegressor_RobustScaler.ipynb",
                        "title": "LGBM Regressor With RobustScaler",
                        "description": "Regression analysis using the LGBMRegressor where rescaling method used is RobustScaler.",
                        "URL": "https://cdn.siberian.dev/code/Regression/LightGBM/LGBMRegressor_RobustScaler.ipynb",
                        "keywords": "regression,lgbmregressor,rescaling,method,robustscaler",
                        "display_url": "https://siberian.dev/regression/lgbm-regressor-robustscaler"
                    }
                ]
            },
            {
                "name": "Linear_Models",
                "models": [
                    {
                        "name": "ARDRegressor.ipynb",
                        "title": "ARD Regression",
                        "description": "Regression analysis using the ARDRegressor.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor.ipynb",
                        "keywords": "regression,ardregressor",
                        "display_url": "https://siberian.dev/regression/ard-regression"
                    },
                    {
                        "name": "ARDRegressor_MinMaxScaler.ipynb",
                        "title": "ARD Regression With MinMaxScaler",
                        "description": "Regression analysis using the ARDRegressor where rescaling method used is MinMaxScaler.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_MinMaxScaler.ipynb",
                        "keywords": "regression,ardregressor,rescaling,method,minmaxscaler",
                        "display_url": "https://siberian.dev/regression/ard-regression-minmaxscaler"
                    },
                    {
                        "name": "ARDRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "ARD Regression With MinMaxScaler And Polynomial Features",
                        "description": "Regression analysis using ARDRegressor algorithm with MinMaxScaler and feature transformation technique Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,ardregressor,minmaxscaler,datatranformationtechnique,polynomial,s,pipeline",
                        "display_url": "https://siberian.dev/regression/ard-regression-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "ARDRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "ARD Regression With MinMaxScaler And Power Transformer",
                        "description": "Regression analysis using ARDRegressor algorithm with MinMaxScaler and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "regression,ardregressor,minmaxscaler,datatranformationtechnique,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/ard-regression-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "ARDRegressor_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "ARD Regression With MinMaxScaler And Quantile Transformer",
                        "description": "Regression analysis using ARDRegressor algorithm with MinMaxScaler and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,ardregressor,minmaxscaler,datatranformationtechnique,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/ard-regression-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "ARDRegressor_Normalize.ipynb",
                        "title": "ARD Regression With Normalization",
                        "description": "Regression analysis using the ARDRegressor where rescaling method used is Normalize.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_Normalize.ipynb",
                        "keywords": "regression,ardregressor,rescaling,method,normalize",
                        "display_url": "https://siberian.dev/regression/ard-regression-normalization"
                    },
                    {
                        "name": "ARDRegressor_Normalize_PolynomialFeatures.ipynb",
                        "title": "ARD RegressionWith Normalization And Polynomial Features",
                        "description": "Regression analysis using ARDRegressor algorithm with rescaling technique Normalize and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "regression,ardregressor,rescalingtechnique,normalize,datatranformationtechnique,polynomials,pipeline",
                        "display_url": "https://siberian.dev/regression/ard-regression-normalization-and-polynomial-features"
                    },
                    {
                        "name": "ARDRegressor_Normalize_PowerTransformer.ipynb",
                        "title": "ARD Regression With Normalization And Power Transformer",
                        "description": "Regression analysis using ARDRegressor algorithm with rescaling technique Normalize and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_Normalize_PowerTransformer.ipynb",
                        "keywords": "regression,ardregressor,rescalingtechnique,normalize,datatranformationtechnique,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/ard-regression-normalization-and-power-transformer"
                    },
                    {
                        "name": "ARDRegressor_PolynomialFeatures.ipynb",
                        "title": "ARD Regression With Polynomial Features",
                        "description": "Regression analysis using the ARDRegressor with Feature Transformation technique PolynomialFeatures.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_PolynomialFeatures.ipynb",
                        "keywords": "regression,ardregressor,datatranformationtechnique,polynomials",
                        "display_url": "https://siberian.dev/regression/ard-regression-polynomial-features"
                    },
                    {
                        "name": "ARDRegressor_PowerTransformer.ipynb",
                        "title": "ARD Regression With Power Transformer",
                        "description": "Regression analysis using the ARDRegressor with Feature Transformation technique PowerTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_PowerTransformer.ipynb",
                        "keywords": "regression,ardregressor,datatranformationtechnique,powertransformer",
                        "display_url": "https://siberian.dev/regression/ard-regression-power-transformer"
                    },
                    {
                        "name": "ARDRegressor_QuantileTransformer.ipynb",
                        "title": "ARD Regression With Quantile Transformer",
                        "description": "Regression analysis using the ARDRegressor with Feature Transformation technique QuantileTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_QuantileTransformer.ipynb",
                        "keywords": "regression,ardregressor,datatranformationtechnique,quantiletransformer",
                        "display_url": "https://siberian.dev/regression/ard-regression-quantile-transformer"
                    },
                    {
                        "name": "ARDRegressor_RobustScaler.ipynb",
                        "title": "ARD Regression With RobustScaler",
                        "description": "Regression analysis using the ARDRegressor where rescaling method used is RobustScaler.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_RobustScaler.ipynb",
                        "keywords": "regression,ardregressor,rescaling,method,robustscaler",
                        "display_url": "https://siberian.dev/regression/ard-regression-robustscaler"
                    },
                    {
                        "name": "ARDRegressor_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "ARD Regression With RobustScaler And Polynomial Features",
                        "description": "Regression analysis using ARDRegressor algorithm with RobustScaler and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,ardregressor,robustscaler,datatranformationtechnique,polynomials,pipeline",
                        "display_url": "https://siberian.dev/regression/ard-regression-robustscaler-and-polynomial-features"
                    },
                    {
                        "name": "ARDRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "title": "ARD Regression With RobustScaler And Quantile Transformer",
                        "description": "The regression analysis using a ARDRegressor with feature transformation technique Quantile Transformer and feature rescaling technique RobustScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,ardregressor,datatranformationtechnique,quantiletransformer,rescalingtechnique,robustscaler",
                        "display_url": "https://siberian.dev/regression/ard-regression-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "ARDRegressor_Scale.ipynb",
                        "title": "ARD Regression With Scale",
                        "description": "Regression tasks using a ARDRegressor and feature rescaling technique is Scale.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_Scale.ipynb",
                        "keywords": "regression,ardregressor,rescalingtechnique,scale",
                        "display_url": "https://siberian.dev/regression/ard-regression-scale"
                    },
                    {
                        "name": "ARDRegressor_Scale_PolynomialFeatures.ipynb",
                        "title": "ARD Regression With Scale And Polynomial Features",
                        "description": "Regression analysis using the ARDRegressor with data rescaling technique Scale separately and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_Scale_PolynomialFeatures.ipynb",
                        "keywords": "regression,ardregressor,datarescalingtechnique,scale,separately,datatranformationtechnique,polynomials,pipeline",
                        "display_url": "https://siberian.dev/regression/ard-regression-scale-and-polynomial-features"
                    },
                    {
                        "name": "ARDRegressor_StandardScaler.ipynb",
                        "title": "ARD Regression With StandardScaler",
                        "description": "Regression analysis using the ARDRegressor where rescaling method used is StandardScaler.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_StandardScaler.ipynb",
                        "keywords": "regression,ardregressor,rescaling,method,standardscaler",
                        "display_url": "https://siberian.dev/regression/ard-regression-standardscaler"
                    },
                    {
                        "name": "ARDRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "ARD RegressionWith StandardScaler And Polynomial Features",
                        "description": "Regression analysis using ARDRegressor algorithm with StandardScaler and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,ardregressor,standardscaler,datatranformationtechnique,polynomials,pipeline",
                        "display_url": "https://siberian.dev/regression/ard-regression-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "ARDRegressor_StandardScaler_PowerTransformer.ipynb",
                        "title": "ARD Regression With StandardScaler And Power Transformer",
                        "description": "Regression analysis using ARDRegressor algorithm with StandardScaler and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "regression,ardregressor,standardscaler,datatranformationtechnique,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/ard-regression-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "ARDRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "title": "ARD Regression With StandardScaler And Quantile Transformer",
                        "description": "Regression analysis using ARDRegressor algorithm with StandardScaler and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,ardregressor,standardscaler,datatranformationtechnique,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/ard-regression-standardscaler-and-quantile-transformer"
                    },
                    {
                        "name": "BayesianRidgeRegression.ipynb",
                        "title": "Bayesian Ridge Regression",
                        "description": "The regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression.ipynb",
                        "keywords": "regression,simple,bayesian,ridge,regression,bayesian,regression,approach",
                        "display_url": "https://siberian.dev/regression/bayesian-ridge-regression"
                    },
                    {
                        "name": "BayesianRidgeRegression_MinMaxScaler.ipynb",
                        "title": "Bayesian Ridge Regression With MinMaxScaler",
                        "description": "The regression analysis using a Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_MinMaxScaler.ipynb",
                        "keywords": "regression,bayesian,ridge,regression,bayesian,regression,approach,rescalingtechnique,minmaxscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/bayesian-ridge-regression-minmaxscaler"
                    },
                    {
                        "name": "BayesianRidgeRegression_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Bayesian Ridge RegressionWith MinMaxScaler And Polynomial Features",
                        "description": "The regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique MinMaxScaler and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,simple,bayesian,ridge,regression,bayesian,regression,approach,rescalingtechnique,minmaxscaler,datatranformationtechnique,polynomials,pipeline",
                        "display_url": "https://siberian.dev/regression/bayesian-ridge-regression-minmaxscaler-and-polynomial-featuress"
                    },
                    {
                        "name": "BayesianRidgeRegression_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Bayesian Ridge Regression With MinMaxScaler And Power Transformer",
                        "description": "The regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique MinMaxScaler and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "regression,simple,bayesian,ridge,regression,bayesian,regression,approach,rescalingtechnique,minmaxscaler,datatranformationtechnique,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/bayesian-ridge-regression-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "BayesianRidgeRegression_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Bayesian Ridge Regression With MinMaxScaler And Quantile Transformer",
                        "description": "The regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique MinMaxScaler and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,simple,bayesian,ridge,regression,bayesian,regression,approach,rescalingtechnique,minmaxscaler,datatranformationtechnique,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/bayesian-ridge-regression-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "BayesianRidgeRegression_Normalize.ipynb",
                        "title": "Bayesian Ridge Regression With Normalization",
                        "description": "The regression analysis using a Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique Normalize.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_Normalize.ipynb",
                        "keywords": "regression,bayesian,ridge,regression,bayesian,regression,approach,rescalingtechnique,normalize",
                        "display_url": "https://siberian.dev/regression/bayesian-ridge-regression-normalization"
                    },
                    {
                        "name": "BayesianRidgeRegression_Normalize_PolynomialFeatures.ipynb",
                        "title": "Bayesian Ridge Regression With Normalization And Polynomial Features",
                        "description": "This code can be used for the regression analysis using BayesianRidgeRegression Algorithm along with Normalize for data Rescaling separately and Polynomial features for Feature Transformation in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "regression,bayesianridgeregression,normalize,datarescaling,separately,polynomial,s,datatranformation,pipeline",
                        "display_url": "https://siberian.dev/regression/bayesian-ridge-regression-normalization-and-polynomial-features"
                    },
                    {
                        "name": "BayesianRidgeRegression_PolynomialFeatures.ipynb",
                        "title": "Bayesian Ridge Regression With Polynomial Features",
                        "description": "The regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_PolynomialFeatures.ipynb",
                        "keywords": "regression,simple,bayesian,ridge,regression,bayesian,regression,approach,datatranformationtechnique,polynomials,pipeline",
                        "display_url": "https://siberian.dev/regression/bayesian-ridge-regression-polynomial-features"
                    },
                    {
                        "name": "BayesianRidgeRegression_PowerTransformer.ipynb",
                        "title": "Bayesian Ridge Regression With Power Transformer",
                        "description": "The regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach and feature transformation technique Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_PowerTransformer.ipynb",
                        "keywords": "regression,simple,bayesian,ridge,regression,bayesian,regression,approach,datatranformationtechnique,power,transformer,pipeline",
                        "display_url": "https://siberian.dev/regression/bayesian-ridge-regression-power-transformer"
                    },
                    {
                        "name": "BayesianRidgeRegression_QuantileTransformer.ipynb",
                        "title": "Bayesian Ridge Regression With Quantile Transformer",
                        "description": "The regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach and feature transformation technique Quantile Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_QuantileTransformer.ipynb",
                        "keywords": "regression,simple,bayesian,ridge,regression,bayesian,regression,approach,datatranformationtechnique,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/bayesian-ridge-regression-quantile-transformer"
                    },
                    {
                        "name": "BayesianRidgeRegression_RobustScaler.ipynb",
                        "title": "Bayesian Ridge Regression With RobustScaler",
                        "description": "The regression analysis using a Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_RobustScaler.ipynb",
                        "keywords": "regression,bayesian,ridge,regression,bayesian,regression,approach,rescalingtechnique,robustscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/bayesian-ridge-regression-robustscaler"
                    },
                    {
                        "name": "BayesianRidgeRegression_RobustScaler_PowerTransformer.ipynb",
                        "title": "Bayesian Ridge Regression With RobustScaler And Power Transformer",
                        "description": "The regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach with feature rescaling technique RobustScaler and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "regression,simple,bayesian,ridge,regression,bayesian,regression,approach,rescalingtechnique,robustscaler,datatranformationtechnique,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/bayesian-ridge-regression-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "BayesianRidgeRegression_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Bayesian Ridge Regression With RobustScaler And Quantile Transformer",
                        "description": "This code can be used for the regression analysis using BayesianRidgeRegression Algorithm with data Rescaling and Feature Transformation techniques RobustScaler and QuantileTransformer respectively.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,bayesianridgeregression,datarescaling,datatranformation,techniques,robustscaler,quantiletransformer,respectively",
                        "display_url": "https://siberian.dev/regression/bayesian-ridge-regression-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "BayesianRidgeRegression_Scale.ipynb",
                        "title": "Bayesian Ridge Regression With Scale",
                        "description": "The regression analysis using a Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique Scale.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_Scale.ipynb",
                        "keywords": "regression,bayesian,ridge,regression,bayesian,regression,approach,rescalingtechnique,scale",
                        "display_url": "https://siberian.dev/regression/bayesian-ridge-regression-scale"
                    },
                    {
                        "name": "BayesianRidgeRegression_Scale_PolynomialFeatures.ipynb",
                        "title": "Bayesian Ridge Regression With Scale And Polynomial Features",
                        "description": "The regression analysis using a BayesianRidge Regressor and the feature rescaling technique Scale & feature transform Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_Scale_PolynomialFeatures.ipynb",
                        "keywords": "regression,bayesianridge,regressor,rescalingtechnique,scale,transform,polynomial,s,pipeline",
                        "display_url": "https://siberian.dev/regression/bayesian-ridge-regression-scale-and-polynomial-features"
                    },
                    {
                        "name": "BayesianRidgeRegression_Scale_PowerTransformer.ipynb",
                        "title": "Bayesian Ridge Regression With Scale And Power Transformer",
                        "description": "The regression analysis using a BayesianRidge Regressor and the feature rescaling technique Scale & feature transform Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_Scale_PowerTransformer.ipynb",
                        "keywords": "regression,bayesianridge,regressor,rescalingtechnique,scale,transform,power,transformer,pipeline",
                        "display_url": "https://siberian.dev/regression/bayesian-ridge-regression-scale-and-power-transformer"
                    },
                    {
                        "name": "BayesianRidgeRegression_StandardScaler.ipynb",
                        "title": "Bayesian Ridge Regression With StandardScaler",
                        "description": "The regression analysis using a Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique StandardScaler.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_StandardScaler.ipynb",
                        "keywords": "regression,bayesian,ridge,regression,bayesian,regression,approach,rescalingtechnique,standardscaler",
                        "display_url": "https://siberian.dev/regression/bayesian-ridge-regression-standardscaler"
                    },
                    {
                        "name": "BayesianRidgeRegression_StandardScaler_PowerTransformer.ipynb",
                        "title": "Bayesian Ridge Regression With StandardScaler And Power Transformer",
                        "description": "The regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique StandardScaler and feature transformation technique Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "regression,simple,bayesian,ridge,regression,bayesian,regression,approach,rescalingtechnique,standardscaler,datatranformationtechnique,power,transformer,pipeline",
                        "display_url": "https://siberian.dev/regression/bayesian-ridge-regression-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "BayesianRidgeRegression_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Bayesian Ridge Regression With StandardScaler And Quantile Transformer",
                        "description": "The regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique StandardScaler and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,simple,bayesian,ridge,regression,bayesian,regression,approach,rescalingtechnique,standardscaler,datatranformationtechnique,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/bayesian-ridge-regression-standardscaler-and-quantile-transformer"
                    },
                    {
                        "name": "ElasticNet.ipynb",
                        "title": "ElasticNet",
                        "description": "Regression tasks using a ElasticNet based on the Regression linear model Technique.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet.ipynb",
                        "keywords": "regression,elasticnet,regression,linear,model,technique",
                        "display_url": "https://siberian.dev/regression/elasticnet"
                    },
                    {
                        "name": "ElasticNet_MinMaxScaler.ipynb",
                        "title": "ElasticNet With MinMaxScaler",
                        "description": "the regression analysis using a ElasticNet Regression and the feature rescaling technique MinMaxScaler in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_MinMaxScaler.ipynb",
                        "keywords": "regression,elasticnet,regression,rescalingtechnique,minmaxscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/elasticnet-minmaxscaler"
                    },
                    {
                        "name": "ElasticNet_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "ElasticNet With MinMaxScaler And Polynomial Features",
                        "description": "Regression tasks using a ElasticNet based on the Regression linear model Technique with MinMaxScaler and feature transformation technique Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,elasticnet,regression,linear,model,technique,minmaxscaler,datatranformationtechnique,polynomial,s,pipeline",
                        "display_url": "https://siberian.dev/regression/elasticnet-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "ElasticNet_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "ElasticNet With MinMaxScaler And Power Transformer",
                        "description": "Regression tasks using a ElasticNet based on the Regression linear model Technique with MinMaxScaler and feature transformation technique PowerTransformer in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "regression,elasticnet,regression,linear,model,technique,minmaxscaler,datatranformationtechnique,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/elasticnet-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "ElasticNet_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "ElasticNet With MinMaxScaler And Quantile Transformer",
                        "description": "Regression tasks using a ElasticNet based on the Regression linear model Technique with MinMaxScaler and feature transformation technique Quantile Transformer in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,elasticnet,regression,linear,model,technique,minmaxscaler,datatranformationtechnique,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/elasticnet-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "ElasticNet_Normalize.ipynb",
                        "title": "ElasticNet With Normalization",
                        "description": "Regression tasks using a ElasticNet based on the Regression linear model Technique and feature rescaling technique Normalize",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_Normalize.ipynb",
                        "keywords": "regression,elasticnet,regression,linear,model,technique,rescalingtechnique,normalize",
                        "display_url": "https://siberian.dev/regression/elasticnet-normalization"
                    },
                    {
                        "name": "ElasticNet_Normalize_PolynomialFeatures.ipynb",
                        "title": "ElasticNet With Normalization And Polynomial Features",
                        "description": "The regression analysis using a ElasticNet with feature transformation technique Polynomial Features and feature rescaling technique Normalize",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "regression,elasticnet,datatranformationtechnique,polynomial,s,rescalingtechnique,normalize",
                        "display_url": "https://siberian.dev/regression/elasticnet-normalization-and-polynomial-features"
                    },
                    {
                        "name": "ElasticNet_Normalize_PowerTransformer.ipynb",
                        "title": "ElasticNet With Normalization And Power Transformer",
                        "description": "The regression analysis using a ElasticNet with feature transformation technique Power Transformer and feature rescaling technique Normalize",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_Normalize_PowerTransformer.ipynb",
                        "keywords": "regression,elasticnet,datatranformationtechnique,power,transformer,rescalingtechnique,normalize",
                        "display_url": "https://siberian.dev/regression/elasticnet-normalization-and-power-transformer"
                    },
                    {
                        "name": "ElasticNet_Normalize_QuantileTransformer.ipynb",
                        "title": "ElasticNet With Normalization And Quantile Transformer",
                        "description": "The regression analysis using a ElasticNet with feature transformation technique Quantile Transformer and feature rescaling technique Normalize",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_Normalize_QuantileTransformer.ipynb",
                        "keywords": "regression,elasticnet,datatranformationtechnique,quantiletransformer,rescalingtechnique,normalize",
                        "display_url": "https://siberian.dev/regression/elasticnet-normalization-and-quantile-transformer"
                    },
                    {
                        "name": "ElasticNet_PolynomialFeatures.ipynb",
                        "title": "ElasticNet With Polynomial Features",
                        "description": "The regression analysis using a ElasticNet Regression and the feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_PolynomialFeatures.ipynb",
                        "keywords": "regression,elasticnet,regression,datatranformationtechnique,polynomials,pipeline",
                        "display_url": "https://siberian.dev/regression/elasticnet-polynomial-features"
                    },
                    {
                        "name": "ElasticNet_PowerTransformer.ipynb",
                        "title": "ElasticNet With Power Transformer",
                        "description": "The regression analysis using a ElasticNet and feature transformation technique Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_PowerTransformer.ipynb",
                        "keywords": "regression,elasticnet,datatranformationtechnique,power,transformer,pipeline",
                        "display_url": "https://siberian.dev/regression/elasticnet-power-transformer"
                    },
                    {
                        "name": "ElasticNet_QuantileTransformer.ipynb",
                        "title": "ElasticNet With Quantile Transformer",
                        "description": "Regression tasks using a ElasticNet based on the Regression linear model Technique with feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_QuantileTransformer.ipynb",
                        "keywords": "regression,elasticnet,regression,linear,model,technique,datatranformationtechnique,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/elasticnet-quantile-transformer"
                    },
                    {
                        "name": "ElasticNet_RobustScaler.ipynb",
                        "title": "ElasticNet With RobustScaler",
                        "description": "The regression analysis using a ElasticNet Regression and the feature rescaling technique RobustScaler in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_RobustScaler.ipynb",
                        "keywords": "regression,elasticnet,regression,rescalingtechnique,robustscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/elasticnet-robustscaler"
                    },
                    {
                        "name": "ElasticNet_RobustScaler_PowerTransformer.ipynb",
                        "title": "ElasticNet With RobustScaler And Power Transformer",
                        "description": "Regression analysis using the ElasticNet regressor where rescaling method used is RobustScaler and feature transformation is done via Power Transformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "regression,elasticnet,regressor,rescaling,method,robustscaler,datatranformation,power,transformer",
                        "display_url": "https://siberian.dev/regression/elasticnet-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "ElasticNet_RobustScaler_QuantileTransformer.ipynb",
                        "title": "ElasticNet With RobustScaler And Quantile Transformer",
                        "description": "The regression analysis using a ElasticNet with feature transformation technique Quantile Transformer and feature rescaling technique RobustScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,elasticnet,datatranformationtechnique,quantiletransformer,rescalingtechnique,robustscaler",
                        "display_url": "https://siberian.dev/regression/elasticnet-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "ElasticNet_Scale.ipynb",
                        "title": "ElasticNet With Scale",
                        "description": "The regression analysis using a ElasticNet Regression and the feature rescaling technique Scale",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_Scale.ipynb",
                        "keywords": "regression,elasticnet,regression,rescalingtechnique,scale",
                        "display_url": "https://siberian.dev/regression/elasticnet-scale"
                    },
                    {
                        "name": "ElasticNet_Scale_PolynomialFeatures.ipynb",
                        "title": "ElasticNet With Scale And Polynomial Features",
                        "description": "The regression analysis using a ElasticNet with feature transformation technique and feature PolynomialFeatures rescaling technique Scale",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_Scale_PolynomialFeatures.ipynb",
                        "keywords": "regression,elasticnet,datatranformationtechnique,polynomials,rescalingtechnique,scale",
                        "display_url": "https://siberian.dev/regression/elasticnet-scale-and-polynomial-features"
                    },
                    {
                        "name": "ElasticNet_Scale_PowerTransformer.ipynb",
                        "title": "ElasticNet With Scale And Power Transformer",
                        "description": "The regression analysis using a ElasticNet with feature transformation technique and feature PowerTransformer rescaling technique Scale",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_Scale_PowerTransformer.ipynb",
                        "keywords": "regression,elasticnet,datatranformationtechnique,powertransformer,rescalingtechnique,scale",
                        "display_url": "https://siberian.dev/regression/elasticnet-scale-and-power-transformer"
                    },
                    {
                        "name": "ElasticNet_StandardScaler.ipynb",
                        "title": "ElasticNet With StandardScaler",
                        "description": "The regression analysis using a ElasticNet Regression and the feature rescaling technique StandardScaler in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_StandardScaler.ipynb",
                        "keywords": "regression,elasticnet,regression,rescalingtechnique,standardscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/elasticnet-standardscaler"
                    },
                    {
                        "name": "ElasticNet_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "ElasticNet With StandardScaler And Polynomial Features",
                        "description": "Regression tasks using a ElasticNet based on the Regression linear model Technique with feature transformation technique PolynomialFeatures and Data rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,elasticnet,regression,linear,model,technique,datatranformationtechnique,polynomials,datarescalingtechnique,standardscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/elasticnet-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "ElasticNet_StandardScaler_PowerTransformer.ipynb",
                        "title": "ElasticNet With StandardScaler And Power Transformer",
                        "description": "Regression tasks using a ElasticNet based on the Regression linear model Technique with StandardScaler and feature transformation technique PowerTransformer in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "regression,elasticnet,regression,linear,model,technique,standardscaler,datatranformationtechnique,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/elasticnet-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "ElasticNet_StandardScaler_QuantileTransformer.ipynb",
                        "title": "ElasticNet With RobustScaler And Quantile Transformer",
                        "description": "The regression analysis using a ElasticNet with feature transformation technique Quantile Transformer and feature rescaling technique Standard Scaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,elasticnet,datatranformationtechnique,quantiletransformer,rescalingtechnique,standard,scaler",
                        "display_url": "https://siberian.dev/regression/elasticnet-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "GammaRegressor.ipynb",
                        "title": "Gamma Regression",
                        "description": "This code is the regression analysis using Gamma Regression",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor.ipynb",
                        "keywords": "regression,gamma,regression",
                        "display_url": "https://siberian.dev/regression/gamma-regression"
                    },
                    {
                        "name": "GammaRegressor_MinMaxScalar.ipynb",
                        "title": "Gamma Regression With MinMaxScaler",
                        "description": "The regression analysis using Gamma Regression via data scaling technique MinMax Scalar",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_MinMaxScalar.ipynb",
                        "keywords": "regression,gamma,regression,data,scalingtechnique,minmax,scalar",
                        "display_url": "https://siberian.dev/regression/gamma-regression-minmaxscaler"
                    },
                    {
                        "name": "GammaRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Gamma Regression With MinMaxScaler And Polynomial Features",
                        "description": "The regression analysis using Gamma Regression with MinMaxScaler as Feature Rescaling techinque and PolynomialFeatures as feature transformation technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,gamma,regression,minmaxscaler,rescaling,techinque,polynomials,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/gamma-regression-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "GammaRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Gamma Regression With MinMaxScaler And Power Transformer",
                        "description": "The regression analysis using Gamma Regression with MinMaxScaler as Feature Rescaling techinque and PowerTransformer as feature transformation technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "regression,gamma,regression,minmaxscaler,rescaling,techinque,powertransformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/gamma-regression-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "GammaRegressor_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Gamma Regression With MinMaxScaler And Quantile Transformer",
                        "description": "The regression analysis using a GammaRegressor with feature transformation technique Quantile Transformer and feature rescaling technique MinMaxScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,gammaregressor,datatranformationtechnique,quantiletransformer,rescalingtechnique,minmaxscaler",
                        "display_url": "https://siberian.dev/regression/gamma-regression-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "GammaRegressor_Normalize.ipynb",
                        "title": "Gamma Regression With Normalization",
                        "description": "The regression analysis using Gamma Regression via data scaling technique Normalize",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_Normalize.ipynb",
                        "keywords": "regression,gamma,regression,data,scalingtechnique,normalize",
                        "display_url": "https://siberian.dev/regression/gamma-regression-normalization"
                    },
                    {
                        "name": "GammaRegressor_Normalize_QuantileTransformer.ipynb",
                        "title": "Gamma Regression With Normalization And Quantile Transformer",
                        "description": "The regression analysis using a GammaRegressor with feature transformation technique Quantile Transformer and feature rescaling technique Normalize",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_Normalize_QuantileTransformer.ipynb",
                        "keywords": "regression,gammaregressor,datatranformationtechnique,quantiletransformer,rescalingtechnique,normalize",
                        "display_url": "https://siberian.dev/regression/gamma-regression-normalization-and-quantile-transformer"
                    },
                    {
                        "name": "GammaRegressor_PolynomialFeatures.ipynb",
                        "title": "Gamma Regression With Polynomial Features",
                        "description": "The regression analysis using Gamma Regression via feature transformation technique PolynomialFeatures.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_PolynomialFeatures.ipynb",
                        "keywords": "regression,gamma,regression,datatranformationtechnique,polynomials",
                        "display_url": "https://siberian.dev/regression/gamma-regression-polynomial-features"
                    },
                    {
                        "name": "GammaRegressor_PowerTransformer.ipynb",
                        "title": "Gamma Regression With Power Transformer",
                        "description": "The regression analysis using Gamma Regression with feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_PowerTransformer.ipynb",
                        "keywords": "regression,gamma,regression,datatranformationtechnique,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/gamma-regression-power-transformer"
                    },
                    {
                        "name": "GammaRegressor_QuantileTransformer.ipynb",
                        "title": "Gamma Regression With Quantile Transformer",
                        "description": "The regression analysis using Gamma Regression with feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_QuantileTransformer.ipynb",
                        "keywords": "regression,gamma,regression,datatranformationtechnique,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/gamma-regression-quantile-transformer"
                    },
                    {
                        "name": "GammaRegressor_RobustScalar.ipynb",
                        "title": "Gamma Regression With RobustScaler",
                        "description": "The regression analysis using Gamma Regression via data scaling technique RobustScalar",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_RobustScalar.ipynb",
                        "keywords": "regression,gamma,regression,data,scalingtechnique,robustscalar",
                        "display_url": "https://siberian.dev/regression/gamma-regression-robustscaler"
                    },
                    {
                        "name": "GammaRegressor_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "Gamma Regression With RobustScaler And Polynomial Features",
                        "description": "The regression analysis using Gamma Regression with RobustScaler as Feature Rescaling techinque and Polynomial Features as feature transformation technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,gamma,regression,robustscaler,rescaling,techinque,polynomial,s,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/gamma-regression-robustscaler-and-polynomial-features"
                    },
                    {
                        "name": "GammaRegressor_RobustScaler_PowerTransformer.ipynb",
                        "title": "Gamma Regression With RobustScaler And Power Transformer",
                        "description": "The regression analysis using Gamma Regression with RobustScaler as Feature Rescaling techinque and PowerTransformer as feature transformation technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "regression,gamma,regression,robustscaler,rescaling,techinque,powertransformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/gamma-regression-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "GammaRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Gamma Regression With RobustScaler And Quantile Transformer",
                        "description": "The regression analysis using Gamma Regression with RobustScaler as Feature Rescaling techinque and QuantileTransformer as feature transformation technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,gamma,regression,robustscaler,rescaling,techinque,quantiletransformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/gamma-regression-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "GammaRegressor_Scale.ipynb",
                        "title": "Gamma Regression With Scale",
                        "description": "Regression tasks using a Gamma Regressor and feature rescaling technique is Scale",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_Scale.ipynb",
                        "keywords": "regression,gamma,regressor,rescalingtechnique,scale",
                        "display_url": "https://siberian.dev/regression/gamma-regression-scale"
                    },
                    {
                        "name": "GammaRegressor_StandardScalar.ipynb",
                        "title": "Gamma Regression With StandardScaler",
                        "description": "The regression analysis using Gamma Regression via data scaling technique Standard Scalar",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_StandardScalar.ipynb",
                        "keywords": "regression,gamma,regression,data,scalingtechnique,standard,scalar",
                        "display_url": "https://siberian.dev/regression/gamma-regression-standardscaler"
                    },
                    {
                        "name": "GammaRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Gamma Regression With StandardScaler And Polynomial Features",
                        "description": "The regression analysis using Gamma Regression via data rescaling technique StandardScaler and feature transformation technique PolynomialFeatures.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,gamma,regression,datarescalingtechnique,standardscaler,datatranformationtechnique,polynomials",
                        "display_url": "https://siberian.dev/regression/gamma-regression-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "GammaRegressor_StandardScaler_PowerTransformer.ipynb",
                        "title": "Gamma Regression With StandardScaler And Power Transformer",
                        "description": "Regression analysis using the GammaRegressor where rescaling method used is StandardScaler and feature transformation is done using PowerTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "regression,gammaregressor,rescaling,method,standardscaler,datatranformation,powertransformer",
                        "display_url": "https://siberian.dev/regression/gamma-regression-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "GammaRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Gamma Regression With StandardScaler And Quantile Transformer",
                        "description": "The regression analysis using a GammaRegressor with feature transformation technique Quantile Transformer and feature rescaling technique StandardScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,gammaregressor,datatranformationtechnique,quantiletransformer,rescalingtechnique,standardscaler",
                        "display_url": "https://siberian.dev/regression/gamma-regression-standardscaler-and-quantile-transformer"
                    },
                    {
                        "name": "HuberRegressor.ipynb",
                        "title": "Huber Regressor",
                        "description": "This code is the regression analysis using a simple Huber Regressor.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor.ipynb",
                        "keywords": "regression,simple,huber,regressor",
                        "display_url": "https://siberian.dev/regression/huber-regressor"
                    },
                    {
                        "name": "HuberRegressor_MinMaxScaler.ipynb",
                        "title": "Huber Regressor With MinMaxScaler",
                        "description": "The regression analysis using a Huber Regression and the feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_MinMaxScaler.ipynb",
                        "keywords": "regression,huber,regression,rescalingtechnique,minmaxscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/huber-regressor-minmaxscaler"
                    },
                    {
                        "name": "HuberRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Huber Regressor With MinMaxScaler And Polynomial Features",
                        "description": "The regression analysis using a HuberRegressor with feature transformation technique PolynomialFeatures and feature rescaling technique MinMaxScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,huberregressor,datatranformationtechnique,polynomials,rescalingtechnique,minmaxscaler",
                        "display_url": "https://siberian.dev/regression/huber-regressor-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "HuberRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Huber Regressor With MinMaxScaler And Power Transformer",
                        "description": "Regression analysis using HuberRegressor algorithm with MinMaxScaler and PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "regression,huberregressor,minmaxscaler,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/huber-regressor-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "HuberRegressor_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Huber Regressor With MinMaxScaler And Quantile Transformer",
                        "description": "Regression analysis using HuberRegressor algorithm with MinMaxScaler for data rescaling and QuantileTransformer for feature transformation in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,huberregressor,minmaxscaler,datarescaling,quantiletransformer,datatranformation,pipeline",
                        "display_url": "https://siberian.dev/regression/huber-regressor-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "HuberRegressor_Normalize.ipynb",
                        "title": "Huber Regressor With Normalization",
                        "description": "The regression analysis using a Huber Regression and the feature rescaling technique called Normalization separately.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_Normalize.ipynb",
                        "keywords": "regression,huber,regression,rescalingtechnique,normalization,separately",
                        "display_url": "https://siberian.dev/regression/huber-regressor-normalization"
                    },
                    {
                        "name": "HuberRegressor_Normalize_PowerTransformer.ipynb",
                        "title": "Huber Regressor With Normalization And Power Transformer",
                        "description": "The regression analysis using a simple Huber Regressor with data rescaling technique Normalize separately and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_Normalize_PowerTransformer.ipynb",
                        "keywords": "regression,simple,huber,regressor,datarescalingtechnique,normalize,separately,datatranformationtechnique,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/huber-regressor-normalization-and-power-transformer"
                    },
                    {
                        "name": "HuberRegressor_Normalize_QuantileTransformer.ipynb",
                        "title": "Huber Regressor With Normalization And Quantile Transformer",
                        "description": "The regression analysis using a HuberRegressor with feature transformation technique QuantileTransformer and feature rescaling technique Normalize",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_Normalize_QuantileTransformer.ipynb",
                        "keywords": "regression,huberregressor,datatranformationtechnique,quantiletransformer,rescalingtechnique,normalize",
                        "display_url": "https://siberian.dev/regression/huber-regressor-normalization-and-quantile-transformer"
                    },
                    {
                        "name": "HuberRegressor_PolynomialFeatures.ipynb",
                        "title": "Huber Regressor With Polynomial Features",
                        "description": "The regression analysis using a simple Huber Regressor with Feature Transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_PolynomialFeatures.ipynb",
                        "keywords": "regression,simple,huber,regressor,datatranformationtechnique,polynomials,pipeline",
                        "display_url": "https://siberian.dev/regression/huber-regressor-polynomial-features"
                    },
                    {
                        "name": "HuberRegressor_QuantileTransformer.ipynb",
                        "title": "Huber Regressor With Quantile Transformer",
                        "description": "The regression analysis using a simple Huber Regressor with Feature Transformation technique Quantile Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_QuantileTransformer.ipynb",
                        "keywords": "regression,simple,huber,regressor,datatranformationtechnique,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/huber-regressor-quantile-transformer"
                    },
                    {
                        "name": "HuberRegressor_RobustScaler.ipynb",
                        "title": "Huber Regressor With RobustScaler",
                        "description": "The regression analysis using a Huber Regression and the feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_RobustScaler.ipynb",
                        "keywords": "regression,huber,regression,rescalingtechnique,robustscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/huber-regressor-robustscaler"
                    },
                    {
                        "name": "HuberRegressor_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "Huber Regressor With RobustScaler And Polynomial Features",
                        "description": "Regression analysis using HuberRegressor algorithm with RobustScaler and PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,huberregressor,robustscaler,polynomials,pipeline",
                        "display_url": "https://siberian.dev/regression/huber-regressor-robustscaler-and-polynomial-features"
                    },
                    {
                        "name": "HuberRegressor_RobustScaler_PowerTransformer.ipynb",
                        "title": "Huber Regressor With RobustScaler And Power Transformer",
                        "description": "Regression analysis using HuberRegressor algorithm with RobustScaler and PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "regression,huberregressor,robustscaler,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/huber-regressor-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "HuberRegressor_Scale.ipynb",
                        "title": "Huber Regressor With Scale",
                        "description": "The regression analysis using a Huber Regression and the feature rescaling technique Scale",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_Scale.ipynb",
                        "keywords": "regression,huber,regression,rescalingtechnique,scale",
                        "display_url": "https://siberian.dev/regression/huber-regressor-scale"
                    },
                    {
                        "name": "HuberRegressor_StandardScaler.ipynb",
                        "title": "Huber Regressor With StandardScaler",
                        "description": "The regression analysis using a Huber Regression and the feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_StandardScaler.ipynb",
                        "keywords": "regression,huber,regression,rescalingtechnique,standardscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/huber-regressor-standardscaler"
                    },
                    {
                        "name": "HuberRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Huber Regressor With StandardScaler And Polynomial Features",
                        "description": "The regression analysis using a HuberRegressor with feature transformation technique PolynomialFeatures and feature rescaling technique StandardScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,huberregressor,datatranformationtechnique,polynomials,rescalingtechnique,standardscaler",
                        "display_url": "https://siberian.dev/regression/huber-regressor-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "HuberRegressor_StandardScaler_PowerTransformer.ipynb",
                        "title": "Huber Regressor With StandardScaler And Power Transformer",
                        "description": "Regression analysis using the HuberRegressor where rescaling method used is StandardScaler and feature transformation is done using PowerTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "regression,huberregressor,rescaling,method,standardscaler,datatranformation,powertransformer",
                        "display_url": "https://siberian.dev/regression/huber-regressor-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "HuberRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Huber Regressor With StandardScaler And Quantile Transformer",
                        "description": "The regression analysis using a HuberRegressor with feature transformation technique QuantileTransformer and feature rescaling technique StandardScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,huberregressor,datatranformationtechnique,quantiletransformer,rescalingtechnique,standardscaler",
                        "display_url": "https://siberian.dev/regression/huber-regressor-standardscaler-and-quantile-transformer"
                    },
                    {
                        "name": "Lars.ipynb",
                        "title": "Least Angle Regression",
                        "description": "The regression analysis using a simple Lars, also known as the Least Angle Regression model. Lars is a regression algorithm for high-dimensional data.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars.ipynb",
                        "keywords": "regression,simple,lars,angle,regression,model,lars,regression,highdimensional,data",
                        "display_url": "https://siberian.dev/regression/least-angle-regression"
                    },
                    {
                        "name": "Lars_MinMaxScaler.ipynb",
                        "title": "Least Angle Regression With MinMaxScaler",
                        "description": "The regression analysis using a simple Lars and MinMax scaler. Lars, also known as the Least Angle Regression model. Lars is a regression algorithm for high-dimensional data.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_MinMaxScaler.ipynb",
                        "keywords": "regression,simple,lars,minmax,scaler,lars,angle,regression,model,lars,regression,highdimensional,data",
                        "display_url": "https://siberian.dev/regression/least-angle-regression-minmaxscaler"
                    },
                    {
                        "name": "Lars_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Least Angle Regression With MinMaxScaler And Power Transformer",
                        "description": "The regression analysis using a LassoLars Regression and the feature rescaling technique MinMaxScaler along with Power Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "https://siberian.dev/regression/linear-models/lassolars-regression-along -with-standardscaler",
                        "display_url": "https://siberian.dev/regression/least-angle-regression-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "Lars_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Least Angle Regression With MinMaxScaler And Quantile Transformer",
                        "description": "The regression analysis using LARS Regressor and the feature transformation technique Quantile Transformer and MinMax Scaling rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,lars,regressor,datatranformationtechnique,quantiletransformer,minmax,scaling,rescalingtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/least-angle-regression-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "Lars_Normalize.ipynb",
                        "title": "Least Angle Regression With Normalization",
                        "description": "The regression analysis using a simple Lars and Normalize. Lars, also known as the Least Angle Regression model. Lars is a regression algorithm for high-dimensional data.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_Normalize.ipynb",
                        "keywords": "regression,simple,lars,normalize,lars,angle,regression,model,lars,regression,highdimensional,data",
                        "display_url": "https://siberian.dev/regression/least-angle-regression-normalization"
                    },
                    {
                        "name": "Lars_Normalize_PolynomialFeatures.ipynb",
                        "title": "Least Angle Regression With Scale And Polynomial Features",
                        "description": "The regression analysis using a Lars Regressor and the feature rescaling technique Normalize along with PolynomialFeatures as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "regression,lars,regressor,rescalingtechnique,normalize,polynomials,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/least-angle-regression-scale-and-polynomial-features"
                    },
                    {
                        "name": "Lars_Normalize_PowerTransformer.ipynb",
                        "title": "Least Angle Regression With Normalization And Power Transformer",
                        "description": "The regression analysis using a Lars Regressor and the feature rescaling technique normalize along with Power Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_Normalize_PowerTransformer.ipynb",
                        "keywords": "regression,lars,regressor,rescalingtechnique,normalize,power,transformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/least-angle-regression-normalization-and-power-transformer"
                    },
                    {
                        "name": "Lars_Normalize_QuantileTransformer.ipynb",
                        "title": "Least Angle Regression With Normalization And Quantile Transformer",
                        "description": "The regression analysis using a Lars Regressor and the feature rescaling technique normalize along with Quantile Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_Normalize_QuantileTransformer.ipynb",
                        "keywords": "regression,lars,regressor,rescalingtechnique,normalize,quantiletransformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/least-angle-regression-normalization-and-quantile-transformer"
                    },
                    {
                        "name": "Lars_PolynomialFeatures.ipynb",
                        "title": "Least Angle Regression With Polynomial Features",
                        "description": "The regression analysis using a Lars and Polynomial Features Feature Transformation. Lars, also known as the Least Angle Regression model. Lars is a regression algorithm for high-dimensional data.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_PolynomialFeatures.ipynb",
                        "keywords": "regression,simple,lars,polynomial,s,datatranformation,lars,angle,regression,model,lars,regression,highdimensional,data",
                        "display_url": "https://siberian.dev/regression/least-angle-regression-polynomial-features"
                    },
                    {
                        "name": "Lars_PowerTransformer.ipynb",
                        "title": "Least Angle Regression With Power Transformer",
                        "description": "The regression analysis using a Lars and Poower Transformer Feature Transformation. Lars, also known as the Least Angle Regression model. Lars is a regression algorithm for high-dimensional data.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_PowerTransformer.ipynb",
                        "keywords": "regression,simple,lars,poower,transformer,datatranformation,lars,angle,regression,model,lars,regression,highdimensional,data",
                        "display_url": "https://siberian.dev/regression/least-angle-regression-power-transformer"
                    },
                    {
                        "name": "Lars_QuantileTransformer.ipynb",
                        "title": "Least Angle Regression With Quantile Transformer",
                        "description": "The regression analysis using a Lars and Quantile Transformer Feature Transformation. Lars, also known as the Least Angle Regression model. Lars is a regression algorithm for high-dimensional data.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_QuantileTransformer.ipynb",
                        "keywords": "regression,simple,lars,quantiletransformer,datatranformation,lars,angle,regression,model,lars,regression,highdimensional,data",
                        "display_url": "https://siberian.dev/regression/least-angle-regression-quantile-transformer"
                    },
                    {
                        "name": "Lars_RobustScaler.ipynb",
                        "title": "Least Angle Regression With RobustScaler",
                        "description": "The regression analysis using a Lars and Robust scaler. Lars, also known as the Least Angle Regression model. Lars is a regression algorithm for high-dimensional data.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_RobustScaler.ipynb",
                        "keywords": "regression,simple,lars,robust,scaler,lars,angle,regression,model,lars,regression,highdimensional,data",
                        "display_url": "https://siberian.dev/regression/least-angle-regression-robustscaler"
                    },
                    {
                        "name": "Lars_RobustScaler_PowerTransformer.ipynb",
                        "title": "Least Angle Regression With RobustScaler And Power Transformer",
                        "description": "The regression analysis using LARS Regressor and the feature transformation technique Power Transformer and Robust Scaler rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "regression,lars,regressor,datatranformationtechnique,power,transformer,robust,scaler,rescalingtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/least-angle-regression-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "Lars_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Least Angle Regression With RobustScaler And Quantile Transformer",
                        "description": "The regression analysis using LARS Regressor and the feature transformation technique Quantile Transformer and Robust Scaler rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,lars,regressor,datatranformationtechnique,quantiletransformer,robust,scaler,rescalingtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/least-angle-regression-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "Lars_Scale.ipynb",
                        "title": "Least Angle Regression With Scale",
                        "description": "The regression analysis using a simple Lars and Scale. Lars, also known as the Least Angle Regression model. Lars is a regression algorithm for high-dimensional data.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_Scale.ipynb",
                        "keywords": "regression,simple,lars,scale,lars,angle,regression,model,lars,regression,highdimensional,data",
                        "display_url": "https://siberian.dev/regression/least-angle-regression-scale"
                    },
                    {
                        "name": "Lars_Scale_PolynomialFeatures.ipynb",
                        "title": "Least Angle Regression With Scale And Polynomial Features",
                        "description": "The regression analysis using a Lars Regressor and the feature rescaling technique scale along with PolynomialFeatures as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_Scale_PolynomialFeatures.ipynb",
                        "keywords": "regression,lars,regressor,rescalingtechnique,scale,polynomials,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/least-angle-regression-scale-and-polynomial-features"
                    },
                    {
                        "name": "Lars_Scale_QuantileTransformer.ipynb",
                        "title": "Least Angle Regression With Scale And Quantile Transformer",
                        "description": "The regression analysis using a Lars Regressor and the feature rescaling technique scale along with QuantileTransformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_Scale_QuantileTransformer.ipynb",
                        "keywords": "regression,lars,regressor,rescalingtechnique,scale,quantiletransformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/least-angle-regression-scale-and-quantile-transformer"
                    },
                    {
                        "name": "Lars_StandardScaler.ipynb",
                        "title": "Least Angle Regression With StandardScaler",
                        "description": "The regression analysis using a simple Lars and standard scaler. Lars, also known as the Least Angle Regression model. Lars is a regression algorithm for high-dimensional data.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_StandardScaler.ipynb",
                        "keywords": "regression,simple,lars,standard,scaler,lars,angle,regression,model,lars,regression,highdimensional,data",
                        "display_url": "https://siberian.dev/regression/least-angle-regression-standardscaler"
                    },
                    {
                        "name": "Lars_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Least Angle Regression With StandardScaler And Polynomial Features",
                        "description": "The regression analysis using LARS Regressor and the feature rescaling technique Polynomial Features and Standard Scaling rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,lars,regressor,rescalingtechnique,polynomial,s,standard,scaling,rescalingtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/least-angle-regression-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "Lars_StandardScaler_PowerTransformer.ipynb",
                        "title": "Least Angle Regression With StandardScaler And Power Transformer",
                        "description": "The regression analysis using LARS Regressor and the feature rescaling technique Power Transformer and Standard Scaling rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "regression,lars,regressor,rescalingtechnique,power,transformer,standard,scaling,rescalingtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/least-angle-regression-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "Lars_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Least Angle Regression With StandardScaler And Quantile Transformer",
                        "description": "The regression analysis using LARS Regressor and the feature transformation technique Quantile Transformer and Standard Scaling rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,lars,regressor,datatranformationtechnique,quantiletransformer,standard,scaling,rescalingtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/least-angle-regression-standardscaler-and-quantile-transformer"
                    },
                    {
                        "name": "LassoLars.ipynb",
                        "title": "Lasso Lars Regression",
                        "description": "The regression analysis using a simple LassoLars Regression. It is a lasso model implemented using the LARS algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars.ipynb",
                        "keywords": "regression,simple,lassolars,regression,lasso,model,lars,",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression"
                    },
                    {
                        "name": "LassoLars_MinMaxScaler.ipynb",
                        "title": "Lasso Lars Regression With MinMaxScaler",
                        "description": "The regression analysis using a simple LassoLars Regression. It is a lasso model implemented using the LARS algorithm and feature scaling using MinMax Scaler in a Pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_MinMaxScaler.ipynb",
                        "keywords": "regression,simple,lassolars,regression,lasso,model,lars,scaling,minmax,scaler,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression-minmaxscaler"
                    },
                    {
                        "name": "LassoLars_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Lasso Lars Regression With MinMaxScaler And Polynomial Features",
                        "description": "The regression analysis using a LassoLars Regression and the feature rescaling technique MinMaxScaler along with Polynomial Features as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,lassolars,regression,rescalingtechnique,minmaxscaler,polynomial,s,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "LassoLars_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Lasso Lars Regression With MinMaxScaler And Power Transformer",
                        "description": "The regression analysis using a LassoLars Regression and the feature rescaling technique MinMaxScaler along with PowerTransformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "regression,lassolars,regression,rescalingtechnique,minmaxscaler,powertransformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "LassoLars_Normalize.ipynb",
                        "title": "Lasso Lars Regression With Normalization",
                        "description": "The regression analysis using a simple LassoLars Regression. It is a lasso model implemented using the LARS algorithm and feature scaling using Normalization.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_Normalize.ipynb",
                        "keywords": "regression,simple,lassolars,regression,lasso,model,lars,scaling,normalization",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression-normalization"
                    },
                    {
                        "name": "LassoLars_Normalize_PolynomialFeatures.ipynb",
                        "title": "Lasso Lars Regression With Normalization And Polynomial Features",
                        "description": "The regression analysis using a simple LassoLars Regression. It is a lasso model implemented using the LARS algorithm with rescaling technique as Normalization and feature transformation technique as Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "regression,simple,lassolars,regression,lasso,model,lars,rescalingtechnique,normalization,datatranformationtechnique,polynomial,s,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression-normalization-and-polynomial-features"
                    },
                    {
                        "name": "LassoLars_Normalize_PowerTransformer.ipynb",
                        "title": "Lasso Lars Regression With Normalization And Power Transformer",
                        "description": "The regression analysis using a simple LassoLars Regression. It is a lasso model implemented using the LARS algorithm with rescaling technique as Normalization and feature transformation technique as PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_Normalize_PowerTransformer.ipynb",
                        "keywords": "regression,simple,lassolars,regression,lasso,model,lars,rescalingtechnique,normalization,datatranformationtechnique,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression-normalization-and-power-transformer"
                    },
                    {
                        "name": "LassoLars_PolynomialFeatures.ipynb",
                        "title": "Lasso Lars Regression With Polynomial Features",
                        "description": "The LassoLars Regression analysis which is implemented using LARS algorithm along with PolynomialFeatures as a feature transformation technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_PolynomialFeatures.ipynb",
                        "keywords": "lassolars,regression,lars,polynomials,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression-polynomial-features"
                    },
                    {
                        "name": "LassoLars_PowerTransformer.ipynb",
                        "title": "Lasso Lars Regression With Power Transformer",
                        "description": "The regression analysis using a simple LassoLars Regression with Feature Transformation technique PowerTransformer in a pipeline. It is a lasso model implemented using the LARS algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_PowerTransformer.ipynb",
                        "keywords": "regression,simple,lassolars,regression,datatranformationtechnique,powertransformer,pipeline,lasso,model,lars,",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression-power-transformer"
                    },
                    {
                        "name": "LassoLars_QuantileTransformer.ipynb",
                        "title": "Lasso Lars Regression With Quantile Transformer",
                        "description": "The regression analysis using a simple LassoLars Regression with Feature Transformation technique QuantileTransformer in a pipeline. It is a lasso model implemented using the LARS algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_QuantileTransformer.ipynb",
                        "keywords": "regression,simple,lassolars,regression,datatranformationtechnique,quantiletransformer,pipeline,lasso,model,lars,",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression-quantile-transformer"
                    },
                    {
                        "name": "LassoLars_RobustScaler.ipynb",
                        "title": "Lasso Lars Regression With RobustScaler",
                        "description": "The regression analysis using a simple LassoLars Regression. It is a lasso model implemented using the LARS algorithm and feature scaling using Robust Scaler in a Pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_RobustScaler.ipynb",
                        "keywords": "regression,simple,lassolars,regression,lasso,model,lars,scaling,robust,scaler,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression-robustscaler"
                    },
                    {
                        "name": "LassoLars_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "Lasso Lars Regression With RobustScaler And Polynomial Features",
                        "description": "The regression analysis using a simple LassoLars Regression. It is a lasso model implemented using the LARS algorithm and feature scaling using Robust Scaler with transfomation technique used as Polynomial Features in a Pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,simple,lassolars,regression,lasso,model,lars,scaling,robust,scaler,transfomation,technique,polynomial,s,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression-robustscaler-and-polynomial-features"
                    },
                    {
                        "name": "LassoLars_RobustScaler_PowerTransformer.ipynb",
                        "title": "Lasso Lars Regression With RobustScaler And Power Transformer",
                        "description": "The regression analysis using a LassoLars Regression. It is a lasso model implemented using the LARS algorithm and feature scaling using Robust Scaler with transfomation technique used as Power Transformer in a Pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "regression,simple,lassolars,regression,lasso,model,lars,scaling,robust,scaler,transfomation,technique,power,transformer,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "LassoLars_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Lasso Lars Regression With RobustScaler And Quantile Transformer",
                        "description": "The regression analysis using a LassoLars Regression. It is a lasso model implemented using the LARS algorithm and feature scaling using Robust Scaler with transfomation technique used as Quantile Transformer in a Pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,simple,lassolars,regression,lasso,model,lars,scaling,robust,scaler,transfomation,technique,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "LassoLars_Scale.ipynb",
                        "title": "Lasso Lars Regression With Scale",
                        "description": "The regression analysis using a LassoLars Regression. It is a lasso model implemented using the LARS algorithm and feature scaling.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_Scale.ipynb",
                        "keywords": "regression,simple,lassolars,regression,lasso,model,lars,scaling",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression-scale"
                    },
                    {
                        "name": "LassoLars_Scale_PowerTransformer.ipynb",
                        "title": "Lasso Lars Regression With Scale And Power Transformer",
                        "description": "The regression analysis using a LassoLars Regression. It is a lasso model implemented using the LARS algorithm with rescaling technique as Scale and feature transformation technique as PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_Scale_PowerTransformer.ipynb",
                        "keywords": "regression,simple,lassolars,regression,lasso,model,lars,rescalingtechnique,scale,datatranformationtechnique,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression-scale-and-power-transformer"
                    },
                    {
                        "name": "LassoLars_Scale_QuantileTransformer.ipynb",
                        "title": "Lasso Lars Regression With Scale And Quantile Transformer",
                        "description": "The regression analysis using a LassoLars Regression. It is a lasso model implemented using the LARS algorithm and feature scaling using Scale with transfomation technique used as Quantile Transformer in a Pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_Scale_QuantileTransformer.ipynb",
                        "keywords": "regression,simple,lassolars,regression,lasso,model,lars,scaling,scale,transfomation,technique,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression-scale-and-quantile-transformer"
                    },
                    {
                        "name": "LassoLars_StandardScaler.ipynb",
                        "title": "Lasso Lars Regression With StandardScaler",
                        "description": "The regression analysis using a LassoLars Regression. It is a lasso model implemented using the LARS algorithm and feature scaling using Standard Scaler in a Pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_StandardScaler.ipynb",
                        "keywords": "regression,simple,lassolars,regression,lasso,model,lars,scaling,standard,scaler,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression-standardscaler"
                    },
                    {
                        "name": "LassoLars_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Lasso Lars Regression With StandardScaler And Polynomial Features",
                        "description": "The regression analysis using a LassoLars Regression and the feature rescaling technique StandardScaler along with Polynomial Features as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,lassolars,regression,rescalingtechnique,standardscaler,polynomial,s,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "LassoLars_StandardScaler_PowerTransformer.ipynb",
                        "title": "Lasso Lars Regression With StandardScaler And Power Transformer",
                        "description": "The regression analysis using a LassoLars Regression and the feature rescaling technique StandardScaler along with Power Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "regression,lassolars,regression,rescalingtechnique,standardscaler,power,transformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "LassoLars_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Lasso Lars Regression With StandardScaler And Quantile Transformer",
                        "description": "The regression analysis using a LassoLars Regression and the feature rescaling technique StandardScaler along with Quantile Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,lassolars,regression,rescalingtechnique,standardscaler,quantiletransformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-lars-regression-standardscaler-and-quantile-transformer"
                    },
                    {
                        "name": "LassoRegression.ipynb",
                        "title": "Lasso Regression",
                        "description": "The regression analysis using a simple Lasso Regression. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression.ipynb",
                        "keywords": "regression,simple,lasso,regression,lasso,stands,absolute,shrinkage,selection,operator,type,linear,regression,shrinkage",
                        "display_url": "https://siberian.dev/regression/lasso-regression"
                    },
                    {
                        "name": "LassoRegression_MinMaxScaler.ipynb",
                        "title": "Lasso Regression With MinMaxScaler",
                        "description": "The regression analysis using a Lasso Regression and the feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_MinMaxScaler.ipynb",
                        "keywords": "regression,lasso,regression,rescalingtechnique,minmaxscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-regression-minmaxscaler"
                    },
                    {
                        "name": "LassoRegression_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Lasso Regression With MinMaxScaler And Polynomial Features",
                        "description": "The regression analysis using the Lasso Regressor where rescaling method used is MinMaxScaler and feature transformation is done via Polynomial Features.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,lasso,regressor,rescaling,method,minmaxscaler,datatranformation,polynomial,s",
                        "display_url": "https://siberian.dev/regression/lasso-regresion-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "LassoRegression_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Lasso Regresion With MinMaxScaler And Power Transformer",
                        "description": "The regression analysis using the Lasso Regressor where rescaling method used is MinMaxScaler and feature transformation is done via PowerTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "regression,lasso,regressor,rescaling,method,minmaxscaler,datatranformation,powertransformer",
                        "display_url": "https://siberian.dev/regression/lasso-regresion-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "LassoRegression_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Lasso Regression With MinMaxScaler And Quantile Transformer",
                        "description": "The regression analysis using LassoRegresion with MinMaxScaler and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,lassoregresion,minmaxscaler,datatranformationtechnique,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-regresion-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "LassoRegression_Normalize.ipynb",
                        "title": "Lasso Regression With Normalization",
                        "description": "The regression analysis using a Lasso Regression and the feature rescaling technique called Normalization separately.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_Normalize.ipynb",
                        "keywords": "regression,lasso,regression,rescalingtechnique,normalization,separately",
                        "display_url": "https://siberian.dev/regression/lasso-regression-normalization"
                    },
                    {
                        "name": "LassoRegression_Normalize_PolynomialFeatures.ipynb",
                        "title": "Lasso Regresion With Normalization And Polynomial Features",
                        "description": "The regression analysis using Lasso Regression and the feature transformation technique Polynomial Features rescaling technique Normalize in a pipeline. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "regression,lasso,regression,datatranformationtechnique,polynomial,s,rescalingtechnique,normalize,pipeline,lasso,stands,absolute,shrinkage,selection,operator,type,linear,regression,shrinkage",
                        "display_url": "https://siberian.dev/regression/lasso-regression-normalization-and-polynomial-features"
                    },
                    {
                        "name": "LassoRegression_Normalize_PowerTransformer.ipynb",
                        "title": "Lasso Regression With Normalization And Power Transformer",
                        "description": "The regression analysis using Lasso Regression and the feature transformation technique Power Transformer in a pipeline Normalize separately. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_Normalize_PowerTransformer.ipynb",
                        "keywords": "regression,lasso,regression,datatranformationtechnique,power,transformer,pipeline,normalize,separately,lasso,stands,absolute,shrinkage,selection,operator,type,linear,regression,shrinkage",
                        "display_url": "https://siberian.dev/regression/lasso-regression-normalization-and-power-transformer"
                    },
                    {
                        "name": "LassoRegression_PolynomialFeatures.ipynb",
                        "title": "Lasso Regression With Polynomial Features",
                        "description": "The regression analysis using Lasso Regression and the feature rescaling technique Polynomial Features in a pipeline. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_PolynomialFeatures.ipynb",
                        "keywords": "regression,lasso,regression,rescalingtechnique,polynomial,s,pipeline,lasso,stands,absolute,shrinkage,selection,operator,type,linear,regression,shrinkage",
                        "display_url": "https://siberian.dev/regression/lasso-regression-polynomial-features"
                    },
                    {
                        "name": "LassoRegression_PowerTransformer.ipynb",
                        "title": "Lasso Regression With Power Transformer",
                        "description": "The regression analysis using Lasso Regression and the feature transformation technique PowerTransformer in a pipeline. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_PowerTransformer.ipynb",
                        "keywords": "regression,lasso,regression,datatranformationtechnique,powertransformer,pipeline,lasso,stands,absolute,shrinkage,selection,operator,type,linear,regression,shrinkage",
                        "display_url": "https://siberian.dev/regression/lasso-regression-power-transformer"
                    },
                    {
                        "name": "LassoRegression_QuantileTransformer.ipynb",
                        "title": "Lasso Regression With Quantile Transformer",
                        "description": "The regression analysis using Lasso Regression and the feature transformation technique QuantileTransformer in a pipeline. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_QuantileTransformer.ipynb",
                        "keywords": "regression,lasso,regression,datatranformationtechnique,quantiletransformer,pipeline,lasso,stands,absolute,shrinkage,selection,operator,type,linear,regression,shrinkage",
                        "display_url": "https://siberian.dev/regression/lasso-regression-quantile-transformer"
                    },
                    {
                        "name": "LassoRegression_RobustScaler.ipynb",
                        "title": "Lasso Regression With RobustScaler",
                        "description": "The regression analysis using a Lasso Regression and the feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_RobustScaler.ipynb",
                        "keywords": "regression,lasso,regression,rescalingtechnique,robustscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-regression-robustscaler"
                    },
                    {
                        "name": "LassoRegression_RobustScaler_PowerTransformer.ipynb",
                        "title": "Lasso Regression With RobustScaler And Power Transformer",
                        "description": "The regression analysis using the Lasso Regressor where rescaling method used is RobustScaler and feature transformation is done via PowerTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "regression,lasso,regressor,rescaling,method,robustscaler,datatranformation,powertransformer",
                        "display_url": "https://siberian.dev/regression/lasso-regresion-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "LassoRegression_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Lasso Regression With RobustScaler And Quantile Transformer",
                        "description": "The regression analysis using the Lasso Regressor where RobustScaler is used for feature rescaling technique and Quantile Transformer for feature transformation technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,lasso,regressor,robustscaler,rescalingtechnique,quantiletransformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-regression-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "LassoRegression_Scale.ipynb",
                        "title": "Lasso Regression With Scale",
                        "description": "The regression analysis using a Lasso Regression and the feature rescaling technique called Scale separately.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_Scale.ipynb",
                        "keywords": "regression,lasso,regression,rescalingtechnique,scale,separately",
                        "display_url": "https://siberian.dev/regression/lasso-regression-scale"
                    },
                    {
                        "name": "LassoRegression_Scale_PolynomialFeatures.ipynb",
                        "title": "Lasso Regression With Scale And Polynomial Features",
                        "description": "The regression analysis using Lasso Regression and the feature transformation technique Polynomial Features rescaling technique Scale in a pipeline. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_Scale_PolynomialFeatures.ipynb",
                        "keywords": "regression,lasso,regression,datatranformationtechnique,polynomial,s,rescalingtechnique,scale,pipeline,lasso,stands,absolute,shrinkage,selection,operator,type,linear,regression,shrinkage",
                        "display_url": "https://siberian.dev/regression/lasso-regression-scale-and-polynomial-features"
                    },
                    {
                        "name": "LassoRegression_Scale_PowerTransformer.ipynb",
                        "title": "Lasso Regression With Scale And Power Transformer",
                        "description": "The regression analysis using Lasso Regression, the feature transformation technique Power Transformer and rescaling technique Scale in a pipeline. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_Scale_PowerTransformer.ipynb",
                        "keywords": "regression,lasso,regression,datatranformationtechnique,power,transformer,rescalingtechnique,scale,pipeline,lasso,stands,absolute,shrinkage,selection,operator,type,linear,regression,shrinkage",
                        "display_url": "https://siberian.dev/regression/lasso-regression-scale-and-power-transformer"
                    },
                    {
                        "name": "LassoRegression_Scale_QuantileTransformer.ipynb",
                        "title": "Lasso Regression With Scale And Quantile Transformer",
                        "description": "The regression analysis using a Lasso Regressor and the feature rescaling technique Scale & feature transform QuantileTransformer Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_Scale_QuantileTransformer.ipynb",
                        "keywords": "regression,lasso,regressor,rescalingtechnique,scale,transform,quantiletransformer,s,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-regression-scale-and-quantile-transformer"
                    },
                    {
                        "name": "LassoRegression_StandardScaler.ipynb",
                        "title": "Lasso Regression With StandardScaler",
                        "description": "The regression analysis using a Lasso Regression and the feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_StandardScaler.ipynb",
                        "keywords": "regression,lasso,regression,rescalingtechnique,standardscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/lasso-regression-standardscaler"
                    },
                    {
                        "name": "LassoRegression_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Lasso Regression With StandardScaler And Polynomial Features",
                        "description": "The regression analysis using Lasso Regression and the feature rescaling technique Polynomial Features rescaling technique StandardScaler in a pipeline. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,lasso,regression,rescalingtechnique,polynomial,s,rescalingtechnique,standardscaler,pipeline,lasso,stands,absolute,shrinkage,selection,operator,type,linear,regression,shrinkage",
                        "display_url": "https://siberian.dev/regression/lasso-regression-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "LassoRegression_StandardScaler_PowerTransformer.ipynb",
                        "title": "Lasso Regression With StandardScaler And Power Transformer",
                        "description": "The regression analysis using Lasso Regression and the feature transformation technique PowerTransformer with standard scaling in a pipeline. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "regression,lasso,regression,datatranformationtechnique,powertransformer,standard,scaling,pipeline,lasso,stands,absolute,shrinkage,selection,operator,type,linear,regression,shrinkage",
                        "display_url": "https://siberian.dev/regression/lasso-regression-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "LassoRegression_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Lasso Regression With StandardScaler And Quantile Transformer",
                        "description": "The regression analysis using Lasso Regression and the feature transformation technique Quantile Transformer with standard scaling in a pipeline. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,lasso,regression,datatranformationtechnique,quantiletransformer,standard,scaling,pipeline,lasso,stands,absolute,shrinkage,selection,operator,type,linear,regression,shrinkage",
                        "display_url": "https://siberian.dev/regression/lasso-regression-standardscaler-and-quantile-transformer"
                    },
                    {
                        "name": "LinearRegression.ipynb",
                        "title": "Linear Regression",
                        "description": "The regression analysis using a simple Linear Regression. It is a linear approach to modeling the relationship between a scalar response and one or more explanatory variables.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression.ipynb",
                        "keywords": "regression,simple,linear,regression,linear,approach,modeling,relationship,scalar,response,explanatory,variables",
                        "display_url": "https://siberian.dev/regression/linear-regression"
                    },
                    {
                        "name": "LinearRegression_MinMaxScaler.ipynb",
                        "title": "Linear Regression With MinMaxScaler",
                        "description": "The regression analysis using a Linear Regression and feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_MinMaxScaler.ipynb",
                        "keywords": "regression,linear,regression,rescalingtechnique,minmaxscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-regression-minmaxscaler"
                    },
                    {
                        "name": "LinearRegression_Normalize.ipynb",
                        "title": "Linear Regression With Normalization",
                        "description": "The regression analysis using a Linear Regression and feature rescaling technique normalize.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_Normalize.ipynb",
                        "keywords": "regression,linear,regression,rescalingtechnique,normalize",
                        "display_url": "https://siberian.dev/regression/linear-regression-normalization"
                    },
                    {
                        "name": "LinearRegression_Normalize_PowerTransformer.ipynb",
                        "title": "Linear Regression With Normalization And Power Transformer",
                        "description": "The regression analysis using a simple Linear Regression where separate rescaling is done using Normalize and feature transformation is done using PowerTransformer in a pipeline. It is a linear approach to modeling the relationship between a scalar response and one or more explanatory variables.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_Normalize_PowerTransformer.ipynb",
                        "keywords": "regression,simple,linear,regression,rescaling,normalize,datatranformation,powertransformer,pipeline,linear,approach,modeling,relationship,scalar,response,explanatory,variables",
                        "display_url": "https://siberian.dev/regression/linear-regression-normalization-and-power-transformer"
                    },
                    {
                        "name": "LinearRegression_Normalize_QuantileTransformer.ipynb",
                        "title": "Linear Regression With Normalization And Quantile Transformer",
                        "description": "The regression analysis using a simple Linear Regression where separate rescaling is done using Normalize and feature transformation is done using QuantileTransformer in a pipeline. It is a linear approach to modeling the relationship between a scalar response and one or more explanatory variables.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_Normalize_QuantileTransformer.ipynb",
                        "keywords": "regression,simple,linear,regression,rescaling,normalize,datatranformation,quantiletransformer,pipeline,linear,approach,modeling,relationship,scalar,response,explanatory,variables",
                        "display_url": "https://siberian.dev/regression/linear-regression-normalization-and-quantile-transformer"
                    },
                    {
                        "name": "LinearRegression_PowerTransformer.ipynb",
                        "title": "Linear Regression With PowerTranformer",
                        "description": "The regression analysis using Linear Regression model and feature transformations using PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_PowerTransformer.ipynb",
                        "keywords": "regression,linear,regression,model,datatranformations,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-regression-power-tranformer"
                    },
                    {
                        "name": "LinearRegression_RobustScaler.ipynb",
                        "title": "Linear Regression With RobustScaler",
                        "description": "The regression analysis using Ridge Regression and feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_RobustScaler.ipynb",
                        "keywords": "regression,ridge,regression,rescalingtechnique,robustscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-regression-robustscaler"
                    },
                    {
                        "name": "LinearRegression_RobustScaler_PowerTransformer.ipynb",
                        "title": "Linear Regression With RobustScaler And Power Transformer",
                        "description": "The regression analysis using Linear Regression with feature rescaling technique called RobustScaler and feature transformation technique called Power Transformer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "regression,linear,regression,rescalingtechnique,robustscaler,datatranformationtechnique,power,transformer",
                        "display_url": "https://siberian.dev/regression/linear-regression-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "LinearRegression_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Linear Regression With RobustScaler And Quantile Transformer",
                        "description": "The regression analysis using Linear Regression with feature rescaling technique called RobustScaler and feature transformation technique called Quantile Transformer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,linear,regression,rescalingtechnique,robustscaler,datatranformationtechnique,quantiletransformer",
                        "display_url": "https://siberian.dev/regression/linear-regression-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "LinearRegression_Scale.ipynb",
                        "title": "Linear Regression With Scale",
                        "description": "The regression analysis using a Linear Regression and feature rescaling technique Scale.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_Scale.ipynb",
                        "keywords": "regression,linear,regression,rescalingtechnique,scale",
                        "display_url": "https://siberian.dev/regression/linear-regression-scale"
                    },
                    {
                        "name": "LinearRegression_Scale_PowerTransformer.ipynb",
                        "title": "Linear Regression With Scale And Power Transformer",
                        "description": "The regression analysis using a simple Linear Regression where separate rescaling is done using Scale and feature transformation is done using PowerTransformer in a pipeline. It is a linear approach to modeling the relationship between a scalar response and one or more explanatory variables.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_Scale_PowerTransformer.ipynb",
                        "keywords": "regression,simple,linear,regression,rescaling,scale,datatranformation,powertransformer,pipeline,linear,approach,modeling,relationship,scalar,response,explanatory,variables",
                        "display_url": "https://siberian.dev/regression/linear-regression-scale-and-power-transformer"
                    },
                    {
                        "name": "LinearRegression_StandardScaler.ipynb",
                        "title": "Linear Regression With StandardScaler",
                        "description": "The regression analysis using a Linear Regression and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_StandardScaler.ipynb",
                        "keywords": "regression,linear,regression,rescalingtechnique,standardscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-regression-standardscaler"
                    },
                    {
                        "name": "PassiveAggressiveRegressor.ipynb",
                        "title": "Passive Aggressive Regressor",
                        "description": "The regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor.ipynb",
                        "keywords": "regression,simple,passiveaggresiveregressor,passiveaggressive,s,passiveaggressive,s,s,largescale,learning",
                        "display_url": "https://siberian.dev/regression/passive-aggressive-regressor"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_MinMaxScaler.ipynb",
                        "title": "Passive Aggressive Regressor With MinMaxScaler",
                        "description": "The regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms and the feature rescaling technique used is MinMaxScaler in a pipeline. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_MinMaxScaler.ipynb",
                        "keywords": "regression,simple,passiveaggresiveregressor,passiveaggressive,s,rescalingtechnique,minmaxscaler,pipeline,passiveaggressive,s,s,largescale,learning",
                        "display_url": "https://siberian.dev/regression/passive-aggressive-regressor-minmaxscaler"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Passive Aggressive Regressor With MinMaxScaler And Polynomial Features",
                        "description": "The regression analysis using a PassiveAggressive Regression and the feature rescaling technique MinMaxScaler along with Polynomial Features as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,passiveaggressive,regression,rescalingtechnique,minmaxscaler,polynomial,s,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/passive-aggressive-regressor-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Passive Aggressive Regressor With MinMaxScaler And Power Transformer",
                        "description": "The regression analysis using a PassiveAggressive Regression and the feature rescaling technique MinMaxScaler along with Power Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "regression,passiveaggressive,regression,rescalingtechnique,minmaxscaler,power,transformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/passive-aggressive-regressor-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_Normalize.ipynb",
                        "title": "Passive Aggressive Regressor With Normalization",
                        "description": "The regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms and the feature rescaling technique used is Normalizer. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_Normalize.ipynb",
                        "keywords": "regression,simple,passiveaggresiveregressor,passiveaggressive,s,rescalingtechnique,normalizer,passiveaggressive,s,s,largescale,learning",
                        "display_url": "https://siberian.dev/regression/passive-aggressive-regressor-normalization"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_Normalize_PolynomialFeatures.ipynb",
                        "title": "Passive Aggressive Regressor With Normalization And Polynomial Features",
                        "description": "The regression analysis using a PassiveAggressive Regression and the feature rescaling technique Normalize along with Polynomial Features as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "regression,passiveaggressive,regression,rescalingtechnique,normalize,polynomial,s,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/passive-aggressive-regressor-normalization-and-polynomial-features"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_Normalize_QuantileTransformer.ipynb",
                        "title": "Passive Aggressive Regressor With Normalization And Quantile Transformer",
                        "description": "The regression analysis using a Passive Agressive Regressor and the feature rescaling technique normalize along with Quantile Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_Normalize_QuantileTransformer.ipynb",
                        "keywords": "regression,passive,agressive,regressor,rescalingtechnique,normalize,quantiletransformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/passive-aggressive-regressor-normalization-and-quantile-transformer"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_PolynomialFeatures.ipynb",
                        "title": "Passive Aggressive Regressor With Polynomial Features",
                        "description": "The regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms and the feature transformation technique used is PolynomialFeatures in a pipeline. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_PolynomialFeatures.ipynb",
                        "keywords": "regression,simple,passiveaggresiveregressor,passiveaggressive,s,datatranformationtechnique,polynomials,pipeline,passiveaggressive,s,s,largescale,learning",
                        "display_url": "https://siberian.dev/regression/passive-aggressive-regressor-polynomial-features"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_PowerTransformer.ipynb",
                        "title": "Passive Aggressive Regressor With Power Transformer",
                        "description": "The regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms and feature transformation technique Power Transformer. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_PowerTransformer.ipynb",
                        "keywords": "regression,simple,passiveaggresiveregressor,passiveaggressive,s,datatranformationtechnique,power,transformer,passiveaggressive,s,s,largescale,learning",
                        "display_url": "https://siberian.dev/regression/passive-aggressive-regressor-power-transformer"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_QuantileTransformer.ipynb",
                        "title": "Passive Aggressive Regressor With Quantile Transformer",
                        "description": "The regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms and feature transformation technique Quantile Transformer. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_QuantileTransformer.ipynb",
                        "keywords": "regression,simple,passiveaggresiveregressor,passiveaggressive,s,datatranformationtechnique,quantiletransformer,passiveaggressive,s,s,largescale,learning",
                        "display_url": "https://siberian.dev/regression/passive-aggressive-regressor-quantile-transformer"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_RobustScaler.ipynb",
                        "title": "Passive Aggressive Regressor With RobustScaler",
                        "description": "The regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms and the feature rescaling technique used is Robust Scaler in a pipeline. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_RobustScaler.ipynb",
                        "keywords": "regression,simple,passiveaggresiveregressor,passiveaggressive,s,rescalingtechnique,robust,scaler,pipeline,passiveaggressive,s,s,largescale,learning",
                        "display_url": "https://siberian.dev/regression/passive-aggressive-regressor-robustscaler"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_RobustScaler_PowerTransformer.ipynb",
                        "title": "Passive Aggressive Regressor With RobustScaler And Power Transformer",
                        "description": "The regression analysis using a PassiveAggressive Regression and the feature rescaling technique RobustScaler along with Power Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "regression,passiveaggressive,regression,rescalingtechnique,robustscaler,power,transformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/passive-aggressive-regressor-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Passive Aggressive Regressor With RobustScaler And Polynomial Features",
                        "description": "The regression analysis using a PassiveAggressive Regression and the feature rescaling technique RobustScaler along with Quantile Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,passiveaggressive,regression,rescalingtechnique,robustscaler,quantiletransformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/passive-aggressive-regressor-robustscaler-and-polynomial-features"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_Scale.ipynb",
                        "title": "Passive Aggressive Regressor With Scale",
                        "description": "The regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms and the feature rescaling technique used is Scale. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_Scale.ipynb",
                        "keywords": "regression,simple,passiveaggresiveregressor,passiveaggressive,s,rescalingtechnique,scale,passiveaggressive,s,s,largescale,learning",
                        "display_url": "https://siberian.dev/regression/passive-aggressive-regressor-scale"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_Scale_PolynomialFeatures.ipynb",
                        "title": "Passive Aggressive Regressor With Scale And Polynomial Features",
                        "description": "The regression analysis using the PassiveAggressive Regressor where rescaling method used is Scale and feature transformation is done via Polynomial Features.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_Scale_PolynomialFeatures.ipynb",
                        "keywords": "regression,passiveaggressive,regressor,rescaling,method,scale,datatranformation,polynomial,s",
                        "display_url": "https://siberian.dev/regression/passive-aggressive-regressor-scale-and-polynomial-features"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_Scale_PowerTransformer.ipynb",
                        "title": "Passive Aggressive Regressor With Scale And Power Transformer",
                        "description": "The regression analysis using the PassiveAggressive Regressor where rescaling method used is Scale and feature transformation is done via Power Transformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_Scale_PowerTransformer.ipynb",
                        "keywords": "regression,passiveaggressive,regressor,rescaling,method,scale,datatranformation,power,transformer",
                        "display_url": "https://siberian.dev/regression/passive-aggressive-regressor-scale-and-power-transformer"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_StandardScaler.ipynb",
                        "title": "Passive Aggressive Regressor With StandardScaler",
                        "description": "The regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms and the feature rescaling technique used is StandardScaler in a pipeline. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_StandardScaler.ipynb",
                        "keywords": "regression,simple,passiveaggresiveregressor,passiveaggressive,s,rescalingtechnique,standardscaler,pipeline,passiveaggressive,s,s,largescale,learning",
                        "display_url": "https://siberian.dev/regression/passive-aggressive-regressor-standardscaler"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "PassiveAggressiveRegressor With StandardScaler And Polynomial Features",
                        "description": "The regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms with the StandardScaler feature rescaling technique and the feature transformation technique used is PolynomialFeatures in a pipeline. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,simple,passiveaggresiveregressor,passiveaggressive,s,standardscaler,rescalingtechnique,datatranformationtechnique,polynomials,pipeline,passiveaggressive,s,s,largescale,learning",
                        "display_url": "https://siberian.dev/regression/passive-aggressive-regressor-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_StandardScaler_PowerTransformer.ipynb",
                        "title": "Passive Aggressive Regressor With StandardScaler And Power Transformer",
                        "description": "The regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms with StandardScaler as rescaling and feature transformation technique Power Transformer. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "regression,simple,passiveaggresiveregressor,passiveaggressive,s,standardscaler,rescaling,datatranformationtechnique,power,transformer,passiveaggressive,s,s,largescale,learning",
                        "display_url": "https://siberian.dev/regression/passive-aggressive-regressor-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Passive Aggressive Regressor With StandardScaler And Quantile Transformer",
                        "description": "The regression analysis using a PassiveAggressive Regression and the feature rescaling technique StandardScaler along with Quantile Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,passiveaggressive,regression,rescalingtechnique,standardscaler,quantiletransformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/passive-aggressive-regressor-standardscaler-and-quantile-transformer"
                    },
                    {
                        "name": "PoissonRegressor.ipynb",
                        "title": "Poisson Regression",
                        "description": "The regression analysis using a Poisson Regression and the feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor.ipynb",
                        "keywords": "regression,poisson,regression,rescalingtechnique,standardscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/poisson-regression"
                    },
                    {
                        "name": "PoissonRegressor_MinMaxScaler.ipynb",
                        "title": "Poisson Regression With MinMaxScaler",
                        "description": "The regression analysis using a Poisson Regression and the feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_MinMaxScaler.ipynb",
                        "keywords": "regression,poisson,regression,rescalingtechnique,minmaxscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/poisson-regression-minmaxscaler"
                    },
                    {
                        "name": "PoissonRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Poisson Regression With MinMaxScaler And Polynomial Features",
                        "description": "The regression analysis using the Poisson Regressor where rescaling method used is MinMaxScaler and feature transformation is done via Polynomial Features.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,poisson,regressor,rescaling,method,minmaxscaler,datatranformation,polynomial,s",
                        "display_url": "https://siberian.dev/regression/poisson-regression-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "PoissonRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Poisson Regression With MinMaxScaler And Power Transformer",
                        "description": "The regression analysis using Poisson Regressor where rescaling techniques and feature transformation techniques are used, MinMaxScaler and Power Transformer respectively.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "regression,poisson,regressor,rescaling,techniques,datatranformation,techniques,used,minmaxscaler,power,transformer,respectively",
                        "display_url": "https://siberian.dev/regression/poisson-regression-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "PoissonRegressor_normalize.ipynb",
                        "title": "Poisson Regression With Normalization",
                        "description": "The regression analysis using a Poisson Regression and the feature rescaling technique Normalizer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_normalize.ipynb",
                        "keywords": "regression,poisson,regression,rescalingtechnique,normalizer,pipeline",
                        "display_url": "https://siberian.dev/regression/poisson-regression-normalization"
                    },
                    {
                        "name": "PoissonRegressor_Normalize_PolynomialFeatures.ipynb",
                        "title": "PoissonRegressor With Normalization And Polynomial Features",
                        "description": "The regression analysis using Poisson Regressor with rescaling technique as Normalization and feature transformation technique as Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "regression,poisson,regressor,rescalingtechnique,normalization,datatranformationtechnique,polynomial,s,pipeline",
                        "display_url": "https://siberian.dev/regression/poisson-regression-normalization-and-polynomial-features"
                    },
                    {
                        "name": "PoissonRegressor_Normalize_QuantileTransformer.ipynb",
                        "title": "Poisson Regression With Normalization And Quantile Transformer",
                        "description": "The regression analysis using a PoissonRegressor and the feature rescaling technique normalize along with Quantile Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_Normalize_QuantileTransformer.ipynb",
                        "keywords": "regression,poissonregressor,rescalingtechnique,normalize,quantiletransformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/poisson-regression-normalization-and-quantile-transformer"
                    },
                    {
                        "name": "PoissonRegressor_PolynomialFeatures.ipynb",
                        "title": "Poisson Regression With Polynomial Features",
                        "description": "The regression analysis using a Poisson Regression and the feature rescaling technique Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_PolynomialFeatures.ipynb",
                        "keywords": "regression,poisson,regression,rescalingtechnique,polynomial,s,pipeline",
                        "display_url": "https://siberian.dev/regression/poisson-regression-polynomial-features"
                    },
                    {
                        "name": "PoissonRegressor_PowerTransformer.ipynb",
                        "title": "Poisson Regression With Power Transformer",
                        "description": "The regression analysis using Poisson Regressor and feature transformation via Power Transformer. This is a generalized Linear Model with a Poisson distribution.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_PowerTransformer.ipynb",
                        "keywords": "regression,poisson,regressor,datatranformation,power,transformer,generalized,linear,model,poisson,distribution",
                        "display_url": "https://siberian.dev/regression/poisson-regression-power-transformer"
                    },
                    {
                        "name": "PoissonRegressor_QuantileTransformer.ipynb",
                        "title": "Poisson Regression With Quantile Transformer",
                        "description": "The regression analysis using Poisson Regressor and feature transformation via Quantile Transformer. This is a generalized Linear Model with a Poisson distribution.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_QuantileTransformer.ipynb",
                        "keywords": "regression,poisson,regressor,datatranformation,quantiletransformer,generalized,linear,model,poisson,distribution",
                        "display_url": "https://siberian.dev/regression/poisson-regression-quantile-transformer"
                    },
                    {
                        "name": "PoissonRegressor_RobustScaler.ipynb",
                        "title": "Poisson Regression With RobustScaler",
                        "description": "The regression analysis using a Poisson Regression and the feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_RobustScaler.ipynb",
                        "keywords": "regression,poisson,regression,rescalingtechnique,robustscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/poisson-regression-robustscaler"
                    },
                    {
                        "name": "PoissonRegressor_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "Poisson Regression With RobustScaler And Polynomial Features",
                        "description": "The regression analysis using Poisson Regressor with rescaling technique as RobustScaler and feature transformation technique as Polynomial Features.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,poisson,regressor,rescalingtechnique,robustscaler,datatranformationtechnique,polynomial,s",
                        "display_url": "https://siberian.dev/regression/poisson-regression-robustscaler-and-polynomial-features"
                    },
                    {
                        "name": "PoissonRegressor_RobustScaler_PowerTransformer.ipynb",
                        "title": "Poisson Regression With RobustScaler And Power Transformer",
                        "description": "The regression analysis using Poisson Regressor with rescaling technique as RobustScaler and feature transformation technique as Power Transformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "regression,poisson,regressor,rescalingtechnique,robustscaler,datatranformationtechnique,power,transformer",
                        "display_url": "https://siberian.dev/regression/poisson-regression-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "PoissonRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Poisson Regression With RobustScaler And Quantile Transformer",
                        "description": "The regression analysis using Poisson Regressor with rescaling techniques as RobustScaler and feature transformation techniques as Quantile Transformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,poisson,regressor,rescaling,techniques,robustscaler,datatranformation,techniques,quantiletransformer",
                        "display_url": "https://siberian.dev/regression/poisson-regression-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "PoissonRegressor_scale.ipynb",
                        "title": "Poisson Regression With Scale",
                        "description": "The regression analysis using a Poisson Regression and the feature rescaling technique simple Scaling method along with a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_scale.ipynb",
                        "keywords": "regression,poisson,regression,rescalingtechnique,simple,scaling,method,pipeline",
                        "display_url": "https://siberian.dev/regression/poisson-regression-scale"
                    },
                    {
                        "name": "PoissonRegressor_Scale_PolynomialFeatures.ipynb",
                        "title": "Poisson Regression With Scale And Polynomial Features",
                        "description": "The regression analysis using a PoissonRegressor and the feature rescaling technique scale along with PolynomialFeatures as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_Scale_PolynomialFeatures.ipynb",
                        "keywords": "regression,poissonregressor,rescalingtechnique,scale,polynomials,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/poisson-regression-scale-and-polynomial-features"
                    },
                    {
                        "name": "PoissonRegressor_Scale_PowerTransformer.ipynb",
                        "title": "Poisson Regression With Scale And Power Transformer",
                        "description": "The regression analysis using a PoissonRegressor and the feature rescaling technique scale along with Power Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_Scale_PowerTransformer.ipynb",
                        "keywords": "regression,poissonregressor,rescalingtechnique,scale,power,transformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/poisson-regression-scale-and-power-transformer"
                    },
                    {
                        "name": "PoissonRegressor_StandardScaler.ipynb",
                        "title": "Poisson Regression With StandardScaler",
                        "description": "The regression analysis using a simple Poisson Regression. It is a generalized linear model and assumes the target variable has a Poisson distribution.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_StandardScaler.ipynb",
                        "keywords": "regression,simple,poisson,regression,generalized,linear,model,assumes,target,variable,poisson,distribution",
                        "display_url": "https://siberian.dev/regression/poisson-regression-standardscaler"
                    },
                    {
                        "name": "PoissonRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Poisson Regression With StandardScaler And Polynomial Features",
                        "description": "The regression analysis using Poisson Regressor and the feature rescaling technique Polynomial Features in a pipeline. This is a generalized Linear Model with a Poisson distribution.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,poisson,regressor,rescalingtechnique,polynomial,s,pipeline,generalized,linear,model,poisson,distribution",
                        "display_url": "https://siberian.dev/regression/poisson-regression-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "PoissonRegressor_StandardScaler_PowerTransformer.ipynb",
                        "title": "Poisson Regression With StandardScaler And Power Transformer",
                        "description": "The regression analysis using Poisson Regressor, StandardScaler as feature rescaling technique and Power Transformer as transformer in a pipeline. This is a generalized Linear Model with a Poisson distribution.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "regression,poisson,regressor,standardscaler,rescalingtechnique,power,transformer,transformer,pipeline,generalized,linear,model,poisson,distribution",
                        "display_url": "https://siberian.dev/regression/poisson-regression-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "PoissonRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Poisson Regression With StandardScaler And Quantile Transformer",
                        "description": "The regression analysis using Poisson Regressor, featuring scaling via StandardScaler and transformation via Quantile Transformer in a pipeline. This is a generalized Linear Model with a Poisson distribution.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,poisson,regressor,featuring,scaling,standardscaler,datatranformation,quantiletransformer,pipeline,generalized,linear,model,poisson,distribution",
                        "display_url": "https://siberian.dev/regression/poisson-regression-standardscaler-and-quantile-transformer"
                    },
                    {
                        "name": "PolynomialRegression.ipynb",
                        "title": "Polynomial Regression",
                        "description": "The regression analysis using a Polynomial Regression. Polynomial Regression can be performed in python using Polynomial Features along with Linear Regression in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PolynomialRegression.ipynb",
                        "keywords": "regression,polynomial,regression,polynomial,regression,performed,python,polynomial,s,linear,regression,pipeline",
                        "display_url": "https://siberian.dev/regression/polynomial-regression"
                    },
                    {
                        "name": "PolynomialRegression_MinMaxScaler.ipynb",
                        "title": "Polynomial Regression Using MinMaxScaler",
                        "description": "The regression analysis using Polynomial Regression and feature rescaling technique called MinMaxScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PolynomialRegression_MinMaxScaler.ipynb",
                        "keywords": "regression,polynomial,regression,rescalingtechnique,minmaxscaler",
                        "display_url": "https://siberian.dev/regression/polynomial-regression-minmaxscaler"
                    },
                    {
                        "name": "PolynomialRegression_Normalize.ipynb",
                        "title": "Polynomial Regression Using Normalization",
                        "description": "The regression analysis using Polynomial Regression and feature rescaling technique called Normalization separately",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PolynomialRegression_Normalize.ipynb",
                        "keywords": "regression,polynomial,regression,rescalingtechnique,normalization,separately",
                        "display_url": "https://siberian.dev/regression/polynomial-regression-normalization"
                    },
                    {
                        "name": "PolynomialRegression_RobustScaler.ipynb",
                        "title": "Polynomial Regression Using RobustScaler",
                        "description": "The regression analysis using Polynomial Regression and feature rescaling technique called RobustScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PolynomialRegression_RobustScaler.ipynb",
                        "keywords": "regression,polynomial,regression,rescalingtechnique,robustscaler",
                        "display_url": "https://siberian.dev/regression/polynomial-regression-robustscaler"
                    },
                    {
                        "name": "PolynomialRegression_Scale.ipynb",
                        "title": "Polynomial Regression Using Scale",
                        "description": "The regression analysis using Polynomial Regression and feature rescaling technique called Scale separately",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PolynomialRegression_Scale.ipynb",
                        "keywords": "regression,polynomial,regression,rescalingtechnique,scale,separately",
                        "display_url": "https://siberian.dev/regression/polynomial-regression-scale"
                    },
                    {
                        "name": "PolynomialRegression_StandardScaler.ipynb",
                        "title": "Polynomial Regression With StandardScaler",
                        "description": "The regression analysis using a Polynomial Regression and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PolynomialRegression_StandardScaler.ipynb",
                        "keywords": "regression,polynomial,regression,rescalingtechnique,standardscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/polynomial-regression-standardscaler"
                    },
                    {
                        "name": "RidgeRegression.ipynb",
                        "title": "Ridge Regression",
                        "description": "The regression analysis using simple Ridge Regression. Ridge Regression is also known as Tikhonov regularization",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression.ipynb",
                        "keywords": "regression,simple,ridge,regression,ridge,regression,tikhonov,regularization",
                        "display_url": "https://siberian.dev/regression/ridge-regression"
                    },
                    {
                        "name": "RidgeRegression_MinMaxScaler.ipynb",
                        "title": "Ridge Regression With MinMaxScaler",
                        "description": "The regression analysis using Ridge Regression and feature rescaling technique MiinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_MinMaxScaler.ipynb",
                        "keywords": "regression,ridge,regression,rescalingtechnique,miinmaxscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/ridge-regression-minmaxscaler"
                    },
                    {
                        "name": "RidgeRegression_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Ridge Regression With MinMaxScaler And Polynomial Features",
                        "description": "The regression analysis using Ridge Regression, feature rescaling technique MinMaxScaler and Polynomial Features feature transformation technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,ridge,regression,rescalingtechnique,minmaxscaler,polynomial,s,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/ridge-regression-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "RidgeRegression_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Ridge Regression With MinMaxScaler And Power Transformer",
                        "description": "The regression analysis using Ridge Regression and feature rescaling technique with MinMaxScaler & Power Transformer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "regression,ridge,regression,rescalingtechnique,minmaxscaler,power,transformer",
                        "display_url": "https://siberian.dev/regression/ridge-regression-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "RidgeRegression_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Ridge Regression With MinMaxScaler And Quantile Transformer",
                        "description": "The regression analysis using Ridge Regression, feature rescaling technique MinMaxScaler and Quantile Transformer feature transformation technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,ridge,regression,rescalingtechnique,minmaxscaler,quantiletransformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/ridge-regression-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "RidgeRegression_Normalize.ipynb",
                        "title": "Ridge Regression With Normalization",
                        "description": "The regression analysis using Ridge Regression and Normalize scaling",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_Normalize.ipynb",
                        "keywords": "regression,ridge,regression,normalize,scaling",
                        "display_url": "https://siberian.dev/regression/ridge-regression-normalization"
                    },
                    {
                        "name": "RidgeRegression_Normalize_PolynomialFeatures.ipynb",
                        "title": "Ridge Regression With Normalization And Polynomial Features",
                        "description": "The Regression tasks using RidgeClassifier with Polynomial Features as Feature Transformation Technique and feature rescaling technique Normalization.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "Regression,ridgeclassifier,polynomial,s,datatranformationtechnique,rescalingtechnique,normalization",
                        "display_url": "https://siberian.dev/regression/ridge-regression-normalization-and-polynomial-features"
                    },
                    {
                        "name": "RidgeRegression_Normalize_PowerTransformer.ipynb",
                        "title": "Ridge Regression With Normalization And Power Transformer",
                        "description": "The regression analysis using Ridge Regression and feature rescaling technique with Normalize & Power Transformer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_Normalize_PowerTransformer.ipynb",
                        "keywords": "regression,ridge,regression,rescalingtechnique,normalize,power,transformer",
                        "display_url": "https://siberian.dev/regression/ridge-regression-normalization-and-power-transformer"
                    },
                    {
                        "name": "RidgeRegression_PolynomialFeatures.ipynb",
                        "title": "Ridge Regression With Polynomial Features",
                        "description": "The regression analysis using Ridge Regression and feature rescaling technique Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_PolynomialFeatures.ipynb",
                        "keywords": "regression,ridge,regression,rescalingtechnique,polynomial,s,pipeline",
                        "display_url": "https://siberian.dev/regression/ridge-regression-polynomial-features"
                    },
                    {
                        "name": "RidgeRegression_PowerTransformer.ipynb",
                        "title": "Ridge Regression With Power Transformer",
                        "description": "The regression analysis using Ridge Regression and feature rescaling technique called PowerTransformer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_PowerTransformer.ipynb",
                        "keywords": "regression,ridge,regression,rescalingtechnique,powertransformer",
                        "display_url": "https://siberian.dev/regression/ridge-regression-power-transformer"
                    },
                    {
                        "name": "RidgeRegression_QuantileTransformer.ipynb",
                        "title": "Ridge Regression With Quantile Transformer",
                        "description": "The regression analysis using Ridge Regression and feature rescaling technique called Quantile Transformer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_QuantileTransformer.ipynb",
                        "keywords": "regression,ridge,regression,rescalingtechnique,quantiletransformer",
                        "display_url": "https://siberian.dev/regression/ridge-regression-quantile-transformer"
                    },
                    {
                        "name": "RidgeRegression_RobustScaler.ipynb",
                        "title": "Ridge Regression With RobustScaler",
                        "description": "The regression analysis using Ridge Regression and feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_RobustScaler.ipynb",
                        "keywords": "regression,ridge,regression,rescalingtechnique,robustscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/ridge-regression-robustscaler"
                    },
                    {
                        "name": "RidgeRegression_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "Ridge Regression With RobustScaler And Polynomial Features",
                        "description": "The regression analysis using simple Ridge Regression with Feature Rescaling technique RobustScaler and Feature Transformation technique PolynomialFeatures in a pipeline. Ridge Regression is also known as Tikhonov regularization.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,simple,ridge,regression,rescalingtechnique,robustscaler,datatranformationtechnique,polynomials,pipeline,ridge,regression,tikhonov,regularization",
                        "display_url": "https://siberian.dev/regression/ridge-regression-robustscaler-and-polynomial-features"
                    },
                    {
                        "name": "RidgeRegression_RobustScaler_PowerTransformer.ipynb",
                        "title": "Bayesian Ridge Regression With RobustScaler And Power Transformer",
                        "description": "The regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique RobustScaler and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "regression,simple,bayesian,ridge,regression,bayesian,regression,approach,rescalingtechnique,robustscaler,datatranformationtechnique,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/bayesian-ridge-regression-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "RidgeRegression_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Ridge Regression With RobustScaler And Quantile Transformer",
                        "description": "The regression analysis using Ridge Regression and feature rescaling techniquewith RobustScaler & Quantile Transformer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,ridge,regression,rescaling,techniquewith,robustscaler,quantiletransformer",
                        "display_url": "https://siberian.dev/regression/ridge-regression-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "RidgeRegression_Scale.ipynb",
                        "title": "Ridge Regression With Scale",
                        "description": "The regression analysis using Ridge Regression and Scale",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_Scale.ipynb",
                        "keywords": "regression,ridge,regression,scale",
                        "display_url": "https://siberian.dev/regression/ridge-regression-scale"
                    },
                    {
                        "name": "RidgeRegression_Scale_PolynomialFeatures.ipynb",
                        "title": "Ridge Regression With Scale And Polynomial Features",
                        "description": "The regression analysis using Ridge Regression and feature rescaling technique with Scale & Polynomial Features in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_Scale_PolynomialFeatures.ipynb",
                        "keywords": "regression,ridge,regression,rescalingtechnique,scale,polynomial,s,pipeline",
                        "display_url": "https://siberian.dev/regression/ridge-regression-scale-and-polynomial-features"
                    },
                    {
                        "name": "RidgeRegression_Scale_PowerTransformer.ipynb",
                        "title": "Ridge Regression With Scale And Power Transformer",
                        "description": "The regression analysis using simple Ridge Regression with Feature Rescaling technique Scale and Feature Transformation technique PowerTransformer in a pipeline. Ridge Regression is also known as Tikhonov regularization.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_Scale_PowerTransformer.ipynb",
                        "keywords": "regression,simple,ridge,regression,rescalingtechnique,scale,datatranformationtechnique,powertransformer,pipeline,ridge,regression,tikhonov,regularization",
                        "display_url": "https://siberian.dev/regression/ridge-regression-scale-and-power-transformer"
                    },
                    {
                        "name": "RidgeRegression_Scale_QuantileTransformer.ipynb",
                        "title": "Ridge Regression With Scale And Quantile Transformer",
                        "description": "The regression analysis using simple Ridge Regression where separate rescaling is done using Scale and feature transformation is done using Quantile Transformer in a pipeline. Ridge Regression is also known as Tikhonov regularization.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_Scale_QuantileTransformer.ipynb",
                        "keywords": "regression,simple,ridge,regression,rescaling,scale,datatranformation,quantiletransformer,pipeline,ridge,regression,tikhonov,regularization",
                        "display_url": "https://siberian.dev/regression/ridge-regression-scale-and-quantile-transformer"
                    },
                    {
                        "name": "RidgeRegression_StandardScaler.ipynb",
                        "title": "Ridge Regressor With StandardScaler",
                        "description": "The regression analysis using Ridge Regression and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_StandardScaler.ipynb",
                        "keywords": "regression,ridge,regression,rescalingtechnique,standardscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/ridge-regression-standardscaler"
                    },
                    {
                        "name": "RidgeRegression_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "RidgeRegression With StandardScaler And Polynomial Features",
                        "description": "The regression analysis using Ridge Regression and feature rescaling technique with StandardScaler & Polynomial Features",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,ridge,regression,rescalingtechnique,standardscaler,polynomial,s",
                        "display_url": "https://siberian.dev/regression/ridge-regression-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "RidgeRegression_StandardScaler_PowerTransformer.ipynb",
                        "title": "RidgeRegression With StandardScaler And Power Transformer",
                        "description": "The regression analysis using Ridge Regression and feature rescaling technique with StandardScaler & Power Transformer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "regression,ridge,regression,rescalingtechnique,standardscaler,power,transformer",
                        "display_url": "https://siberian.dev/regression/ridge-regression-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "RidgeRegression_StandardScaler_QuantileTransformer.ipynb",
                        "title": "RidgeRegression With StandardScaler And Quantile Transformer",
                        "description": "The regression analysis using Ridge Regression and feature rescaling techniquewith StandardScaler & Quantile Transformer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,ridge,regression,rescaling,techniquewith,standardscaler,quantiletransformer",
                        "display_url": "https://siberian.dev/regression/ridge-regression-standardscaler-and-quantile-transformer"
                    },
                    {
                        "name": "SGDRegressor.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression",
                        "description": "The regression analysis using the simple SGDRegressor based on the Stochastic Gradient Descent approach.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor.ipynb",
                        "keywords": "regression,simple,sgdregressor,stochastic,gradient,descent,approach",
                        "display_url": "https://siberian.dev/regression/sgd-regression"
                    },
                    {
                        "name": "SGDRegressor_MinMaxScaler.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression With MinMaxScaler",
                        "description": "The regression analysis using the SGDRegressor based on the Stochastic Gradient Descent approach and feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_MinMaxScaler.ipynb",
                        "keywords": "regression,sgdregressor,stochastic,gradient,descent,approach,rescalingtechnique,minmaxscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/sgd-regression-minmaxscaler"
                    },
                    {
                        "name": "SGDRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression With MinMaxScaler And Polynomial Features",
                        "description": "The regression analysis using the SGDRegressor with PolynomialFeatures as Feature Transformation Technique and MinMaxScaler for rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,sgdregressor,polynomials,datatranformationtechnique,minmaxscaler,rescalingtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/sgd-regression-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "SGDRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression With MinMaxScaler And Power Transformer",
                        "description": "The regression analysis using the SGDRegressor with PowerTransformer as Feature Transformation Technique and StandardScaler for rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "regression,sgdregressor,powertransformer,datatranformationtechnique,standardscaler,rescalingtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/sgd-regression-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "SGDRegressor_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression With MinMaxScaler And Quantile Transformer",
                        "description": "The regression analysis using the SGDRegressor where rescaling method used is MinMaxScaler and feature transformation is done using QuantileTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,sgdregressor,rescaling,method,minmaxscaler,datatranformation,quantiletransformer",
                        "display_url": "https://siberian.dev/regression/sgd-regression-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "SGDRegressor_Normalize.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression With Normalization",
                        "description": "The regression analysis using SGDRegressor based on the Stochastic Gradient Descent approach using feature scaling via Normalizer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_Normalize.ipynb",
                        "keywords": "regression,sgdregressor,stochastic,gradient,descent,approach,scaling,normalizer",
                        "display_url": "https://siberian.dev/regression/sgd-regression-normalization"
                    },
                    {
                        "name": "SGDRegressor_Normalize_PolynomialFeatures.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression  With Normalization And Polynomial Features",
                        "description": "The regression analysis using the SGDRegressor where feature normalization using normalize and feature transformation is done using PolynomialFeatures.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "regression,sgdregressor,normalization,normalize,datatranformation,polynomials",
                        "display_url": "https://siberian.dev/regression/sgd-regression-normalization-and-polynomial-features"
                    },
                    {
                        "name": "SGDRegressor_Normalize_PowerTransformer.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression  With Normalization And Power Transformer",
                        "description": "The regression analysis using the SGDRegressor where feature normalization using normalize and feature transformation is done using PowerTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_Normalize_PowerTransformer.ipynb",
                        "keywords": "regression,sgdregressor,normalization,normalize,datatranformation,powertransformer",
                        "display_url": "https://siberian.dev/regression/sgd-regression-normalization-and-power-transformer"
                    },
                    {
                        "name": "SGDRegressor_Normalize_QuantileTransformer.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression  With Normalization And Quantile Transformer",
                        "description": "The regression analysis using the SGDRegressor where feature normalization using normalize and feature transformation is done using QuantileTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_Normalize_QuantileTransformer.ipynb",
                        "keywords": "regression,sgdregressor,normalization,normalize,datatranformation,quantiletransformer",
                        "display_url": "https://siberian.dev/regression/sgd-regression-normalization-and-quantile-transformer"
                    },
                    {
                        "name": "SGDRegressor_PolynomialFeatures.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression With Polynomial Features",
                        "description": "The regression analysis using the SGDRegressor based on the Stochastic Gradient Descent approach and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_PolynomialFeatures.ipynb",
                        "keywords": "regression,sgdregressor,stochastic,gradient,descent,approach,datatranformationtechnique,polynomials,pipeline",
                        "display_url": "https://siberian.dev/regression/sgd-regression-polynomial-features"
                    },
                    {
                        "name": "SGDRegressor_PowerTransformer.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression With Power Transformer",
                        "description": "The regression analysis using the SGDRegressor where feature transformation is done using PowerTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_PowerTransformer.ipynb",
                        "keywords": "regression,sgdregressor,datatranformation,powertransformer",
                        "display_url": "https://siberian.dev/regression/sgd-regression-power-transformer"
                    },
                    {
                        "name": "SGDRegressor_QuantileTransformer.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression With Quantile Transformer",
                        "description": "The regression analysis using the SGDRegressor where feature transformation is done using QuantileTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_QuantileTransformer.ipynb",
                        "keywords": "regression,sgdregressor,datatranformation,quantiletransformer",
                        "display_url": "https://siberian.dev/regression/sgd-regression-quantile-transformer"
                    },
                    {
                        "name": "SGDRegressor_RobustScaler.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression With RobustScaler",
                        "description": "The regression analysis using the SGDRegressor based on the Stochastic Gradient Descent approach and feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_RobustScaler.ipynb",
                        "keywords": "regression,sgdregressor,stochastic,gradient,descent,approach,rescalingtechnique,robustscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/sgd-regression-robustscaler"
                    },
                    {
                        "name": "SGDRegressor_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression With RobustScaler And Polynomial Features",
                        "description": "The regression analysis using the SGDRegressor with PolynomialFeatures as Feature Transformation Technique and RobustScaler for rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,sgdregressor,polynomials,datatranformationtechnique,robustscaler,rescalingtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/sgd-regression-robustscaler-and-polynomial-features"
                    },
                    {
                        "name": "SGDRegressor_RobustScaler_PowerTransformer.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression With RobustScaler And Power Transformer",
                        "description": "The regression analysis using the SGDRegressor with PowerTransformer as Feature Transformation Technique and RobustScaler for rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "regression,sgdregressor,powertransformer,datatranformationtechnique,robustscaler,rescalingtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/sgd-regression-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "SGDRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression With RobustScaler And Quantile Transformer",
                        "description": "The regression analysis using the SGDRegressor with QuantileTransformer as Feature Transformation Technique and RobustScaler for rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,sgdregressor,quantiletransformer,datatranformationtechnique,robustscaler,rescalingtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/sgd-regression-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "SGDRegressor_Scale.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression With Scale",
                        "description": "The regression analysis using SGDRegressor based on the Stochastic Gradient Descent approach using feature scaling via Scale",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_Scale.ipynb",
                        "keywords": "regression,sgdregressor,stochastic,gradient,descent,approach,scaling,scale",
                        "display_url": "https://siberian.dev/regression/sgd-regression-scale"
                    },
                    {
                        "name": "SGDRegressor_Scale_PowerTransformer.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression With Scale And Power Transformer",
                        "description": "Regression analysis with data rescaling technique as Scale and Feature transformation technique as PowerTransformer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_Scale_PowerTransformer.ipynb",
                        "keywords": "regression,datarescalingtechnique,scale,datatranformationtechnique,powertransformer",
                        "display_url": "https://siberian.dev/regression/sgd-regression-scale-and-power-transformer"
                    },
                    {
                        "name": "SGDRegressor_Scale_QuantileTransformer.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression With Scale And Quantile Transformer",
                        "description": "The regression analysis using the simple SGDRegressor based on the Stochastic Gradient Descent approach with data rescaling technique Scale separately and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_Scale_QuantileTransformer.ipynb",
                        "keywords": "regression,simple,sgdregressor,stochastic,gradient,descent,approach,datarescalingtechnique,scale,separately,datatranformationtechnique,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/sgd-regression-scale-and-quantile-transformer"
                    },
                    {
                        "name": "SGDRegressor_StandardScaler.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression With StandardScaler",
                        "description": "The regression analysis using the SGDRegressor based on the Stochastic Gradient Descent approach and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_StandardScaler.ipynb",
                        "keywords": "regression,sgdregressor,stochastic,gradient,descent,approach,rescalingtechnique,standardscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/sgd-regression-standardscaler"
                    },
                    {
                        "name": "SGDRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression With StandardScaler And Polynomial Features",
                        "description": "The regression analysis using the SGDRegressor where rescaling method used is StandardScaler and feature transformation is done using PolynomialFeatures.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,sgdregressor,rescaling,method,standardscaler,datatranformation,polynomials",
                        "display_url": "https://siberian.dev/regression/sgd-regression-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "SGDRegressor_StandardScaler_PowerTransformer.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression With StandardScaler And Power Transformer",
                        "description": "The regression analysis using the SGDRegressor where rescaling method used is StandardScaler and feature transformation is done using PowerTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "regression,sgdregressor,rescaling,method,standardscaler,datatranformation,powertransformer",
                        "display_url": "https://siberian.dev/regression/sgd-regression-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "SGDRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Stochastic Gradient Descent (SGD) Regression With StandardScaler And Quantile Transformer",
                        "description": "The regression analysis using the SGDRegressor where rescaling method used is StandardScaler and feature transformation is done using QuantileTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,sgdregressor,rescaling,method,standardscaler,datatranformation,quantiletransformer",
                        "display_url": "https://siberian.dev/regression/sgd-regression-standardscaler-and-quantile-transformer"
                    }
                ]
            },
            {
                "name": "Other_Ensemble",
                "models": [
                    {
                        "name": "VotingRegressor.ipynb",
                        "title": "Voting Regressor",
                        "description": "The regression analysis using a VotingRegressor. It is an ensemble meta-estimator that fits several base regressors, each on the whole dataset. Then it averages the individual predictions to form a final prediction.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Other_Ensemble/VotingRegressor.ipynb",
                        "keywords": "regression,votingregressor,ensemble,metaestimator,fits,base,regressors,dataset,averages,individual,predictions,form,final,prediction",
                        "display_url": "https://siberian.dev/regression/voting-regressor"
                    }
                ]
            },
            {
                "name": "Radius_Neighbors",
                "models": [
                    {
                        "name": "RadiusNeighborsRegressor.ipynb",
                        "title": "Radius Neighbors Regressor",
                        "description": "The regression analysis using a simple Radius Neighbor Regressor. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor.ipynb",
                        "keywords": "regression,simple,radius,neighbor,regressor,implements,learning,neighbors,fixed,radius,training,point,floatingpoint,value,specified,user",
                        "display_url": "https://siberian.dev/regression/radius-neighbors-regressor"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_MinMaxScaler.ipynb",
                        "title": "Radius Neighbors Regressor With MinMaxScaler",
                        "description": "The regression analysis using a simple Radius Neighbor Regressor and feature rescaling technique MinMaxScaler in a pipeline. It implements learning based on the number of neighbors within a fixed radius 'r' of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_MinMaxScaler.ipynb",
                        "keywords": "regression,simple,radius,neighbor,regressor,rescalingtechnique,minmaxscaler,pipeline,implements,learning,neighbors,fixed,radius,training,point,floatingpoint,value,specified,user",
                        "display_url": "https://siberian.dev/regression/radius-neighbors-regressor-minmaxscaler"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Radius Neighbors Regressor With MinMaxScaler And Polynomial Features",
                        "description": "The regression analysis using a RadiusNeighbors Regression and the feature rescaling technique MinMaxScaler along with Polynomial Features as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,radiusneighbors,regression,rescalingtechnique,minmaxscaler,polynomial,s,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/radius-neighbors-regressor-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Radius Neighbors Regressor With MinMaxScaler And Power Transformer",
                        "description": "The regression analysis using a RadiusNeighbors Regression with MinMaxScaler for feature rescaling along with PowerTransformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "regression,radiusneighbors,regression,minmaxscaler,rescaling,powertransformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/radius-neighbors-regressor-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Radius Neighbors Regressor With MinMaxScaler And Quantile Transformer",
                        "description": "The regression analysis using a RadiusNeighbors Regression with MinMaxScaler for feature rescaling along with QuantileTransformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,radiusneighbors,regression,minmaxscaler,rescaling,quantiletransformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/radius-neighbors-regressor-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_Normalize.ipynb",
                        "title": "Radius Neighbors Regressor With Normalization",
                        "description": "The regression analysis using a simple Radius Neighbor Regressor and feature rescaling technique Normalizer. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_Normalize.ipynb",
                        "keywords": "regression,simple,radius,neighbor,regressor,rescalingtechnique,normalizer,implements,learning,neighbors,fixed,radius,training,point,floatingpoint,value,specified,user",
                        "display_url": "https://siberian.dev/regression/radius-neighbors-regressor-normalization"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_PolynomialFeatures.ipynb",
                        "title": "Radius Neighbors Regressor With Polynomial Features",
                        "description": "The regression analysis using a simple Radius Neighbor Regressor and feature transformation technique Polynomial Features in a pipeline. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_PolynomialFeatures.ipynb",
                        "keywords": "regression,simple,radius,neighbor,regressor,datatranformationtechnique,polynomial,s,pipeline,implements,learning,neighbors,fixed,radius,training,point,floatingpoint,value,specified,user",
                        "display_url": "https://siberian.dev/regression/radius-neighbors-regressor-polynomial-features"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_QuantileTransformer.ipynb",
                        "title": "Radius Neighbors Regressor With Quantile Transformer",
                        "description": "The regression analysis using a Radius Neighbors Regressor with feature transformation technique QuantileTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_QuantileTransformer.ipynb",
                        "keywords": "regression,radius,neighbors,regressor,datatranformationtechnique,quantiletransformer",
                        "display_url": "https://siberian.dev/regression/radius-neighbors-regressor-quantile-transformer"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_RobustScaler.ipynb",
                        "title": "Radius Neighbors Regressor With RobustScaler",
                        "description": "The regression analysis using a simple Radius Neighbor Regressor and feature rescaling technique RobustScaler in a pipeline. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_RobustScaler.ipynb",
                        "keywords": "regression,simple,radius,neighbor,regressor,rescalingtechnique,robustscaler,pipeline,implements,learning,neighbors,fixed,radius,training,point,floatingpoint,value,specified,user",
                        "display_url": "https://siberian.dev/regression/radius-neighbors-regressor-robustscaler"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_Scale.ipynb",
                        "title": "Radius Neighbors Regressor With Scale",
                        "description": "The regression analysis using a simple Radius Neighbor Regressor and feature rescaling technique Scale. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_Scale.ipynb",
                        "keywords": "regression,simple,radius,neighbor,regressor,rescalingtechnique,scale,implements,learning,neighbors,fixed,radius,training,point,floatingpoint,value,specified,user",
                        "display_url": "https://siberian.dev/regression/radius-neighbors-regressor-scale"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_StandardScaler.ipynb",
                        "title": "RadiusNeighborsRegressor With StandardScaler",
                        "description": "The regression analysis using a simple Radius Neighbor Regressor and feature rescaling technique StandardScaler in a pipeline. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_StandardScaler.ipynb",
                        "keywords": "regression,simple,radius,neighbor,regressor,rescalingtechnique,standardscaler,pipeline,implements,learning,neighbors,fixed,radius,training,point,floatingpoint,value,specified,user",
                        "display_url": "https://siberian.dev/regression/radius-neighbors-regressor-standardscaler"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Radius Neighbors Regressor With StandardScaler And Polynomial Features",
                        "description": "The regression analysis using a simple Radius Neighbor Regressor with the StandardScaler feature rescaling technique and the feature transformation technique used is PolynomialFeatures in a pipeline. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,simple,radius,neighbor,regressor,standardscaler,rescalingtechnique,datatranformationtechnique,polynomials,pipeline,implements,learning,neighbors,fixed,radius,training,point,floatingpoint,value,specified,user",
                        "display_url": "https://siberian.dev/regression/radius-neighbors-regressor-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_StandardScaler_PowerTransformer.ipynb",
                        "title": "Radius Neighbors Regressor With StandardScaler And Power Transformer",
                        "description": "The regression analysis using a HuberRegressor with feature transformation technique PolynomialFeatures and feature rescaling technique StandardScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "regression,huberregressor,datatranformationtechnique,polynomials,rescalingtechnique,standardscaler",
                        "display_url": "https://siberian.dev/regression/radius-neighbors-regressor-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Radius Neighbors Regressor With StandardScaler And Quantile Transformer",
                        "description": "The regression analysis using the RadiusNeighbors Regressor where rescaling method used is StandardScaler and feature transformation is done using QuantileTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,radiusneighbors,regressor,rescaling,method,standardscaler,datatranformation,quantiletransformer",
                        "display_url": "https://siberian.dev/regression/radius-neighbors-regressor-standardscaler-and-quantile-transformer"
                    }
                ]
            },
            {
                "name": "Random_Forest",
                "models": [
                    {
                        "name": "RandomForestRegressor.ipynb",
                        "title": "Random Forest Regression",
                        "description": "The regression analysis using a simple RandomForestRegressor based on the Ensemble Learning technique. It is a meta estimator that fits multiple decision trees and uses averaging to improve the predictive accuracy and control over-fitting.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Random_Forest/RandomForestRegressor.ipynb",
                        "keywords": "regression,simple,randomforestregressor,ensemble,learningtechnique,meta,estimator,fits,multiple,decision,trees,averaging,improve,predictive,accuracy,control,overfitting",
                        "display_url": "https://siberian.dev/regression/random-forest-regression"
                    },
                    {
                        "name": "RandomForestRegressor_MinMaxScaler.ipynb",
                        "title": "Random Forest Regression With MinMaxScaler",
                        "description": "The regression analysis using a RandomForestRegressor based on the Ensemble Learning technique using feature scaling via MinMaxScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Random_Forest/RandomForestRegressor_MinMaxScaler.ipynb",
                        "keywords": "regression,randomforestregressor,ensemble,learningtechnique,scaling,minmaxscaler",
                        "display_url": "https://siberian.dev/regression/random-forest-regression-minmaxscaler"
                    },
                    {
                        "name": "RandomForestRegressor_Normalize.ipynb",
                        "title": "Random Forest Regression With Normalization",
                        "description": "The regression analysis using a RandomForestRegressor based on the Ensemble Learning technique using feature scaling via Normalizer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Random_Forest/RandomForestRegressor_Normalize.ipynb",
                        "keywords": "regression,randomforestregressor,ensemble,learningtechnique,scaling,normalizer",
                        "display_url": "https://siberian.dev/regression/random-forest-regression-normalization"
                    },
                    {
                        "name": "RandomForestRegressor_RobustScaler.ipynb",
                        "title": "Random Forest Regression With RobustScaler",
                        "description": "The regression analysis using a RandomForestRegressor based on the Ensemble Learning technique using feature scaling via RobustScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Random_Forest/RandomForestRegressor_RobustScaler.ipynb",
                        "keywords": "regression,randomforestregressor,ensemble,learningtechnique,scaling,robustscaler",
                        "display_url": "https://siberian.dev/regression/random-forest-regression-robustscaler"
                    },
                    {
                        "name": "RandomForestRegressor_Scale.ipynb",
                        "title": "Random Forest Regression With Scale",
                        "description": "The regression analysis using a RandomForestRegressor based on the Ensemble Learning technique using feature scaling via scale",
                        "URL": "https://cdn.siberian.dev/code/Regression/Random_Forest/RandomForestRegressor_Scale.ipynb",
                        "keywords": "regression,randomforestregressor,ensemble,learningtechnique,scaling,scale",
                        "display_url": "https://siberian.dev/regression/random-forest-regression-scale"
                    },
                    {
                        "name": "RandomForestRegressor_StandardScaler.ipynb",
                        "title": "Random Forest Regression With StandardScaler",
                        "description": "The regression analysis using a RandomForestRegressor based on the Ensemble Learning technique using feature scaling via StandardScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Random_Forest/RandomForestRegressor_StandardScaler.ipynb",
                        "keywords": "regression,randomforestregressor,ensemble,learningtechnique,scaling,standardscaler",
                        "display_url": "https://siberian.dev/regression/random-forest-regression-standardscaler"
                    }
                ]
            },
            {
                "name": "Support_Vector_Machine",
                "models": [
                    {
                        "name": "LinearSVR.ipynb",
                        "title": "Linear Support Vector Regression",
                        "description": "The regression analysis using a simple Linear Support Vector Regressor(LinearSVR) based on the Support Vector Machine algorithm. It provides a faster implementation than SVR but only considers the linear kernel.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR.ipynb",
                        "keywords": "regression,simple,linear,support,vector,regressorlinearsvr,support,vector,machine,provides,faster,svr,considers,linear,kernel",
                        "display_url": "https://siberian.dev/regression/linear-svr"
                    },
                    {
                        "name": "LinearSVR_MinMaxScaler.ipynb",
                        "title": "Linear Support Vector Regression With MinMaxScaler",
                        "description": "The regression analysis using a Linear Support Vector Regressor(LinearSVR) based on the Support Vector Machine algorithm and feature rescaling technique MinMaxScaler in a pipeline. It provides a faster implementation than SVR but only considers the linear kernel.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_MinMaxScaler.ipynb",
                        "keywords": "regression,linear,support,vector,regressorlinearsvr,support,vector,machine,rescalingtechnique,minmaxscaler,pipeline,provides,faster,svr,considers,linear,kernel",
                        "display_url": "https://siberian.dev/regression/linear-svr-minmaxscaler"
                    },
                    {
                        "name": "LinearSVR_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Linear Support Vector Regression With MinMaxScaler And Polynomial Features",
                        "description": "The regression analysis using a Linear Support Vector Regressor(LinearSVR) based on the Support Vector Machine algorithm using MinMaxScaler and feature transformation technique Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,linear,support,vector,regressorlinearsvr,support,vector,machine,minmaxscaler,datatranformationtechnique,polynomial,s,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-svr-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "LinearSVR_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Linear Support Vector Regression With MinMaxScaler And Power Transformer",
                        "description": "The Regression task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with Power Transformer as Feature Transformation Technique and MinMaxScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "Regression,support,vector,regressor,svr,support,vector,machine,power,transformer,datatranformationtechnique,minmaxscaler,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-svr-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "LinearSVR_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Linear Support Vector Regression With MinMaxScaler And Quantile Transformer",
                        "description": "The Regression task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with Quantile Transformer as Feature Transformation Technique and MinMaxScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "Regression,support,vector,regressor,svr,support,vector,machine,quantiletransformer,datatranformationtechnique,minmaxscaler,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-svr-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "LinearSVR_Normalize.ipynb",
                        "title": "Linear Support Vector Regression With Normailzation",
                        "description": "The regression analysis using a Linear Support Vector Regressor(LinearSVR) based on the Support Vector Machine algorithm and feature rescaling technique Normalize in a pipeline. It provides a faster implementation than SVR but only considers the linear kernel.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_Normalize.ipynb",
                        "keywords": "regression,linear,support,vector,regressorlinearsvr,support,vector,machine,rescalingtechnique,normalize,pipeline,provides,faster,svr,considers,linear,kernel",
                        "display_url": "https://siberian.dev/regression/linear-svr-normailzation"
                    },
                    {
                        "name": "LinearSVR_Normalize_PolynomialFeatures.ipynb",
                        "title": "Linear Support Vector Regression With Normalization And Polynomial Features",
                        "description": "The regression analysis using a LinearSVR where separate rescaling is done using Normalize and feature transformation is done using PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "regression,linearsvr,rescaling,normalize,datatranformation,polynomials,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-svr-normalization-and-polynomial-features"
                    },
                    {
                        "name": "LinearSVR_Normalize_PowerTransformer.ipynb",
                        "title": "Linear Support Vector Regression With Normalization And Power Transformer",
                        "description": "The Regression task using Linear Support Vector Regression(LinearSVR) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique, rescaling technique normalization in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_Normalize_PowerTransformer.ipynb",
                        "keywords": "Regression,linear,support,vector,regressionlinearsvr,support,vector,machine,powertransformer,datatranformationtechnique,rescalingtechnique,normalization,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-svr-normalization-and-power-transformer"
                    },
                    {
                        "name": "LinearSVR_Normalize_QuantileTransformer.ipynb",
                        "title": "Linear Support Vector Regression With Normalization And Quantile Transformer",
                        "description": "The Regression task using Linear Support Vector Regression(LinearSVR) based on the Support Vector Machine algorithm with QuantileTransformer as Feature Transformation Technique, rescaling technique normalization in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_Normalize_QuantileTransformer.ipynb",
                        "keywords": "Regression,linear,support,vector,regressionlinearsvr,support,vector,machine,quantiletransformer,datatranformationtechnique,rescalingtechnique,normalization,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-svr-normalization-and-quantile-transformer"
                    },
                    {
                        "name": "LinearSVR_PolynomialFeatures.ipynb",
                        "title": "Linear Support Vector Regression With Polynomial Features",
                        "description": "The regression analysis using a Linear Support Vector Regressor(LinearSVR) based on the Support Vector Machine algorithm and feature transformation technique PolynomialFeatures in a pipeline. It provides a faster implementation than SVR but only considers the linear kernel.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_PolynomialFeatures.ipynb",
                        "keywords": "regression,linear,support,vector,regressorlinearsvr,support,vector,machine,datatranformationtechnique,polynomials,pipeline,provides,faster,svr,considers,linear,kernel",
                        "display_url": "https://siberian.dev/regression/linear-svr-polynomial-features"
                    },
                    {
                        "name": "LinearSVR_PowerTransformer.ipynb",
                        "title": "Linear Support Vector Regression With Power Transformer",
                        "description": "The Regression task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with Power Transformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_PowerTransformer.ipynb",
                        "keywords": "Regression,support,vector,regressor,svr,support,vector,machine,power,transformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-svr-power-transformer"
                    },
                    {
                        "name": "LinearSVR_QuantileTransformer.ipynb",
                        "title": "Linear Support Vector Regression With Quantile Transformer",
                        "description": "The Regression task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with Quantile Transformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_QuantileTransformer.ipynb",
                        "keywords": "Regression,support,vector,regressor,svr,support,vector,machine,quantiletransformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-svr-quantile-transformer"
                    },
                    {
                        "name": "LinearSVR_RobustScaler.ipynb",
                        "title": "Linear Support Vector Regression With RobustScaler",
                        "description": "The regression analysis using a Linear Support Vector Regressor(LinearSVR) based on the Support Vector Machine algorithm and feature rescaling technique RobustScaler in a pipeline. It provides a faster implementation than SVR but only considers the linear kernel.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_RobustScaler.ipynb",
                        "keywords": "regression,linear,support,vector,regressorlinearsvr,support,vector,machine,rescalingtechnique,robustscaler,pipeline,provides,faster,svr,considers,linear,kernel",
                        "display_url": "https://siberian.dev/regression/linear-svr-robustscaler"
                    },
                    {
                        "name": "LinearSVR_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "Linear Support Vector Regression With RobustScaler And Polynomial Features",
                        "description": "The regression analysis using a LinearSVR where separate rescaling is done using RobustScaler and feature transformation is done using PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,linearsvr,rescaling,robustscaler,datatranformation,polynomials,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-svr-robustscaler-and-polynomial-features"
                    },
                    {
                        "name": "LinearSVR_RobustScaler_PowerTransformer.ipynb",
                        "title": "Linear Support Vector Regression With RobustScaler And Power Transformer",
                        "description": "The Regression task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with Power Transformer as Feature Transformation Technique and RobustScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "Regression,support,vector,regressor,svr,support,vector,machine,power,transformer,datatranformationtechnique,robustscaler,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-svr-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "LinearSVR_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Linear Support Vector Regression With Quantile Transformer And RobustScaler",
                        "description": "The Regression task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with Quantile Transformer as Feature Transformation Technique and RobustScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "Regression,support,vector,regressor,svr,support,vector,machine,quantiletransformer,datatranformationtechnique,robustscaler,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-svr-regression-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "LinearSVR_Scale.ipynb",
                        "title": "Linear Support Vector Regression With Scale",
                        "description": "The regression analysis using a Linear Support Vector Regressor(LinearSVR) based on the Support Vector Machine algorithm and feature rescaling technique Scale in a pipeline. It provides a faster implementation than SVR but only considers the linear kernel.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_Scale.ipynb",
                        "keywords": "regression,linear,support,vector,regressorlinearsvr,support,vector,machine,rescalingtechnique,scale,pipeline,provides,faster,svr,considers,linear,kernel",
                        "display_url": "https://siberian.dev/regression/linear-svr-regression-scale"
                    },
                    {
                        "name": "LinearSVR_Scale_PolynomialFeatures.ipynb",
                        "title": "Linear Support Vector Regression With Scale And Polynomial Features",
                        "description": "The Regression task using Linear Support Vector Regression(LinearSVR) based on the Support Vector Machine algorithm with PolynomialFeatures as Feature Transformation Technique, rescaling technique scaling in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_Scale_PolynomialFeatures.ipynb",
                        "keywords": "Regression,linear,support,vector,regressionlinearsvr,support,vector,machine,polynomials,datatranformationtechnique,rescalingtechnique,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-svr-scale-and-polynomial-features"
                    },
                    {
                        "name": "LinearSVR_Scale_PowerTransformer.ipynb",
                        "title": "Linear Support Vector Regression With Scale And Power Transformer",
                        "description": "The regression analysis using a LinearSVR regressor where rescaling is done using Scale and feature transformation is done using Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_Scale_PowerTransformer.ipynb",
                        "keywords": "regression,linearsvr,regressor,rescaling,scale,datatranformation,power,transformer,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-svr-scale-and-power-transformer"
                    },
                    {
                        "name": "LinearSVR_Scale_QuantileTransformer.ipynb",
                        "title": "Linear Support Vector Regression With Scale And  Quantile Transformer",
                        "description": "The Regression task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with Quantile Transformer as Feature Transformation Technique and Scale for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_Scale_QuantileTransformer.ipynb",
                        "keywords": "Regression,support,vector,regressor,svr,support,vector,machine,quantiletransformer,datatranformationtechnique,scale,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-svr-scale-and-quantile-transformer"
                    },
                    {
                        "name": "LinearSVR_StandardScaler.ipynb",
                        "title": "Linear Support Vector Regression With StandardScaler",
                        "description": "The regression analysis using a Linear Support Vector Regressor(LinearSVR) based on the Support Vector Machine algorithm and feature rescaling technique StandardScaler in a pipeline. It provides a faster implementation than SVR but only considers the linear kernel.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_StandardScaler.ipynb",
                        "keywords": "regression,linear,support,vector,regressorlinearsvr,support,vector,machine,rescalingtechnique,standardscaler,pipeline,provides,faster,svr,considers,linear,kernel",
                        "display_url": "https://siberian.dev/regression/linear-svr-standardscaler"
                    },
                    {
                        "name": "LinearSVR_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Linear Support Vector Regression With StandardScaler And Polynomial Features",
                        "description": "The Regression task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with PolynomialFeatures as Feature Transformation Technique and Standard Scaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "Regression,support,vector,regressor,svr,support,vector,machine,polynomials,datatranformationtechnique,standard,scaler,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-svr-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "LinearSVR_StandardScaler_PowerTransformer.ipynb",
                        "title": "Linear Support Vector Regression With Power Transformer And StandardScaler",
                        "description": "The Regression task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with Power Transformer as Feature Transformation Technique and Standard Scaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "Regression,support,vector,regressor,svr,support,vector,machine,power,transformer,datatranformationtechnique,standard,scaler,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-svr-power-transformer-and-standardscaler"
                    },
                    {
                        "name": "LinearSVR_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Linear Support Vector Regression With Quantile Transformer And StandardScaler",
                        "description": "The Regression task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with Quantile Transformer as Feature Transformation Technique and Standard Scaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "Regression,support,vector,regressor,svr,support,vector,machine,quantiletransformer,datatranformationtechnique,standard,scaler,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/linear-svr-quantile-transformer-and-standardscaler"
                    },
                    {
                        "name": "NuSVR.ipynb",
                        "title": "Nu-Support Vector Regression(Nu-SVR)",
                        "description": "The regression analysis using a simple Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR.ipynb",
                        "keywords": "regression,simple,nusupport,vector,regressornusvr,support,vector,machine,",
                        "display_url": "https://siberian.dev/regression/nusvr"
                    },
                    {
                        "name": "NuSVR_MinMaxScaler.ipynb",
                        "title": "Nu-Support Vector Regression(Nu-SVR) With MinMaxScaler",
                        "description": "The regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm and the feature rescaling technique MinMaxScaler in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_MinMaxScaler.ipynb",
                        "keywords": "regression,nusupport,vector,regressornusvr,support,vector,machine,rescalingtechnique,minmaxscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/nusvr-minmaxscaler"
                    },
                    {
                        "name": "NuSVR_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Nu-Support Vector Regression(Nu-SVR) With MinMaxScaler And Polynomial Features",
                        "description": "The regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with PolynomialFeatures as Feature Transformation Technique and MinMaxScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,nusupport,vector,regressornusvr,support,vector,machine,polynomials,datatranformationtechnique,minmaxscaler,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/nusvr-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "NuSVR_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Nu-Support Vector Regression(Nu-SVR) With MinMaxScaler And Power Transformer",
                        "description": "The regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique and MinMaxScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "regression,nusupport,vector,regressornusvr,support,vector,machine,powertransformer,datatranformationtechnique,minmaxscaler,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/nusvr-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "NuSVR_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Nu-Support Vector Regression(Nu-SVR) With MinMaxScaler And Quantile Transformer",
                        "description": "The regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with Quantile Transformer as Feature Transformation Technique and MinMaxScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,nusupport,vector,regressornusvr,support,vector,machine,quantiletransformer,datatranformationtechnique,minmaxscaler,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/nusvr-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "NuSVR_Normalize.ipynb",
                        "title": "Nu-Support Vector Regression(Nu-SVR) With Normalization",
                        "description": "The regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm and the feature rescaling technique as Normalization",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_Normalize.ipynb",
                        "keywords": "regression,nusupport,vector,regressornusvr,support,vector,machine,rescalingtechnique,normalization",
                        "display_url": "https://siberian.dev/regression/nusvr-normalization"
                    },
                    {
                        "name": "NuSVR_Normalize_PolynomialFeatures.ipynb",
                        "title": "Nu-Support Vector Regression(Nu-SVR) With Normalization And Polynomial Features",
                        "description": "The regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with Polynomial Features as Feature Transformation Technique and Normalization for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "regression,nusupport,vector,regressornusvr,support,vector,machine,polynomial,s,datatranformationtechnique,normalization,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/nusvr-normalization-and-polynomial-features"
                    },
                    {
                        "name": "NuSVR_Normalize_QuantileTransformer.ipynb",
                        "title": "Nu-Support Vector Regression(Nu-SVR) With Normalization And Quantile Transformer",
                        "description": "The regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with QuantileTransformer as Feature Transformation Technique and Normalization for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_Normalize_QuantileTransformer.ipynb",
                        "keywords": "regression,nusupport,vector,regressornusvr,support,vector,machine,quantiletransformer,datatranformationtechnique,normalization,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/nusvr-normalization-and-quantile-transformer"
                    },
                    {
                        "name": "NuSVR_PowerTransformer.ipynb",
                        "title": "Nu-Support Vector Regression(Nu-SVR) With Power Transformer",
                        "description": "The regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_PowerTransformer.ipynb",
                        "keywords": "regression,nusupport,vector,regressornusvr,support,vector,machine,powertransformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/nusvr-power-transformer"
                    },
                    {
                        "name": "NuSVR_QuantileTransformer.ipynb",
                        "title": "Nu-Support Vector Regression(Nu-SVR) With Quantile Transformer",
                        "description": "The regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with Quantile Transformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_QuantileTransformer.ipynb",
                        "keywords": "regression,nusupport,vector,regressornusvr,support,vector,machine,quantiletransformer,datatranformationtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/nusvr-quantile-transformer"
                    },
                    {
                        "name": "NuSVR_RobustScaler.ipynb",
                        "title": "Nu-Support Vector Regression(Nu-SVR) With RobustScaler",
                        "description": "The regression analysis using the NuSVR Regressor where rescaling method used is RobustScale.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_RobustScaler.ipynb",
                        "keywords": "regression,nusvr,regressor,rescaling,method,robustscale",
                        "display_url": "https://siberian.dev/regression/nusvr-robustscaler"
                    },
                    {
                        "name": "NuSVR_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "Nu-Support Vector Regression(Nu-SVR) With RobustScaler And Polynomial Features",
                        "description": "The regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with Polynomial Features as Feature Transformation Technique and RobustScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,nusupport,vector,regressornusvr,support,vector,machine,polynomial,s,datatranformationtechnique,robustscaler,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/nusvr-robustscaler-and-polynomial-features"
                    },
                    {
                        "name": "NuSVR_RobustScaler_PowerTransformer.ipynb",
                        "title": "Nu-Support Vector Regression(Nu-SVR) With RobustScaler And Power Transformer",
                        "description": "The regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique and RobustScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "regression,nusupport,vector,regressornusvr,support,vector,machine,powertransformer,datatranformationtechnique,robustscaler,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/nusvr-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "NuSVR_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Nu-Support Vector Regression(Nu-SVR) With RobustScaler And Quantile Transformer",
                        "description": "The regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with QuantileTransformer as Feature Transformation Technique and RobustScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,nusupport,vector,regressornusvr,support,vector,machine,quantiletransformer,datatranformationtechnique,robustscaler,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/nusvr-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "NuSVR_Scale_PolynomialFeatures.ipynb",
                        "title": "Nu-Support Vector Regression(Nu-SVR) With Scale And Polynomial Features",
                        "description": "The regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm and the feature rescaling technique Scale & feature transform Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_Scale_PolynomialFeatures.ipynb",
                        "keywords": "regression,nusupport,vector,regressornusvr,support,vector,machine,rescalingtechnique,scale,transform,polynomial,s,pipeline",
                        "display_url": "https://siberian.dev/regression/nusvr-scale-and-polynomial-features"
                    },
                    {
                        "name": "NuSVR_Scale_PowerTransformer.ipynb",
                        "title": "Nu-Support Vector Regression(Nu-SVR) With Scale And Power Transformer",
                        "description": "The regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm and the feature rescaling technique Scale & feature transform Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_Scale_PowerTransformer.ipynb",
                        "keywords": "regression,nusupport,vector,regressornusvr,support,vector,machine,rescalingtechnique,scale,transform,power,transformer,pipeline",
                        "display_url": "https://siberian.dev/regression/nusvr-scale-and-power-transformer"
                    },
                    {
                        "name": "NuSVR_StandardScaler.ipynb",
                        "title": "Nu-Support Vector Regression(Nu-SVR) With StandardScaler",
                        "description": "The regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_StandardScaler.ipynb",
                        "keywords": "regression,nusupport,vector,regressornusvr,support,vector,machine,rescalingtechnique,standardscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/nusvr-standardscaler"
                    },
                    {
                        "name": "NuSVR_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Nu-Support Vector Regression(Nu-SVR) With StandardScaler And Polynomial Features",
                        "description": "The regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with PolynomialFeatures as Feature Transformation Technique and StandardScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,nusupport,vector,regressornusvr,support,vector,machine,polynomials,datatranformationtechnique,standardscaler,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/nusvr-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "NuSVR_StandardScaler_PowerTransformer.ipynb",
                        "title": "Nu-Support Vector Regression(Nu-SVR) With StandardScaler And Power Transformer",
                        "description": "The regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique and StandardScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "regression,nusupport,vector,regressornusvr,support,vector,machine,powertransformer,datatranformationtechnique,standardscaler,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/nusvr-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "NuSVR_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Nu-Support Vector Regression(Nu-SVR) With StandardScaler And Quantile Transformer",
                        "description": "The regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with Quantile Transformer as Feature Transformation Technique and StandardScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,nusupport,vector,regressornusvr,support,vector,machine,quantiletransformer,datatranformationtechnique,standardscaler,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/nusvr-standardscaler-and-quantile-transformer"
                    },
                    {
                        "name": "SVR.ipynb",
                        "title": "Support Vector Regression(SVR)",
                        "description": "The regression analysis using simple Support Vector Regressor(SVR) based on the Support Vector Machine algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR.ipynb",
                        "keywords": "regression,simple,support,vector,regressorsvr,support,vector,machine,",
                        "display_url": "https://siberian.dev/regression/svr"
                    },
                    {
                        "name": "SVR_MinMaxScaler.ipynb",
                        "title": "Support Vector Regression(SVR) With MinMaxScaler",
                        "description": "The regression analysis using Support Vector Regressor(SVR) based on the Support Vector Machine algorithm and feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_MinMaxScaler.ipynb",
                        "keywords": "regression,support,vector,regressorsvr,support,vector,machine,rescalingtechnique,minmaxscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/svr-minmaxscaler"
                    },
                    {
                        "name": "SVR_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Support Vector Regression(SVR) With MinMaxScaler And Polynomial Features",
                        "description": "The regression analysis using Support Vector Regressor(SVR) based on the Support Vector Machine algorithm with MinMaxScaler and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,support,vector,regressorsvr,support,vector,machine,minmaxscaler,datatranformationtechnique,polynomials,pipeline",
                        "display_url": "https://siberian.dev/regression/svr-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "SVR_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Support Vector Regression(SVR) With MinMaxScaler And Power Transformer",
                        "description": "The regression analysis using simple Support Vector Regressor(SVR) based on the Support Vector Machine algorithm with feature rescaling technique MinMaxScaler and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "regression,simple,support,vector,regressorsvr,support,vector,machine,rescalingtechnique,minmaxscaler,datatranformationtechnique,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/svr-minmaxscaler-and-power-transformer"
                    },
                    {
                        "name": "SVR_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Support Vector Regression(SVR) With MinMaxScaler And Quantile Transformer",
                        "description": "The regression analysis using simple Support Vector Regressor(SVR) based on the Support Vector Machine algorithm with feature rescaling technique MinMaxScaler and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,simple,support,vector,regressorsvr,support,vector,machine,rescalingtechnique,minmaxscaler,datatranformationtechnique,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/svr-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "SVR_Normalize.ipynb",
                        "title": "Support Vector Regression(SVR) With Normalization",
                        "description": "The regression analysis using Support Vector Regressor(SVR) based on the Support Vector Machine algorithm and feature rescaling technique Normalize.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_Normalize.ipynb",
                        "keywords": "regression,support,vector,regressorsvr,support,vector,machine,rescalingtechnique,normalize",
                        "display_url": "https://siberian.dev/regression/svr-normalization"
                    },
                    {
                        "name": "SVR_Normalize_PolynomialFeatures.ipynb",
                        "title": "Support Vector Regression(SVR) With Normalization And Polynomial Features",
                        "description": "The regression analysis using a SVR where separate rescaling is done using Normalize and feature transformation is done using PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "regression,svr,rescaling,normalize,datatranformation,polynomials,pipeline",
                        "display_url": "https://siberian.dev/regression/svr-normalization-and-polynomial-features"
                    },
                    {
                        "name": "SVR_Normalize_PowerTransformer.ipynb",
                        "title": "Support Vector Regression(SVR) With Normalization And Power Transformer",
                        "description": "The regression analysis using a SVR where separate rescaling is done using Normalize and feature transformation is done using PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_Normalize_PowerTransformer.ipynb",
                        "keywords": "regression,svr,rescaling,normalize,datatranformation,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/svr-normalization-and-power-transformer"
                    },
                    {
                        "name": "SVR_Normalize_QuantileTransformer.ipynb",
                        "title": "Support Vector Regression(SVR) With Normalization And Quantile Transformer",
                        "description": "The regression analysis using a SVR where separate rescaling is done using Normalize and feature transformation is done using QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_Normalize_QuantileTransformer.ipynb",
                        "keywords": "regression,svr,rescaling,normalize,datatranformation,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/svr-normalization-and-quantile-transformer"
                    },
                    {
                        "name": "SVR_PolynomialFeatures.ipynb",
                        "title": "Support Vector Regression(SVR) With Polynomial Features",
                        "description": "The regression analysis using Support Vector Regressor(SVR) based on the Support Vector Machine algorithm and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_PolynomialFeatures.ipynb",
                        "keywords": "regression,support,vector,regressorsvr,support,vector,machine,datatranformationtechnique,polynomials,pipeline",
                        "display_url": "https://siberian.dev/regression/svr-polynomial-features"
                    },
                    {
                        "name": "SVR_PowerTransformer.ipynb",
                        "title": "Support Vector Regression(SVR) With Power Transformer",
                        "description": "The regression analysis using Support Vector Regression(SVR) based on the Support Vector Machine algorithm and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_PowerTransformer.ipynb",
                        "keywords": "regression,support,vector,regressionsvr,support,vector,machine,datatranformationtechnique,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/svr-power-transformer"
                    },
                    {
                        "name": "SVR_QuantileTransformer.ipynb",
                        "title": "Support Vector Regression(SVR) With Quantile Transformer",
                        "description": "The regression analysis using Support Vector Regression(SVR) based on the Support Vector Machine algorithm and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_QuantileTransformer.ipynb",
                        "keywords": "regression,support,vector,regressionsvr,support,vector,machine,datatranformationtechnique,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/svr-quantile-transformer"
                    },
                    {
                        "name": "SVR_RobustScaler.ipynb",
                        "title": "Support Vector Regression(SVR) With RobustScaler",
                        "description": "The regression analysis using Support Vector Regressor(SVR) based on the Support Vector Machine algorithm and feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_RobustScaler.ipynb",
                        "keywords": "regression,support,vector,regressorsvr,support,vector,machine,rescalingtechnique,robustscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/svr-robustscaler"
                    },
                    {
                        "name": "SVR_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "Support Vector Regression(SVR) With RobustScaler And Polynomial Features",
                        "description": "The regression analysis using SVR and the feature transformation technique of Polynomial Feature and Robust Scaling rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "regression,svr,datatranformationtechnique,polynomial,robust,scaling,rescalingtechnique,pipeline",
                        "display_url": "https://siberian.dev/regression/svr-robustscaler-and-polynomial-features"
                    },
                    {
                        "name": "SVR_RobustScaler_PowerTransformer.ipynb",
                        "title": "Support Vector Regression(SVR) With RobustScaler And Power Transformer",
                        "description": "The regression analysis using simple Support Vector Regressor(SVR) based on the Support Vector Machine algorithm with feature rescaling technique RobustScaler and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "regression,simple,support,vector,regressorsvr,support,vector,machine,rescalingtechnique,robustscaler,datatranformationtechnique,powertransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/svr-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "SVR_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Support Vector Regression(SVR) With RobustScaler And Quantile Transformer",
                        "description": "The regression analysis using simple Support Vector Regressor(SVR) based on the Support Vector Machine algorithm with feature rescaling technique RobustScaler and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "regression,simple,support,vector,regressorsvr,support,vector,machine,rescalingtechnique,robustscaler,datatranformationtechnique,quantiletransformer,pipeline",
                        "display_url": "https://siberian.dev/regression/svr-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "SVR_Scale.ipynb",
                        "title": "Support Vector Regression(SVR) With Scale",
                        "description": "The regression analysis using Support Vector Regressor(SVR) based on the Support Vector Machine algorithm and feature rescaling technique Standardize using Scale function.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_Scale.ipynb",
                        "keywords": "regression,support,vector,regressorsvr,support,vector,machine,rescalingtechnique,standardize,scale,function",
                        "display_url": "https://siberian.dev/regression/svr-scale"
                    },
                    {
                        "name": "SVR_Scale_PolynomialFeatures.ipynb",
                        "title": "Support Vector Regression(SVR) With Scale And Polynomial Features",
                        "description": "The Regression task using Support Vector Regression(SVR) based on the Support Vector Machine algorithm with PolynomialFeatures as Feature Transformation Technique rescaling technique Scaling in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_Scale_PolynomialFeatures.ipynb",
                        "keywords": "Regression,support,vector,regressionsvr,support,vector,machine,polynomials,datatranformationtechnique,rescalingtechnique,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/svr-scale-and-polynomial-features"
                    },
                    {
                        "name": "SVR_Scale_PowerTransformer.ipynb",
                        "title": "Support Vector Regression(SVR) With Scale And Power Transformer",
                        "description": "The Regression task using Support Vector Regression(SVR) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique, rescaling technique Scaling in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_Scale_PowerTransformer.ipynb",
                        "keywords": "Regression,support,vector,regressionsvr,support,vector,machine,powertransformer,datatranformationtechnique,rescalingtechnique,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/svr-scale-and-power-transformer"
                    },
                    {
                        "name": "SVR_Scale_QuantileTransformer.ipynb",
                        "title": "Support Vector Regression(SVR) With Scale And Quantile Transformer",
                        "description": "The regression analysis using the SVR Regressor where rescaling method used is Scale and feature transformation is done via Quantile Transformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_Scale_QuantileTransformer.ipynb",
                        "keywords": "regression,svr,regressor,rescaling,method,scale,datatranformation,quantiletransformer",
                        "display_url": "https://siberian.dev/regression/svr-scale-and-quantile-transformer"
                    },
                    {
                        "name": "SVR_StandardScaler.ipynb",
                        "title": "Support Vector Regression(SVR) With StandardScaler",
                        "description": "The regression analysis using Support Vector Regressor(SVR) based on the Support Vector Machine algorithm and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_StandardScaler.ipynb",
                        "keywords": "regression,support,vector,regressorsvr,support,vector,machine,rescalingtechnique,standardscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/svr-standardscaler"
                    },
                    {
                        "name": "SVR_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Support Vector Regression(SVR) With StandardScaler And Polynomial Features",
                        "description": "The Regression task using Support Vector Regression(SVR) based on the Support Vector Machine algorithm with PolynomialFeatures as Feature Transformation Technique rescaling technique StandardScaler in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "Regression,support,vector,regressionsvr,support,vector,machine,polynomials,datatranformationtechnique,rescalingtechnique,standardscaler,pipeline",
                        "display_url": "https://siberian.dev/regression/svr-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "SVR_StandardScaler_PowerTransformer.ipynb",
                        "title": "Support Vector Regression(SVR) With StandardScaler And Power Transformer",
                        "description": "The regression analysis using a Support Vector Regressor(SVR) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique and StandardScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "regression,support,vector,regressorsvr,support,vector,machine,powertransformer,datatranformationtechnique,standardscaler,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/svr-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "SVR_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Support Vector Regression(SVR) With StandardScaler And Quantile Transformer",
                        "description": "The Regression task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with Quantile Transformer as Feature Transformation Technique and Standard Scaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "Regression,support,vector,regressor,svr,support,vector,machine,quantiletransformer,datatranformationtechnique,standard,scaler,scaling,pipeline",
                        "display_url": "https://siberian.dev/regression/svr-standardscaler-and-quantile-transformer"
                    }
                ]
            },
            {
                "name": "XGBoost",
                "models": [
                    {
                        "name": "XGBoostRegressor.ipynb",
                        "title": "Extreme Gradient Boosting Regression(XGBoost Regression)",
                        "description": "The regression analysis using XGBoostRegressor under the XGBoost framework. It is a decision Tree-based ensemble Machine Learning algorithm that uses a Gradient Boosting framework.",
                        "URL": "https://cdn.siberian.dev/code/Regression/XGBoost/XGBoostRegressor.ipynb",
                        "keywords": "regression,xgboostregressor,xgboost,framework,decision,treebased,ensemble,machinelearning,gradientboosting,framework",
                        "display_url": "https://siberian.dev/regression/xgboost-regression"
                    },
                    {
                        "name": "XGBoostRegressor_DMatrix.ipynb",
                        "title": "Extreme Gradient Boosting Regression(XGBoost Regression) Using DMatrix",
                        "description": "The regression analysis using XGBoost along with the DMatrix. DMatrix is an internal data structure that gets used by the XGBoost framework. It is optimized for both memory efficiency and training speed.",
                        "URL": "https://cdn.siberian.dev/code/Regression/XGBoost/XGBoostRegressor_DMatrix.ipynb",
                        "keywords": "regression,xgboost,dmatrix,dmatrix,internal,data,structure,xgboost,framework,optimized,memory,efficiency,training,speed",
                        "display_url": "https://siberian.dev/regression/xgboost-regression-using-dmatrix"
                    },
                    {
                        "name": "XGBoostRegressor_MinMaxScaler.ipynb",
                        "title": "Extreme Gradient Boosting Regression(XGBoost Regression) With MinMaxScaler",
                        "description": "The regression analysis using XGBoostRegressor under the XGBoost framework. It is a decision Tree-based ensemble Machine Learning algorithm that uses a Gradient Boosting framework.",
                        "URL": "https://cdn.siberian.dev/code/Regression/XGBoost/XGBoostRegressor_MinMaxScaler.ipynb",
                        "keywords": "regression,xgboostregressor,xgboost,framework,decision,treebased,ensemble,machinelearning,gradientboosting,framework",
                        "display_url": "https://siberian.dev/regression/xgboost-regression-minmaxscaler"
                    },
                    {
                        "name": "XGBoostRegressor_Normalize.ipynb",
                        "title": "Extreme Gradient Boosting Regression(XGBoost Regression) With Normalization",
                        "description": "The regression analysis using XGBoostRegressor under the XGBoost framework with feature rescaling technique Normalize. It is a decision Tree-based ensemble Machine Learning algorithm that uses a Gradient Boosting framework.",
                        "URL": "https://cdn.siberian.dev/code/Regression/XGBoost/XGBoostRegressor_Normalize.ipynb",
                        "keywords": "regression,xgboostregressor,xgboost,framework,rescalingtechnique,normalize,decision,treebased,ensemble,machinelearning,gradientboosting,framework",
                        "display_url": "https://siberian.dev/regression/xgboost-regression-normalization"
                    },
                    {
                        "name": "XGBoostRegressor_RobustScaler.ipynb",
                        "title": "Extreme Gradient Boosting Regression(XGBoost Regression) With RobustScaler",
                        "description": "The regression analysis using XGBoostRegressor under the XGBoost framework. It is a decision Tree-based ensemble Machine Learning algorithm that uses a Gradient Boosting framework.",
                        "URL": "https://cdn.siberian.dev/code/Regression/XGBoost/XGBoostRegressor_RobustScaler.ipynb",
                        "keywords": "regression,xgboostregressor,xgboost,framework,decision,treebased,ensemble,machinelearning,gradientboosting,framework",
                        "display_url": "https://siberian.dev/regression/xgboost-regression-robustscaler"
                    },
                    {
                        "name": "XGBoostRegressor_StandardScaler.ipynb",
                        "title": "Extreme Gradient Boosting Regression(XGBoost Regression) With StandardScaler",
                        "description": "The regression analysis using XGBoostRegressor with StandardScaler under the XGBoost framework. It is a decision Tree-based ensemble Machine Learning algorithm that uses a Gradient Boosting framework.",
                        "URL": "https://cdn.siberian.dev/code/Regression/XGBoost/XGBoostRegressor_StandardScaler.ipynb",
                        "keywords": "regression,xgboostregressor,standardscaler,xgboost,framework,decision,treebased,ensemble,machinelearning,gradientboosting,framework",
                        "display_url": "https://siberian.dev/regression/xgboost-regression-standardscaler"
                    }
                ]
            }
        ]
    },
    {
        "name": "Time_Series_Analysis",
        "image": "https://cdn.siberian.dev/code-gen/timeseries_blue.png",
        "description": "Learn trends in sequential data plotted on a time scale.",
        "models": [
            {
                "name": "Time_Series_Forecasting",
                "models": [
                    {
                        "name": "ARIMA.ipynb",
                        "title": "Auto-Regressive Integrated Moving Average(ARIMA)",
                        "description": "Time Series Analysis and Forecasting utilizing Auto-Regressive Integrated Moving Average( ARIMA) algorithm. ARIMA model is a combination of several differences already applied to the model to make it stationary, the number of previous lags along with residual errors to forecast future values.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/ARIMA.ipynb",
                        "keywords": "timeseriesforecasting,scientificpredictions,arima,auto-regressiveintegratedmovingaverage",
                        "display_url": "https://siberian.dev/time-series-analysis/arima"
                    },
                    {
                        "name": "ARIMAX.ipynb",
                        "title": "Autoregressive Integrated MovIng Average With Explanatory Variable(ARIMAX)",
                        "description": "Time Series Analysis and Forecasting to make scientific predictions based on historical time-stamped data with the help of the ARIMAX algorithm. An Autoregressive Integrated Moving Average with Explanatory Variable (ARIMAX) model can be viewed as a multiple regression model with one or more autoregressive (AR) terms and one or more moving average (MA) terms.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/ARIMAX.ipynb",
                        "keywords": "timeseriesforecasting,scientificpredictions,historicaltime,autoregressiveintegratedmovingaveragewithexplanatoryvariable,",
                        "display_url": "https://siberian.dev/time-series-analysis/arimax"
                    },
                    {
                        "name": "ARMA.ipynb",
                        "title": "Time series analysis Using AutoRegressive Moving Average",
                        "description": "Time Series Analysis and Forecasting to make scientific predictions based on historical time-stamped data using the AutoRegression MovingAverage algorithm. It is a model that is a combination of the AR and MA models. The impact of previous lags, along with the residuals, is considered for forecasting the future values of the time series.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/ARMA.ipynb",
                        "keywords": "timeseriesforecasting,scientificpredictions,historicaltime,autoregression,predictionsarma",
                        "display_url": "https://siberian.dev/time-series-analysis/time-series-analysis-using-autoregressive-moving-average"
                    },
                    {
                        "name": "AutoRegression.ipynb",
                        "title": "Time series analysis Using AutoRegression",
                        "description": "Time Series Analysis and Forecasting to make scientific predictions based on historical time-stamped data with the help of the AutoRegression algorithm to make predictions. The autoregressive model specifies that the output variable depends linearly on its previous values and a stochastic term. Thus, the model is in the form of a stochastic difference equation.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/AutoRegression.ipynb",
                        "keywords": "timeseriesforecasting,scientificpredictions,historicaltime,autoregression,predictions",
                        "display_url": "https://siberian.dev/time-series-analysis/time-series-analysis-using-autoregressive"
                    },
                    {
                        "name": "FbProphet.ipynb",
                        "title": "FbProphet",
                        "description": "Time Series Analysis and Forecasting with the help of the FbProphet algorithm. The prophet is a procedure for forecasting time series data based on an additive model where non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects. It works best with time series having strong seasonal effects and several seasons of historical data. Prophet is robust to missing data and shifts in the trend and typically handles outliers well.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/FbProphet.ipynb",
                        "keywords": "timeseriesforecasting,scientificpredictions,historicaltime,fbprophet,",
                        "display_url": "https://siberian.dev/time-series-analysis/fbprophet"
                    },
                    {
                        "name": "HoltWintersExponentialSmoothing.ipynb",
                        "title": "Holt Winters Exponential Smoothing",
                        "description": "Time Series Analysis and Forecasting to make scientific predictions based on historical time-stamped data with the help of Simple Holt-Winters Exponential Smoothing. Holt-Winters Exponential Smoothing is used for forecasting time series data that exhibits both a trend and a seasonal variation.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/HoltWintersExponentialSmoothing.ipynb",
                        "keywords": "timeseriesforecasting,scientificpredictions,historicaltime,simpleholt,exponentialsmoothing",
                        "display_url": "https://siberian.dev/time-series-analysis/holt-winters-exponential-smoothing"
                    },
                    {
                        "name": "MovingAverage.ipynb",
                        "title": "Time Series Analysis Using Moving Average",
                        "description": "Time Series Analysis and Forecasting with the help of the Moving Average algorithm to make predictions. The moving-average model specifies that the output variable is cross-correlated with a non-identical to itself a random variable.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/MovingAverage.ipynb",
                        "keywords": "timeseriesforecasting,scientificpredictions,historicaltime,stampeddata,",
                        "display_url": "https://siberian.dev/time-series-analysis/time-series-analysis-using-moving-average"
                    },
                    {
                        "name": "SARIMA.ipynb",
                        "title": "Seasonal Autoregressive Integrated Moving Average(SARIMA)",
                        "description": "Time Series Analysis and Forecasting to make scientific predictions based on historical time-stamped data with the help of the Seasonal Autoregressive Integrated Moving Average(SARIMA) algorithm. An extension to ARIMA that supports the direct modelling of the seasonal component of the series is called SARIMA.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/SARIMA.ipynb",
                        "keywords": "timeseriesforecasting,scientificpredictions,historical,time,stamped,data,help,sarima,seasonalautoregressiveintegratedmovingaverage,seasonaldata",
                        "display_url": "https://siberian.dev/time-series-analysis/sarima"
                    },
                    {
                        "name": "SARIMAX.ipynb",
                        "title": "Seasonal Auto-Regressive Integrated Moving Average With Exogenous Factors(SARIMAX)",
                        "description": "Time Series Analysis and Forecasting with the help of the Seasonal Auto-Regressive Integrated Moving Average with eXogenous factors(SARIMAX) algorithm. It can also deal with external effects. This feature of the model differs from other models",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/SARIMAX.ipynb",
                        "keywords": "timeseriesforecasting,scientificpredictions,historicaltime,stampeddata,sarimax,seasonalauto-regressiveintegratedmovingaveragewithexogenousfactors",
                        "display_url": "https://siberian.dev/time-series-analysis/sarimax"
                    },
                    {
                        "name": "Simple_Exponential_Smoothing.ipynb",
                        "title": "Simple Exponential Smoothing",
                        "description": "Time Series Analysis and Forecasting with the help of Exponential Smoothing. Exponential smoothing is a time series forecasting method for univariate data that can be extended to support data with a systematic trend or seasonal component. It is a powerful forecasting method as an alternative to the popular Box-Jenkins ARIMA family of methods.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/Simple_Exponential_Smoothing.ipynb",
                        "keywords": "timeseriesforecasting,scientificpredictions,historicaltime,simpleexponentialsmoothing",
                        "display_url": "https://siberian.dev/time-series-analysis/simple-exponential-smoothing"
                    },
                    {
                        "name": "VAR.ipynb",
                        "title": "Vector Autoregression(VAR)",
                        "description": "Time Series Analysis and Forecasting to make scientific predictions based on historical time stamped data with the help of Vector Autoregression(VAR) algorithm.Vector autoregression (VAR) is a statistical model used to capture the relationship between multiple quantities as they change over time.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/VAR.ipynb",
                        "keywords": "timeseriesforecasting,scientificpredictions,historicaltime,stamped,var,vectorautoregression",
                        "display_url": "https://siberian.dev/time-series-analysis/vector-autoregression"
                    },
                    {
                        "name": "VARMA.ipynb",
                        "title": "Vector Autoregressive Moving-Average(VARMA)",
                        "description": "Time Series Analysis and Forecasting to make scientific predictions based on historical time-stamped data with the help of the Vector Autoregressive Moving Average(VARMA) algorithm. The Vector Autoregressive Moving Average(VARMA) model is a combination of VAR and VMA models that helps in multivariate time series modeling by considering both lag order and order of moving average (p and q)in the model.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/VARMA.ipynb",
                        "keywords": "timeseriesforecasting,scientificpredictions,historicaltime,stampeddata,varma,,vectorautoregressivemovingaverage",
                        "display_url": "https://siberian.dev/time-series-analysis/vector-autoregressive-moving-average"
                    },
                    {
                        "name": "VARMAX.ipynb",
                        "title": "Vector Autoregressive Moving Average Model With Exogenous Variables(VARMAX)",
                        "description": "Time Series Analysis and Forecasting to make scientific predictions based on historical time-stamped data with the help of the Vector Autoregressive Moving Average model with exogenous variables(VARMAX) algorithm. The model includes both the dynamic relationship between the multiple response variables and the relationship between the dependent and independent variables.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/VARMAX.ipynb",
                        "keywords": "timeseriesforecasting,scientificpredictions,historicaltime,stampeddata,varmax,vectorautoregressivemovingaveragemodelwithexogenousvariables,",
                        "display_url": "https://siberian.dev/time-series-analysis/varmax"
                    }
                ]
            }
        ]
    }
]