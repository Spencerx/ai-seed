[
    {
        "name": "Anomaly_Detection",
        "image": "https://cdn.siberian.dev/code-gen/anomaly_detection_blue.png",
        "description": "technique of identifying rare events or observations which can raise suspicions by being statistically different from the rest of the observations.",
        "models": [
            {
                "name": "Angle_Based_Outlier_Detector",
                "models": [
                    {
                        "name": "ABOD.ipynb",
                        "title": "Angle Based Outlier Detection",
                        "description": "This code template is for Anomaly detection/outlier analysis using the Angle Based Outlier Detector(ABOD) Algorithm implemented using the pyod library in python.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Angle_Based_Outlier_Detector/ABOD.ipynb",
                        "keywords": "code template, anomaly detection, outlier analysis, Angle based Outlier Detector, pyod,ABOD",
                        "display_url": "https://siberian.dev/anomaly-detection/abod"
                    },
                    {
                        "name": "ABOD_MinMaxScaler.ipynb",
                        "title": "Angle-Based Outlier Detection with MinMaxScaler",
                        "description": "This code template uses Angle based Outlier Detection (ABOD) Algorithm for Anomaly Detection along with MinMaxScaler as the Data scaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Angle_Based_Outlier_Detector/ABOD_MinMaxScaler.ipynb",
                        "keywords": "code template, anomaly detection, outlier analysis,Angle based Outlier Detector,pyod, minmaxscaler, data rescaling technique,ABOD",
                        "display_url": "https://siberian.dev/anomaly-detection/abod-minmaxscaler"
                    },
                    {
                        "name": "ABOD_RobustScaler.ipynb",
                        "title": "Angle-Based Outlier Detection with Robust Scaler",
                        "description": "This code template illustrates Anomaly / Outlier Detection using the Angle based Outlier Detector(ABOD) Algorithm. The implementation also uses Robust Scaler from the sci-kit learn library as the feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Angle_Based_Outlier_Detector/ABOD_RobustScaler.ipynb",
                        "keywords": "code template,anomaly detection, outlier detection,Angle based Outlier Detector, pyod, robust scaler, rescaling technique,sci-kit learn,ABOD",
                        "display_url": "https://siberian.dev/anomaly-detection/abod-robust-scaler"
                    }
                ]
            },
            {
                "name": "Auto_Encoder",
                "models": [
                    {
                        "name": "AutoEncoder.ipynb",
                        "title": "Autoencoder",
                        "description": "This code template is for Anomaly detection using the Auto Encoder Algorithm. The pyod library's python implementation of Auto Encoder uses Neural Network  Architecture for Anomaly or outlier detection.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Auto_Encoder/AutoEncoder.ipynb",
                        "keywords": "code template,anomaly detection, outlier analysis,auto encoder,auto encoder, pyod,Neural Network",
                        "display_url": "https://siberian.dev/anomaly-detection/autoencoder"
                    },
                    {
                        "name": "AutoEncoder_MaxAbsScaler.ipynb",
                        "title": "Autoencoder with MaxAbsScaler",
                        "description": "This code template is for Anomaly detection/outlier analysis using the Auto Encoder Algorithm, along with data rescaling using MaxAbsScaler. MaxAbsScaler scale each feature by its maximum absolute value.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Auto_Encoder/AutoEncoder_MaxAbsScaler.ipynb",
                        "keywords": "code template, anomaly detection, auto encoder ,pyod,data rescaling,maxabsscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/autoencoder-maxabsscaler"
                    },
                    {
                        "name": "AutoEncoder_StandardScaler.ipynb",
                        "title": "Autoencoder with StandardScaler",
                        "description": "This code template is for outlier analysis or anomaly detection using the Auto Encoder Architecture . This template utilizes Auto Encoder along with data rescaling using StandardScaler from the sci-kit learn library.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Auto_Encoder/AutoEncoder_StandardScaler.ipynb",
                        "keywords": "code template, anomaly detection, auto encoder, pyod,data rescaling,standard scaler,sci-kit learn,sklearn",
                        "display_url": "https://siberian.dev/anomaly-detection/autoencoder-standardscaler"
                    }
                ]
            },
            {
                "name": "Clustering_Based_Local_Outlier_Factor",
                "models": [
                    {
                        "name": "CBLOF.ipynb",
                        "title": "Clustering Based Local Outlier Factor",
                        "description": "This code template is for Anomaly detection or outlier analysis using the Clustering Based Local Outlier Factor(CBLOF) Algorithm implemented in pyod library for python  .",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Clustering_Based_Local_Outlier_Factor/CBLOF.ipynb",
                        "keywords": "code template, anomaly detection, cblof, pyod, Clustering Based Local Outlier Factor",
                        "display_url": "https://siberian.dev/anomaly-detection/clustering-based-outlier-detection"
                    },
                    {
                        "name": "CBLOF_MinMaxScaler.ipynb",
                        "title": "Clustering Based Local Outlier Factor with MinMaxScaler",
                        "description": "This code template is for Outlier analysis or Detection using the CBLOF(Clustering Based Local Outlier Factor Algorithm) and feature rescaling technique using MinMaxScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Clustering_Based_Local_Outlier_Factor/CBLOF_MinMaxScaler.ipynb",
                        "keywords": "code template, anomaly detection, cblof,pyod, rescaling technique, minmaxscaler,Clustering Based Local Outlier Factor",
                        "display_url": "https://siberian.dev/anomaly-detection/clustering-based-outlier-detection-minmaxscaler"
                    },
                    {
                        "name": "CBLOF_RobustScaler.ipynb",
                        "title": "Clustering Based Local Outlier Factor with RobustScaler",
                        "description": "This code template is for Anomaly detection or outlier analysis using the Clustering Based Local Outlier Factor(CBLOF) Algorithm. The demonstration also illustrates data rescaling using RobustScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Clustering_Based_Local_Outlier_Factor/CBLOF_RobustScaler.ipynb",
                        "keywords": "code template, anomaly detection,outlier analysis,cblof, pyod, rescaling technique, robustscaler,Clustering Based Local Outlier Factor,Data engineering",
                        "display_url": "https://siberian.dev/anomaly-detection/clustering-based-outlier-detection-robustscaler"
                    }
                ]
            },
            {
                "name": "Copula_Based_Outlier_Detector",
                "models": [
                    {
                        "name": "COPOD.ipynb",
                        "title": "Copula Based Outlier Detection",
                        "description": "This code template is for Anomaly detection or outlier analysis using the Copula Based Outlier Detector(COPOD) Algorithm. COPOD is a parameter-free, highly interpretable outlier detection algorithm based on empirical copula models.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Copula_Based_Outlier_Detector/COPOD.ipynb",
                        "keywords": "code template, anomaly detection,copod,pyod,empirical copula models",
                        "display_url": "https://siberian.dev/anomaly-detection/copod"
                    },
                    {
                        "name": "COPOD_MaxAbsScaler.ipynb",
                        "title": "Copula Based Outlier Detection with MaxAbsScaler",
                        "description": "This code template is for Anomaly detection/outlier analysis using the Copula Based Outlier Detector Algorithm based on empirical copula models. This python implementation utilizes the data rescaling technique using the MaxAbsScaler method from the sci-kit learn.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Copula_Based_Outlier_Detector/COPOD_MaxAbsScaler.ipynb",
                        "keywords": "code template, anomaly detection, analysis,copod, pyod, data rescaling, maxabsscaler,sci-kit learn",
                        "display_url": "https://siberian.dev/anomaly-detection/copula-based-outlier-detection-maxabsscaler"
                    },
                    {
                        "name": "COPOD_RobustScaler.ipynb",
                        "title": "Copula Based Outlier Detection with RobustScaler",
                        "description": "This code template is for Anomaly detection/outlier analysis using the Copula Based Outlier Detector(COPOD) Algorithm implemented using the pyod library along with feature scaling using RobustScalar, which scale features using statistics that are robust to outliers.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Copula_Based_Outlier_Detector/COPOD_RobustScaler.ipynb",
                        "keywords": "code template, anomaly detection,copod, pyod, scaling,robustscalar",
                        "display_url": "https://siberian.dev/anomaly-detection/copula-based-outlier-detection-robustscaler"
                    },
                    {
                        "name": "COPOD_StandardScaler.ipynb",
                        "title": "Copula Based Outlier Detection with StandardScaler",
                        "description": "Following is a demonstration of Anomaly detection or outlier analysis using the Copula Based Outlier Detector(COPOD) Algorithm implementation of the pyod library. Along with it includes the feature scaling technique StandardScaler for data rescaling.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Copula_Based_Outlier_Detector/COPOD_StandardScaler.ipynb",
                        "keywords": "code template, anomaly detection,copod,pyod, scaling,standardscaler,data rescaling",
                        "display_url": "https://siberian.dev/anomaly-detection/copula-based-outlier-detection-standardscaler"
                    }
                ]
            },
            {
                "name": "Deep_One_Class_Classification",
                "models": [
                    {
                        "name": "DeepSVDD.ipynb",
                        "title": "Deep One-Class Classification",
                        "description": "This code template is for Anomaly detection using the DeepSVDD Algorithm implemented using the PyOd library. Deep One-Class Classifier with AutoEncoder (AE) is a type of neural network for learning useful data representations in an unsupervised way.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Deep_One_Class_Classification/DeepSVDD.ipynb",
                        "keywords": "code template, anomaly detection, deepsvdd, pyod,Deep One-Class Classifier",
                        "display_url": "https://siberian.dev/anomaly-detection/deep-one-class-classification"
                    },
                    {
                        "name": "DeepSVDD_MaxAbsScaler.ipynb",
                        "title": "Deep One-Class Classification with MaxAbsScaler",
                        "description": "This code template illustrates Anomaly detection using the DeepSVDD Algorithm implementation of the PyOd library. DeepSVDD trains a neural network while minimizing the volume of a hypersphere that encloses the network representations of the data, forcing the network to extract the common factors of variation. Along with the Data rescaling technique, MaxAbsScaler from sci-kit learn.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Deep_One_Class_Classification/DeepSVDD_MaxAbsScaler.ipynb",
                        "keywords": "code template, anomaly detection, deepsvdd,pyod, scaling,maxabsscaler,Deep One-Class Classifier,data rescaling, neural network",
                        "display_url": "https://siberian.dev/anomaly-detection/deep-one-class-classification-maxabsscaler"
                    },
                    {
                        "name": "DeepSVDD_MinMaxScaler.ipynb",
                        "title": "Deep One-Class Classification with MinMaxScaler",
                        "description": "This code template is for Anomaly detection/outlier analysis using the Deep One-Class Classification. This template utilizes feature scaling using MinMaxScaler. DeepSVDD detects outlying objects in the data by calculating the distance from the center.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Deep_One_Class_Classification/DeepSVDD_MinMaxScaler.ipynb",
                        "keywords": "code template, anomaly detection, deep, oneclass, classification,pyod, scaling,minmaxscaler,Deep One-Class Classifier,data rescaling, neural network",
                        "display_url": "https://siberian.dev/anomaly-detection/deep-one-class-classification-minmaxscaler\n"
                    },
                    {
                        "name": "DeepSVDD_RobustScaler.ipynb",
                        "title": "Deep One-Class Classification with RobustScaler",
                        "description": "This code template is for Anomaly detection using the DeepSVDD Algorithm implemented using the PyOd library, along with the data rescaling technique RobustScaler implemented in the sci-kit learn library.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Deep_One_Class_Classification/DeepSVDD_RobustScaler.ipynb",
                        "keywords": "code template, anomaly detection, deepsvdd, pyod, data rescaling technique, robustscaler,Deep One-Class Classifier,data rescaling, neural network",
                        "display_url": "https://siberian.dev/anomaly-detection/deep-one-class-classification-robustscaler"
                    },
                    {
                        "name": "DeepSVDD_StandardScaler.ipynb",
                        "title": "Deep One-Class Classification with StandardScaler",
                        "description": "This code template is for Anomaly detection/outlier analysis using the Deep One-Class Classification Algorithm implemented using PyOd library and feature scaling using StandardScaler, which Standardize features by removing the mean and scaling to unit variance.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Deep_One_Class_Classification/DeepSVDD_StandardScaler.ipynb",
                        "keywords": "code template, anomaly detection, deepsvdd,pyod, scaling,standardscaler,Deep One-Class Classifier,data rescaling, neural network",
                        "display_url": "https://siberian.dev/anomaly-detection/deep-one-class-classification-standardscaler"
                    }
                ]
            },
            {
                "name": "Histogram_Based_Outlier_Detector",
                "models": [
                    {
                        "name": "HBOS.ipynb",
                        "title": "Histogram Based Outlier Detection",
                        "description": "This code template is for Anomaly detection/outlier detection using the Histogram Based Outlier Detector(HBOS) Algorithm implemented using the pyod library in python.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Histogram_Based_Outlier_Detector/HBOS.ipynb",
                        "keywords": "code template, anomaly detection,hbos,pyod,Histogram Based Outlier Detector,python",
                        "display_url": "https://siberian.dev/anomaly-detection/histogram-based-outlier-detection"
                    },
                    {
                        "name": "HBOS_MaxAbsScaler.ipynb",
                        "title": "Histogram Based Outlier Detection with MaxAbsScaler",
                        "description": "This code template illustrates Anomaly detection using the Histogram Based Outlier Detector(HBOS) Algorithm implemented in the pyod library along with MaxAbsScaler as a data rescaling technique from sklearn.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Histogram_Based_Outlier_Detector/HBOS_MaxAbsScaler.ipynb",
                        "keywords": "code template, anomaly detection, hbos,pyod, maxabsscaler, data scaling, technique,Histogram Based Outlier Detector,sklearn",
                        "display_url": "https://siberian.dev/anomaly-detection/histogram-based-outlier-detection-maxabsscaler"
                    },
                    {
                        "name": "HBOS_RobustScaler.ipynb",
                        "title": "Histogram Based Outlier Detection with RobustScaler",
                        "description": "This code template is for Anomaly detection/outlier analysis using the HBOS Algorithm implemented using the pyod library along with RobustScaler as a feature scaling technique.HBOS assumes feature independence and calculates the degree of outlyingness by building histograms.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Histogram_Based_Outlier_Detector/HBOS_RobustScaler.ipynb",
                        "keywords": "code template, anomaly detection, hbos,pyod, robustscaler, scaling technique,Histogram Based Outlier Detector",
                        "display_url": "https://siberian.dev/anomaly-detection/histogram-based-outlier-detection-robustscaler"
                    },
                    {
                        "name": "HBOS_StandardScaler.ipynb",
                        "title": "Histogram Based Outlier Detection with StandardScaler",
                        "description": "This code template demonstrates outlier detection using the HBOS(Histogram Based Outlier Detection) Algorithm from the pyod library in python along with StandardScaler as a feature scaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Histogram_Based_Outlier_Detector/HBOS_StandardScaler.ipynb",
                        "keywords": "code template, anomaly detection,hbos,pyod, standardscaler, scaling technique,Histogram Based Outlier Detector",
                        "display_url": "https://siberian.dev/anomaly-detection/histogram-based-outlier-detection-standardscaler"
                    }
                ]
            },
            {
                "name": "Isolation_Forest",
                "models": [
                    {
                        "name": "IsolationForest.ipynb",
                        "title": "Isolation Forest",
                        "description": "This code template is for Anomaly detection/outlier analysis using the Isolation Forest Algorithm. The IsolationForest isolates observations by randomly selecting a feature and then randomly selecting a split value between the maximum and minimum values of the selected feature.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Isolation_Forest/IsolationForest.ipynb",
                        "keywords": "code template, anomaly detection, isolation forest template, iforest,pyod, sci-kit learn,sklearn,IForest",
                        "display_url": "https://siberian.dev/anomaly-detection/isolation-forest"
                    },
                    {
                        "name": "IsolationForest_MaxAbsScaler.ipynb",
                        "title": "Isolation Forest with MaxAbsScaler",
                        "description": "This code template illustrates Anomaly detection using the Isolation Forest Algorithm. This template utilizes the pyod library for isolation forest class along with feature scaling using MaxAbsScaler.The Code utilizes IForest implementation from the pyod library, a wrapper of sci-kit-learn Isolation Forest with more functionalities.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Isolation_Forest/IsolationForest_MaxAbsScaler.ipynb",
                        "keywords": "code template, anomaly detection, isolation forest template, iforest,pyod, scaling,maxabsscaler, sci-kit learn,sklearn,IForest",
                        "display_url": "https://siberian.dev/anomaly-detection/isolation-forest-maxabsscaler"
                    },
                    {
                        "name": "IsolationForest_MinMaxScaler.ipynb",
                        "title": "Isolation Forest with MinMaxScaler",
                        "description": "This code template is for Anomaly Detection using the Isolation Forest Algorithm and MinMaxScaler for python data-rescaling operations. The MinMaxScaler transforms features by scaling each feature to a given range.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Isolation_Forest/IsolationForest_MinMaxScaler.ipynb",
                        "keywords": "code template, anomaly detection, isolation forest template, iforest,pyod, scaling,minmaxscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/isolation-forest-minmaxscaler"
                    },
                    {
                        "name": "IsolationForest_RobustScaler.ipynb",
                        "title": "Isolation Forest with RobustScaler",
                        "description": "This code template is for Anomaly detection using the Isolation Forest Algorithm. This template utilizes the IForest class from the pyod library and features scaling using sci-kit learns RobustScalar function.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Isolation_Forest/IsolationForest_RobustScaler.ipynb",
                        "keywords": "code template, anomaly detection, isolation forest template, iforest,pyod, scaling,robustscalar,sci-kit learn",
                        "display_url": "https://siberian.dev/anomaly-detection/isolation-forest-robustscaler"
                    },
                    {
                        "name": "IsolationForest_StandardScaler.ipynb",
                        "title": "Isolation Forest with StandardScaler",
                        "description": "This code template is for Anomaly detection using the Isolation Forest Algorithm. This template utilizes IForest implementation from the pyod library along with feature rescaling using StandardScaler. The IsolationForest is based on ExtraTreeRegressor in the sci-kit learns library, which is used in pyod by wrapping the method with more functionality.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Isolation_Forest/IsolationForest_StandardScaler.ipynb",
                        "keywords": "code template, anomaly detection, isolation forest template, iforest,pyod, scaling,standardscaler,ensemble,scikit learn",
                        "display_url": "https://siberian.dev/anomaly-detection/isolation-forest-standardscaler"
                    }
                ]
            },
            {
                "name": "k-Nearest_Neighbors_Detector",
                "models": [
                    {
                        "name": "kNN.ipynb",
                        "title": "k-Nearest Neighbors Detection",
                        "description": "This code template is for Anomaly detection/outlier analysis using the kNN Algorithm. For an observation, its distance to its kth nearest neighbor can be viewed as the outlying score. It can also be viewed as a way to measure density.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/k-Nearest_Neighbors_Detector/kNN.ipynb",
                        "keywords": "code template, anomaly detection, knn, simple k-Nearest Neighbors Detector classification",
                        "display_url": "https://siberian.dev/anomaly-detection/knn-algorithm"
                    },
                    {
                        "name": "kNN_MinMaxScaler.ipynb",
                        "title": "k-Nearest Neighbors Detection with MinMaxScaler",
                        "description": "This code template is for Anomaly detection/outlier analysis using the kNN Algorithm, along with feature scaling using MinMaxScaler. The algorithm assumes the similarity between the new case and existing cases and puts the new one into the category that is most similar to the existing categories.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/k-Nearest_Neighbors_Detector/kNN_MinMaxScaler.ipynb",
                        "keywords": "code template, anomaly detection, knn,scaling,minmaxscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/knn-detection-minmaxscaler"
                    },
                    {
                        "name": "kNN_StandardScaler.ipynb",
                        "title": "k-Nearest Neighbors Detection with StandardScaler",
                        "description": "This code template is for Anomaly detection using the kNN Algorithm, along with a data rescaling technique using the sci-kit learn's StandardScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/k-Nearest_Neighbors_Detector/kNN_StandardScaler.ipynb",
                        "keywords": "code template, anomaly detection, knn,scaling,standardscaler,",
                        "display_url": "https://siberian.dev/anomaly-detection/knn-detection-standardscaler"
                    }
                ]
            },
            {
                "name": "Lightweight_On_line_Detector_of_Anomalies",
                "models": [
                    {
                        "name": "LODA.ipynb",
                        "title": "Lightweight On-line Detector of Anomalies",
                        "description": "This code template is for Anomaly detection/outlier analysis using the Lightweight On-line Detector Algorithm implemented using the pyod library. LODA can identify features in which the scrutinized sample deviates from the majority. This capability is optimal when the goal is to find out what has caused the anomaly.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Lightweight_On_line_Detector_of_Anomalies/LODA.ipynb",
                        "keywords": "code template, anomaly detection, loda,pyod, classification, regression",
                        "display_url": "https://siberian.dev/anomaly-detection/loda"
                    },
                    {
                        "name": "LODA_MaxAbsScaler.ipynb",
                        "title": "Lightweight On-line Detector of Anomalies with MaxAbsScaler",
                        "description": "This code template demonstrates the ability of the Lightweight On-line Detector(LODA) Algorithm implemented using the pyod library for Anomaly detection/outlier analysis and includes feature rescaling using MaxAbsScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Lightweight_On_line_Detector_of_Anomalies/LODA_MaxAbsScaler.ipynb",
                        "keywords": "code template, anomaly detection, loda,pyod, scaling,maxabsscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/loda-maxabsscaler"
                    },
                    {
                        "name": "LODA_MinMaxScaler.ipynb",
                        "title": "Lightweight On-line Detector of Anomalies with MinMaxScaler",
                        "description": "This code template is for Anomaly detection using the Lightweight On-line Detector(LODA) Algorithm implemented using the pyod library. The implementation utilizes a data engineering technique named data rescaling using MinMaxScaler to scale down data.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Lightweight_On_line_Detector_of_Anomalies/LODA_MinMaxScaler.ipynb",
                        "keywords": "code template, anomaly detection, loda,pyod, scaling,minmaxscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/loda-minmaxscaler"
                    },
                    {
                        "name": "LODA_StandardScaler.ipynb",
                        "title": "Lightweight On-line Detector of Anomalies with StandardScaler",
                        "description": "This code template is for Anomaly detection/outlier analysis using the Lightweight On-line Detector(LODA) Algorithm implemented using the pyod library and feature scaling using StandardScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Lightweight_On_line_Detector_of_Anomalies/LODA_StandardScaler.ipynb",
                        "keywords": "code template, anomaly detection, loda,pyod, scaling,standardscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/loda-standardscaler"
                    }
                ]
            },
            {
                "name": "Local_Outlier_Factor",
                "models": [
                    {
                        "name": "LOF.ipynb",
                        "title": "Local Outlier Factor",
                        "description": "This code template is for Anomaly detection/outlier analysis using the Local Outlier Factor Algorithm. This template utilizes LOF implementation from the pyod library. The anomaly score of each sample is called the Local Outlier Factor. It measures the local deviation of the density of a given data concerning its neighbors.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Local_Outlier_Factor/LOF.ipynb",
                        "keywords": "code template, anomaly detection, local outlier factor template, lof,pyod,",
                        "display_url": "https://siberian.dev/anomaly-detection/local-outlier-factor"
                    },
                    {
                        "name": "LOF_StandardScaler.ipynb",
                        "title": "Local Outlier Factor with StandardScaler",
                        "description": "This code template is for Anomaly detection using the Local Outlier Factor Algorithm. The template utilizes the data rescaling technique StandardScaler for data normalization. Pyod implementation of LOF is a wrapper of sci-kit-learn LOF Class with more functionalities.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Local_Outlier_Factor/LOF_StandardScaler.ipynb",
                        "keywords": "code template, anomaly detection, local outlier factor template, lof,pyod, data rescaling technique, standardscaler,sci-kit learn,sklearn",
                        "display_url": "https://siberian.dev/anomaly-detection/local-outlier-factor-standardscaler"
                    }
                ]
            },
            {
                "name": "Minimum_Covariance_Determinant",
                "models": [
                    {
                        "name": "MCD.ipynb",
                        "title": "Minimum Covariance Determinant",
                        "description": "This code template is for Anomaly detection/outlier analysis using the Minimum Covariance Determinant(MCD) Algorithm. This template utilizes Minimum Covariance Determinant implementation from the sklearn.covariance library. The Minimum Covariance Determinant covariance estimator is to be applied to Gaussian-distributed data but could still be relevant to data drawn from a unimodal, symmetric distribution.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Minimum_Covariance_Determinant/MCD.ipynb",
                        "keywords": "code template, anomaly detection,minimum covariance determinant, mcd template minimum covariance determinant,sklearncovariance,",
                        "display_url": "https://siberian.dev/anomaly-detection/minimum-covariance-determinant"
                    },
                    {
                        "name": "MCD_RobustScaler.ipynb",
                        "title": "Minimum Covariance Determinant with RobustScaler",
                        "description": "This code template is for Anomaly detection using the Minimum Covariance Determinant(MCD) Algorithm. This template utilizes MCD along with feature scaling using RobustScalar from the sci-kit learn library.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Minimum_Covariance_Determinant/MCD_RobustScaler.ipynb",
                        "keywords": "code template, anomaly detection, mcd template minimum covariance determinant,sklearncovariance, scaling,robustscalar",
                        "display_url": "https://siberian.dev/anomaly-detection/minimum-covariance-determinant-robustscaler"
                    },
                    {
                        "name": "MCD_StandardScaler.ipynb",
                        "title": "Minimum Covariance Determinant with StandardScaler",
                        "description": "This code template is for Anomaly detection/outlier analysis using the Minimum Covariance Determinant(MCD) Algorithm. This algorithm is well suited for Detecting outliers in a Gaussian-distributed dataset. This template also employs data rescaling using StandardScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Minimum_Covariance_Determinant/MCD_StandardScaler.ipynb",
                        "keywords": "code template, anomaly detection,minimum covariance determinant, mcd template minimum covariance determinant,sklearncovariance, scaling,standardscalar",
                        "display_url": "https://siberian.dev/anomaly-detection/minimum-covariance-determinant-standardscaler"
                    }
                ]
            },
            {
                "name": "Multi_Objective_Generative_Adversarial_Active_Learning",
                "models": [
                    {
                        "name": "MO_GAAL_MinMaxScaler.ipynb",
                        "title": "Multi-Objective Generative Adversarial Active Learning with MinMaxScaler",
                        "description": "This code template is for Anomaly detection/outlier analysis using the MO_GAAL Algorithm implemented using the pyod library and feature scaling using MinMaxScaler. MO_GAAL directly generates informative potential outliers to assist the classifier in describing a boundary that can separate outliers.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Multi_Objective_Generative_Adversarial_Active_Learning/MO_GAAL_MinMaxScaler.ipynb",
                        "keywords": "code template, anomaly detection, mogaal,pyod, scaling,minmaxscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/multi-objective-generative-adversarial-active-learning-minmaxscaler"
                    },
                    {
                        "name": "MO_GAAL_RobustScaler.ipynb",
                        "title": "Multi-Objective Generative Adversarial Active Learning with RobustScaler",
                        "description": "This code template is for Anomaly detection/outlier analysis using the MO_GAAL Algorithm implemented using the pyod library and feature scaling using RobustScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Multi_Objective_Generative_Adversarial_Active_Learning/MO_GAAL_RobustScaler.ipynb",
                        "keywords": "code template, anomaly detection, mogaal,pyod, scaling,robustscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/multi-objective-generative-adversarial-active-learning-robustscaler"
                    }
                ]
            },
            {
                "name": "One_class_SVM_detector",
                "models": [
                    {
                        "name": "OCSVM.ipynb",
                        "title": "One-Class SVM detector",
                        "description": "This code template is for Anomaly detection/outlier analysis using the OCSVM (One-class SVM detector)Algorithm implemented using the pyod library. It is a wrapper of sci-kit-learn one-class SVM Class with more functionalities.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/One_class_SVM_detector/OCSVM.ipynb",
                        "keywords": "code template, anomaly detection, ocsvm,pyod,",
                        "display_url": "https://siberian.dev/anomaly-detection/one-class-svm"
                    },
                    {
                        "name": "OCSVM_MinMaxScaler.ipynb",
                        "title": "One-Class SVM detector with MinMaxScaler",
                        "description": "This code template is for Anomaly detection using the OCSVM(One-class SVM detector) Algorithm implemented using the pyod library. Along with minimal data preprocessing,the template includes feature scaling using MinMaxScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/One_class_SVM_detector/OCSVM_MinMaxScaler.ipynb",
                        "keywords": "code template, anomaly detection, ocsvm,pyod, scaling,minmaxscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/one-class-svm-minmaxscaler"
                    },
                    {
                        "name": "OCSVM_RobustScaler.ipynb",
                        "title": "One-Class SVM detector with RobustScaler",
                        "description": "This code template is for Anomaly detection/outlier analysis using the OCSVM(One-class SVM detector) Algorithm implemented using the pyod library. Sci-kit learns RobustScaler gets utilized to rescale the feature before training the model.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/One_class_SVM_detector/OCSVM_RobustScaler.ipynb",
                        "keywords": "code template, anomaly detection, ocsvm,pyod, scaling,robustscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/one-class-svm-robustscaler"
                    },
                    {
                        "name": "OCSVM_StandardScaler.ipynb",
                        "title": "One-Class SVM detector with StandardScaler",
                        "description": "This code template is for Anomaly detection/outlier analysis using the OCSVM Algorithm implemented using the pyod library and feature scaling using StandardScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/One_class_SVM_detector/OCSVM_StandardScaler.ipynb",
                        "keywords": "code template, anomaly detection, ocsvm,pyod, scaling,standardscaler",
                        "display_url": "https://siberian.dev/anomaly-detection/one-class-svm-standardscaler"
                    }
                ]
            },
            {
                "name": "Principal_Component_Analysis_Outlier_Detector",
                "models": [
                    {
                        "name": "PCA.ipynb",
                        "title": "Principal Component Analysis Outlier Detection",
                        "description": "This code template is for Anomaly detection/outlier analysis using the Principal component analysis (PCA) Algorithm via the pyod PCA library. PCA is a linear dimensionality reduction using Singular Value Decomposition of the data to project it to a lower dimensional space.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Principal_Component_Analysis_Outlier_Detector/PCA.ipynb",
                        "keywords": "code template, anomaly detection, pca, pyod,Principal component analysis",
                        "display_url": "https://siberian.dev/anomaly-detection/principal-component-analysis-outlier-detection"
                    },
                    {
                        "name": "PCA_RobustScaler.ipynb",
                        "title": "Principal Component Analysis Outlier Detection with RobustScaler",
                        "description": "This code template is for Anomaly detection using the Principal component analysis (PCA) Algorithm via the pyod PCA library with the data scaling technique RobustScaler.Principal component analysis (PCA) also helps in detecting outliers.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Principal_Component_Analysis_Outlier_Detector/PCA_RobustScaler.ipynb",
                        "keywords": "code template, anomaly detection, pca,pyod, pca algorithm, data, scaling technique, robustscaler,Principal component analysis",
                        "display_url": "https://siberian.dev/anomaly-detection/principal-component-analysis-outlier-detection-robustscaler"
                    },
                    {
                        "name": "PCA_StandardScaler.ipynb",
                        "title": "Principal Component Analysis Outlier Detection with Standard Scaler",
                        "description": "This code template is for Anomaly detection/outlier analysis using the Principal component analysis Algorithm via the pyod library with the data scaling technique Standard Scaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Principal_Component_Analysis_Outlier_Detector/PCA_StandardScaler.ipynb",
                        "keywords": "code template, anomaly detection, pca,pyod, pca algorithm, data, scaling technique, standard, scaler,Principal component analysis",
                        "display_url": "https://siberian.dev/anomaly-detection/principal-component-analysis-outlier-detection-standardscaler"
                    }
                ]
            },
            {
                "name": "Single_Objective_Generative_Adversarial_Active_Learning",
                "models": [
                    {
                        "name": "SO_GAAL.ipynb",
                        "title": "Single-Objective Generative Adversarial Active Learning",
                        "description": "This code template is for Anomaly detection using the SO_GAAL Algorithm from the pyod library. Single-Objective Generative Adversarial Active Learning directly generates informative potential outliers to assist the classifier in describing a boundary that can separate outliers effectively.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Single_Objective_Generative_Adversarial_Active_Learning/SO_GAAL.ipynb",
                        "keywords": "code template, anomaly detection, sogaal,pyod,Single-Objective Generative Adversarial Active Learning",
                        "display_url": "https://siberian.dev/anomaly-detection/single-objective-generative-adversarial-active-learning"
                    },
                    {
                        "name": "SO_GAAL_MaxAbsScaler.ipynb",
                        "title": "Single-Objective Generative Adversarial Active Learning with MaxAbsScaler",
                        "description": "This code template is for Anomaly detection/outlier analysis using the SO_GAAL Algorithm implemented using the pyod library and feature scaling using MaxAbsScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Single_Objective_Generative_Adversarial_Active_Learning/SO_GAAL_MaxAbsScaler.ipynb",
                        "keywords": "code template, anomaly detection, sogaal,pyod, scaling,maxabsscaler,Single-Objective Generative Adversarial Active Learning",
                        "display_url": "https://siberian.dev/anomaly-detection/single-objective-generative-adversarial-active-learning-maxabsscaler"
                    },
                    {
                        "name": "SO_GAAL_MinMaxScaler.ipynb",
                        "title": "Single-Objective Generative Adversarial Active Learning with MinMaxScaler",
                        "description": "This code template is for Anomaly detection/outlier analysis using the Single-Objective Generative Adversarial Active Learning Algorithm implemented using the pyod library and feature scaling using MinMaxScaler. SO_GAAL is a deep neural network-based model for anomaly detection.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Single_Objective_Generative_Adversarial_Active_Learning/SO_GAAL_MinMaxScaler.ipynb",
                        "keywords": "code template, anomaly detection, sogaal,pyod, scaling,minmaxscaler,Single-Objective Generative Adversarial Active Learning",
                        "display_url": "https://siberian.dev/anomaly-detection/single-objective-generative-adversarial-active-learning-minmaxscaler"
                    },
                    {
                        "name": "SO_GAAL_RobustScaler.ipynb",
                        "title": "Single-Objective Generative Adversarial Active Learning with RobustScaler",
                        "description": "This code template is for Anomaly detection/outlier analysis using the Single-Objective Generative Adversarial Active Learning(SO_GAAL) Algorithm implemented using the pyod library and feature scaling using RobustScaler.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Single_Objective_Generative_Adversarial_Active_Learning/SO_GAAL_RobustScaler.ipynb",
                        "keywords": "code template, anomaly detection, sogaal,pyod, scaling,robustscaler,Single-Objective Generative Adversarial Active Learning",
                        "display_url": "https://siberian.dev/anomaly-detection/single-objective-generative-adversarial-active-learning-robustscaler"
                    },
                    {
                        "name": "SO_GAAL_StandardScaler.ipynb",
                        "title": "Single-Objective Generative Adversarial Active Learning with StandardScaler",
                        "description": "This code template is for Anomaly detection/outlier analysis using the Single-Objective Generative Adversarial Active Learning(SO_GAAL) Algorithm implemented using pyod library and feature scaling using sklearn.StandardScaler",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Single_Objective_Generative_Adversarial_Active_Learning/SO_GAAL_StandardScaler.ipynb",
                        "keywords": "code template, anomaly detection, sogaal,pyod, scaling,standardscaler,Single-Objective Generative Adversarial Active Learning",
                        "display_url": "https://siberian.dev/anomaly-detection/single-objective-generative-adversarial-active-learning-standardscaler"
                    }
                ]
            },
            {
                "name": "Variational_Auto_Encoder",
                "models": [
                    {
                        "name": "VAE.ipynb",
                        "title": "Variational AutoEncoder (VAE)",
                        "description": "This code template is for Anomaly detection/outlier analysis using the Simple Variational Auto Encoder. This template utilizes Variational Auto Encoder implementation from the pyod library. A variational autoencoder can be defined as an autoencoder whose training is regularised to avoid overfitting and ensure that the latent space has good properties that enable a generative process.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Variational_Auto_Encoder/VAE.ipynb",
                        "keywords": "code template, anomaly detection, simple variational,auto encoder,pyod,",
                        "display_url": "https://siberian.dev/anomaly-detection/variational-autoencoder-vae"
                    },
                    {
                        "name": "VAE_MaxAbsScaler.ipynb",
                        "title": "Variational AutoEncoder (VAE) with MaxAbsScaler",
                        "description": "This code template is for Anomaly detection/outlier analysis using the Variational Auto Encoder(VAE). This template utilizes the vae class from the pyod library and the MaxAbsScaler for the feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Variational_Auto_Encoder/VAE_MaxAbsScaler.ipynb",
                        "keywords": "code template, anomaly detection, auto encoder variational, auto encoder, pyod, maxabsscaler, rescaling technique",
                        "display_url": "https://siberian.dev/anomaly-detection/variational-autoencoder-vae-maxabsscaler"
                    },
                    {
                        "name": "VAE_RobustScaler.ipynb",
                        "title": "Variational AutoEncoder (VAE) with RobustScaler",
                        "description": "This code template illustrates Anomaly detection using the  Variational Auto Encoder. RobustScaler is used for data rescaling before performing Unsupervised model  training.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Variational_Auto_Encoder/VAE_RobustScaler.ipynb",
                        "keywords": "code template, anomaly detection, auto encoder variational, auto encoder, pyod, robustscaler, rescaling technique",
                        "display_url": "https://siberian.dev/anomaly-detection/variational-autoencoder-vae-robustscaler"
                    },
                    {
                        "name": "VAE_StandardScaler.ipynb",
                        "title": "Variational AutoEncoder (VAE) with StandardScaler",
                        "description": "This code template is for Anomaly detection/outlier analysis using the Simple Variational Auto Encoder. This template utilizes the StandardScaler for the feature rescaling technique before performing the fit operation on the vae estimator.",
                        "URL": "https://cdn.siberian.dev/code/Anomaly_Detection/Variational_Auto_Encoder/VAE_StandardScaler.ipynb",
                        "keywords": "code template, anomaly detection, auto encoder variational, auto encoder, pyod, standardscaler, rescaling technique",
                        "display_url": "https://siberian.dev/anomaly-detection/variational-autoencoder-vae-standardscaler"
                    }
                ]
            }
        ]
    },
    {
        "name": "Audio_Visual",
        "image": "https://cdn.siberian.dev/code-gen/av_blue.png",
        "description": "Image, video, and audio data analysis for varied use cases.",
        "models": [
            {
                "name": "Car_License_Plate",
                "models": [
                    {
                        "name": "CarNumberPlateDetection_OpenCV.ipynb",
                        "title": "License Plate Detection using OpenCV",
                        "description": "This code template is for car number plate detection using OpenCV. This task uses the Haar Cascade XML file containing the features of Russian car plates for detecting the bounding box for the license plates.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Car_License_Plate/CarNumberPlateDetection_OpenCV.ipynb",
                        "keywords": "code template, car plate detection,opencv,haar cascade,bounding box, license plate,cascade classifier",
                        "display_url": "https://siberian.dev/audio-visual/license-plate-detection-using-opencv"
                    },
                    {
                        "name": "CarNumberPlateDetection_OpenCV_OCR.ipynb",
                        "title": "License Plate Detection using OpenCV and OCR",
                        "description": "The code template demonstrates car License plate detection using OpenCV and Optical Character Recognition(OCR). OCR is a technology that recognizes text within a digital image.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Car_License_Plate/CarNumberPlateDetection_OpenCV_OCR.ipynb",
                        "keywords": "code template, car plate detection,opencv, ocr,haar cascade,bounding box, license plate,cascade classifier,Optical Character Recognition,easyocr",
                        "display_url": "https://siberian.dev/audio-visual/license-plate-detection-using-opencv-and-ocr"
                    },
                    {
                        "name": "CarNumberPlateDetection_OpenCV_Video.ipynb",
                        "title": "License Plate Detection using OpenCV using Python",
                        "description": "This Code Template is for Car Plate Number Detection using OpenCV in Python. It takes a video as input and outputs the car plate number with a boundary/box surrounding it per frame in the video. This template uses EasyOCR to convert text on an image to a string.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Car_License_Plate/CarNumberPlateDetection_OpenCV_Video.ipynb",
                        "keywords": "code template, car plate detection,opencv, python,input, outputs, car plate, boundarybox,easyocr, ",
                        "display_url": "https://siberian.dev/audio-visual/license-plate-detection-using-opencv-using-python"
                    }
                ]
            },
            {
                "name": "Facial",
                "models": [
                    {
                        "name": "EyeDetection_OpenCV.ipynb",
                        "title": "Eye Detection using OpenCV in Python",
                        "description": "This Code Template is for Eye Detection using OpenCV in Python for Image inputs. CascadeClassifier of openCV is utilized along with haarcascade_eye.xml",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Facial/EyeDetection_OpenCV.ipynb",
                        "keywords": "code template, eye detection,opencv, python,CascadeClassifier,haar cascade",
                        "display_url": "https://siberian.dev/audio-visual/eye-detection-using-opencv-using-python"
                    },
                    {
                        "name": "EyeDetection_OpenCV_Video.ipynb",
                        "title": "Eye Detection using OpenCV in Video",
                        "description": "This code template is for eye detection in a video using OpenCV Library. CascadeClassifier of openCV is utilized along with haarcascade_eye.xml",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Facial/EyeDetection_OpenCV_Video.ipynb",
                        "keywords": "code template, eye detection,opencv,CascadeClassifier,haar cascade",
                        "display_url": "https://siberian.dev/audio-visual/eye-detection-using-opencv-in-video"
                    },
                    {
                        "name": "FaceAgeDetection_OpenCV.ipynb",
                        "title": "Face Age Detection using OpenCV",
                        "description": "This Code Template is for Face Age Detection using Huggingface Vision Transformers and OpenCV in Python. The template uses CascadeClassifier to detect the face in the input and then uses the Huggingface model to predict the age.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Facial/FaceAgeDetection_OpenCV.ipynb",
                        "keywords": "code template, age, detection,huggingface, vision transformers, opencv, python",
                        "display_url": "https://siberian.dev/audio-visual/face-age-detection-using-opencv"
                    },
                    {
                        "name": "FaceDetection_OpenCV.ipynb",
                        "title": "Face Detection using OpenCV in Python",
                        "description": "This Code Template is for Face Detection using OpenCV in Python. OpenCV uses CascadeClassifier class to detect Faces from Images using the haar cascade file.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Facial/FaceDetection_OpenCV.ipynb",
                        "keywords": "code template, detection,opencv, python,CascadeClassifier,haar cascade",
                        "display_url": "https://siberian.dev/audio-visual/face-detection-using-opencv-in-python"
                    },
                    {
                        "name": "FaceDetection_Video.ipynb",
                        "title": "Face Detection using OpenCV in Video",
                        "description": "This code template is for face detection in a video using OpenCV Library. Run this code either on Spyder or PyCharm. The Front Face Haar cascade file is utilized to detect faces in the video stream.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Facial/FaceDetection_Video.ipynb",
                        "keywords": "code template, detection, video,opencv,spyder, pycharm,CascadeClassifier,haar cascade",
                        "display_url": "https://siberian.dev/audio-visual/facial/face-detection-using-opencv-in-video"
                    }
                ]
            },
            {
                "name": "Image_Classification",
                "models": [
                    {
                        "name": "ImageClassificaitonXGBoost.ipynb",
                        "title": "Simple Image Classification using XGBoost",
                        "description": "This Code template is for Simple Image Classification using XGBoost. The task of identifying what an image represents is called image classification. An image classification model is trained to recognize various classes of images.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificaitonXGBoost.ipynb",
                        "keywords": "code template, simple image, classification,xgboost",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/simple-image-classification-using-xgboost"
                    },
                    {
                        "name": "ImageClassificationANN.ipynb",
                        "title": "Image Classification using ANN",
                        "description": "This Code Template is for an Image Classification task using an Artificial Neural Network (ANN). An Artificial Neural Network in the field of Artificial intelligence attempts to mimic the network of neurons that makes up a human brain so that computers will have the option to understand things and make decisions in a human-like manner.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationANN.ipynb",
                        "keywords": "code template, image classification,artificial, neural, network, ann, neuron, AI, Artificial intelligence",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/image-classification-using-ann"
                    },
                    {
                        "name": "ImageClassificationCNN.ipynb",
                        "title": "Image Classification using CNN",
                        "description": "This Code Template is for an Image Classification task using a Convolutional Neural Network (ConvNet/CNN). The Convolutional Neural Network is a subtype of Neural Network used in the field of image and speech recognition. Its built-in convolutional layer reduces the high dimensionality of images without losing their information.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationCNN.ipynb",
                        "keywords": "code template, image classification, convolutional neural network, convnet,cnn, convolutional layer",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/image-classification-using-cnn"
                    },
                    {
                        "name": "ImageClassificationDenseNet121.ipynb",
                        "title": "Image Classification using DenseNet 121",
                        "description": "This Code Template is for simple image classification using DenseNet 121. A DenseNet is a type of CNN that utilizes dense connections between layers through Dense Blocks, where we connect all layers directly with each other.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationDenseNet121.ipynb",
                        "keywords": "code template,simple image classification,densenet, Dense Convolutional Network",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/image-classification-using-densenet-121"
                    },
                    {
                        "name": "ImageClassificationDenseNet201.ipynb",
                        "title": "Image Classification using DenseNet201",
                        "description": "This Code Template is for simple image classification using DenseNet 201. The DenseNet was developed specifically to improve the declined accuracy caused by the vanishing gradient in high-level neural networks.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationDenseNet201.ipynb",
                        "keywords": "code template,simple image classification,densenet, Dense Convolutional Network",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/image-classification-using-densenet201"
                    },
                    {
                        "name": "ImageClassificationEfficientNet.ipynb",
                        "title": "Image Classification Using EfficientNet",
                        "description": "This Code Template is for simple image classification using EfficientNet. EfficientNet is a CNN architecture and scaling method that uniformly scales all dimensions of depth/width/resolution using a compound coefficient.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationEfficientNet.ipynb",
                        "keywords": "code template,simple image classification,efficientnet",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/image-classification-using-efficientnet"
                    },
                    {
                        "name": "ImageClassificationInceptionResNetV2.ipynb",
                        "title": "Image Classification using InceptionResNetV2",
                        "description": "This Code Template is for simple image classification using InceptionResNetV2. Inception-ResNet-v2 is a convolutional neural network that is trained on more than a million images from the ImageNet database. The network is 164 layers deep and can classify images into 1000 object categories, such as keyboard, mouse, pencil, and many animals.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationInceptionResNetV2.ipynb",
                        "keywords": "code template,simple image classification,inceptionresnetv",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/image-classification-using-inceptionresnetv2"
                    },
                    {
                        "name": "ImageClassificationInceptionV3.ipynb",
                        "title": "Image Classification using InceptionV3",
                        "description": "This Code Template is for simple image classification using InceptionV3. Inception v3 is an image recognition model that has been shown to attain greater than 78.1% accuracy on the ImageNet dataset.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationInceptionV3.ipynb",
                        "keywords": "code template,simple image classification,inceptionv",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/image-classification-using-inceptionv3"
                    },
                    {
                        "name": "ImageClassificationKNeighborsClassifier.ipynb",
                        "title": "Image Classification using KNeighborsClassifier",
                        "description": "The template is for Image Classification using KNeighborsClassifier based on K-Nearest Neighbors algorithm. KNeighborsClassifier implements learning based on the nearest neighbors of each query point, where is an integer value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationKNeighborsClassifier.ipynb",
                        "keywords": "simple image classification, kneighborsclassifier,knearest neighbors,",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/image-classification-using-kneighborsclassifier"
                    },
                    {
                        "name": "ImageClassificationLinearSVC.ipynb",
                        "title": "Simple Image Classification using SVC and Feature Extraction",
                        "description": "This Code Template is for the Image Classification task using LinearSVC(Linear SupportVectorClassifier) based on the Support Vector Machine Algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationLinearSVC.ipynb",
                        "keywords": "code template, image classification, linearsvc, linear support vector classifier,support, vector, machine,",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/simple-image-classification-using-svc-and-feature-extraction"
                    },
                    {
                        "name": "ImageClassificationMLP.ipynb",
                        "title": "Image Classification using MLP",
                        "description": "This Code Template is for an Image Classification task using Multilayer perceptron (MLP). It is a class of feedforward artificial neural networks (ANN). The term MLP is used ambiguously, sometimes loosely, to mean any feedforward ANN, sometimes strictly to refer to networks composed of multiple layers of perceptrons",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationMLP.ipynb",
                        "keywords": "code template, image, classificaiton,multilayer perceptron, mlp, artificial neural network, ann",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/image-classification-using-mlp"
                    },
                    {
                        "name": "ImageClassificationMobileNetV2.ipynb",
                        "title": "Image Classification using MobileNetV2",
                        "description": "This Code Template is for simple image classification using MobileNetV2. MobileNet-v2 is a convolutional neural network that is 53 layers deep. You can load a pre-trained version of the network trained on more than a million images from the ImageNet database.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationMobileNetV2.ipynb",
                        "keywords": "code template,simple image classification,mobilenetv2,convolutional neural network",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/image-classification-using-mobilenetv2"
                    },
                    {
                        "name": "ImageClassificationNASNetLarge.ipynb",
                        "title": "Image Classification using NASNetLarge",
                        "description": "This Code Template is for the Image Classification task using NASNetLarge. NASNet-Large is a convolutional neural network which is trained on more than a million images from the ImageNet database.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationNASNetLarge.ipynb",
                        "keywords": "code template, image classification,nasnetlarge",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/image-classification-using-nasnetlarge"
                    },
                    {
                        "name": "ImageClassificationNuSVC.ipynb",
                        "title": "Simple Image Classification using NuSVC",
                        "description": "This Code Template is for the Image Classification task using the Simple NuSVC Algorithm. NuSVC is Nu Support Vector Classification. It is another class provided by sci-kit-learn which can perform multi-class classification.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationNuSVC.ipynb",
                        "keywords": "code template,image classification,simple nusvc, Nu Support Vector Classification",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/simple-image-classification-using-nusvc"
                    },
                    {
                        "name": "ImageClassificationPerceptron.ipynb",
                        "title": "Image Classification using Perceptron",
                        "description": "This Code Template is for the Image Classification task using Perceptron. Perceptron is a Machine Learning algorithm for supervised learning of various binary classification tasks. Further, Perceptron is also defined as an Artificial Neuron or neural network unit that helps to detect certain input data computations in business intelligence.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationPerceptron.ipynb",
                        "keywords": "code template, image classification,perceptron, support vector machine, Machine Learning, Binary Classification",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/image-classification-using-perceptron"
                    },
                    {
                        "name": "ImageClassificationResNet101.ipynb",
                        "title": "Image Classification using ResNet101",
                        "description": "This Code Template is for simple image classification using Resnet101. ResNets are one of the most efficient Neural Network Architectures, as they help maintain a low error rate much deeper in the network.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationResNet101.ipynb",
                        "keywords": "code template,simple image classification,resnet",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/image-classification-using-resnet101"
                    },
                    {
                        "name": "ImageClassificationResNet152.ipynb",
                        "title": "Image Classification using ResNet152",
                        "description": "This Code Template is for simple image classification using Resnet152. The utilized Resnet model is a 152 layers network pre-trained on the ImageNet dataset.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationResNet152.ipynb",
                        "keywords": "code template,simple image classification,resnet",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/image-classification-using-resnet152"
                    },
                    {
                        "name": "ImageClassificationResNet50.ipynb",
                        "title": "Simple Image Classification using ResNet50",
                        "description": "This Code Template is for simple image classification using Resnet50. This architecture introduced the concept of Residual Block to solve the problem of the vanishing/exploding gradient.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationResNet50.ipynb",
                        "keywords": "code template,simple image classification,resnet",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/simple-image-classification-using-resnet50"
                    },
                    {
                        "name": "ImageClassificationSVC.ipynb",
                        "title": "Image Classification using SVC",
                        "description": "This Code Template is for an Image Classification task using Simple SVC(SupportVectorClassifier) based on a Support Vector Machine Algorithm. SVM is a supervised machine learning algorithm that can be used for both classification and regression challenges.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationSVC.ipynb",
                        "keywords": "code template, image classification,simple svc support vector classifier,support vector machine, SVM",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/image-classification-using-svc"
                    },
                    {
                        "name": "ImageClassificationVGG16.ipynb",
                        "title": "Image Classification using VGG16",
                        "description": "This Code Template is for the Image Classification task using Transfer Learning Technique. For this task in this template, VGG-16 pre-trained Deep Neural Network Architecture is Utilized from Tensorflow Library. The network is 16 layers deep.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationVGG16.ipynb",
                        "keywords": "code template, image classification,transfer,learning technique, vgg, pretrained, deep, neural, network, architecture, utilized, tensorflow,",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/image-classification-using-vgg16"
                    },
                    {
                        "name": "ImageClassificationVGG19.ipynb",
                        "title": "Simple Image Classification using VGG19",
                        "description": "This code template is for image classification using the VGG19 model. VGG stands for Visual Geometry Group. It is a standard deep Convolutional Neural Network (CNN) architecture with multiple layers.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/ImageClassificationVGG19.ipynb",
                        "keywords": "code template, image classification,vgg, model,VGG16, Vgg19",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/simple-image-classification-using-vgg19"
                    },
                    {
                        "name": "Traffic_Sign_Recognition.ipynb",
                        "title": "Traffic Sign Recognition using opencv",
                        "description": "This Code Template is for Traffic Sign Recognition using OpenCV along with Keras from TensorFlow in python. The designed Neural Network classifies different traffic sign boards.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Image_Classification/Traffic_Sign_Recognition.ipynb",
                        "keywords": "code template, traffic sign recognition, opencv,keras, tenserflow, python, neural network",
                        "display_url": "https://siberian.dev/audio-visual/image-classification/traffic-sign-recognition-using-opencv"
                    }
                ]
            },
            {
                "name": "Object_Detection",
                "models": [
                    {
                        "name": "ObjectDetectionOpenCV.ipynb",
                        "title": "Object Detection using OpenCV in Image",
                        "description": "This Code Template is for Object Detection in python using the OpenCV library. Object Detection is A computer vision technique that deals with detecting objects in an image or video. This technique draws a boundary or a bounding box around the target object and may also include their target label. It has many real-life applications like, image retrieval and video surveillance.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Object_Detection/ObjectDetectionOpenCV.ipynb",
                        "keywords": "code template, object, detection, python,opencv, object, detection, computer, vision, technique, deals, detecting, objects, face, eye, inanimate, object, image, video, technique, draws, boundary, bounding, box, target, object, include, target, label, reallife, applications, image, retrieval, video, surveillance",
                        "display_url": "https://siberian.dev/audio-visual/object-detection/object-detection-using-opencv"
                    },
                    {
                        "name": "ObjectDetection_Video.ipynb",
                        "title": "Object Detection using OpenCV in Video Input",
                        "description": "This Code Template is for Object Detection through webcam video capture using the OpenCV library in python. This technique draws a boundary or a bounding box around the target object and may also include its target label.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Object_Detection/ObjectDetection_Video.ipynb",
                        "keywords": "code template, object, detection, webcam, video, capture,opencv, python, object, detection, computer, vision, technique, deals, detecting, objects, face, eye, inanimate, object, image, video, technique, draws, boundary, bounding, box, target, object, include, target, label, reallife, applications, image, retrieval, video, surveillance",
                        "display_url": "https://siberian.dev/audio-visual/other/object-detection-using-opencv-in-video-input"
                    }
                ]
            },
            {
                "name": "Other",
                "models": [
                    {
                        "name": "HandGestureDetection_OpenCV_Video.ipynb",
                        "title": "HandGestureDetection using OpenCV",
                        "description": "This code template is for Hand Gesture detection in a video using OpenCV Library. The task of detecting hand movement and annotating landmarks is performed using the media pipe library.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Other/HandGestureDetection_OpenCV_Video.ipynb",
                        "keywords": "code template, hand gesture detection, opencv,mediapipe,annotation",
                        "display_url": "https://siberian.dev/audio-visual/other/handgesturedetection-using-opencv"
                    },
                    {
                        "name": "MotionDetection_OpenCV.ipynb",
                        "title": "Motion Detection using OpenCV",
                        "description": "This code template is for motion detection in a video using OpenCV Library. Run this code either on Spyder or PyCharm. Motion is detected by comparing the difference in the frame every.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Other/MotionDetection_OpenCV.ipynb",
                        "keywords": "code template, motion detection, opencv, spyder, pycharm",
                        "display_url": "https://siberian.dev/audio-visual/other/motion-detection-using-opencv"
                    }
                ]
            },
            {
                "name": "Text",
                "models": [
                    {
                        "name": "TextDetection_OCR_Video.ipynb",
                        "title": "Text Detection in Video using OCR",
                        "description": "This Code Template is for Text Detection using OCR in Python. It takes a video as an input and outputs the text with a boundary/box surrounding it per frame in the video. This template uses EasyOCR to convert text on an image to a string.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Text/TextDetection_OCR_Video.ipynb",
                        "keywords": "code template, text, detection,ocr, python,input, outputs, text, boundarybox,easyocr, ",
                        "display_url": "https://siberian.dev/audio-visual/text/text-detection-in-video-using-ocr"
                    },
                    {
                        "name": "Text_Detection_OCR.ipynb",
                        "title": "Text Detection using OCR",
                        "description": "This Code Template is for text Detection using OpenCV and the easyocr for Optical Character Recognition in an image file.",
                        "URL": "https://cdn.siberian.dev/code/Audio_Visual/Text/Text_Detection_OCR.ipynb",
                        "keywords": "code template, text detection, ocr",
                        "display_url": "https://siberian.dev/audio-visual/text/text-detection-using-ocr"
                    }
                ]
            }
        ]
    },
    {
        "name": "Classification",
        "image": "https://cdn.siberian.dev/code-gen/classification_blue.png",
        "description": "Classification is a process of categorizing a given set of data into classes.",
        "models":[
            {
                "name": "Adaptive_Boosting",
                "models": [
                    {
                        "name": "AdaBoostClassifier.ipynb",
                        "title": "AdaBoost Classification",
                        "description": "This Code template is for the Classification tasks using a simple AdaBoostClassifier based on the Boosting Ensemble Learning technique. AdaBoost is also known as the Adaptive Boosting Algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Adaptive_Boosting/AdaBoostClassifier.ipynb",
                        "keywords": "code template, classification, simple adaboost classifier,boosting, ensemble,Adaptive Boosting",
                        "display_url": "https://siberian.dev/classification/adaptive-boosting/adaboost-classification"
                    },
                    {
                        "name": "AdaBoostClassifier_MaxAbsScaler.ipynb",
                        "title": "AdaBoostClassifier with MaxAbsScaler",
                        "description": "This Code template is for the Classification tasks using a simple AdaBoostClassifier based on the Boosting Ensemble Learning technique, where the data rescaling technique used is MaxAbsScaler. These algorithms improve the prediction power by converting several weak learners to strong learners.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Adaptive_Boosting/AdaBoostClassifier_MaxAbsScaler.ipynb",
                        "keywords": "code template, classification,simple adaboost classifier,boosting ensemble learning technique, data rescaling technique, maxabsscaler",
                        "display_url": "https://siberian.dev/classification/adaptive-boosting/adaboostclassifier-with-maxabsscaler"
                    },
                    {
                        "name": "AdaBoostClassifier_MinMaxScaler.ipynb",
                        "title": "AdaBoost Classification with MinMaxScaler",
                        "description": "This Code template is for the Classification tasks using a simple AdaBoostClassifier based on the Boosting Ensemble Learning technique, where the data rescaling technique used is the MinMaxScaler function. The most common algorithm used with AdaBoost is decision trees with one level which means Decision trees with only 1 split.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Adaptive_Boosting/AdaBoostClassifier_MinMaxScaler.ipynb",
                        "keywords": "code template, classification,simple adaboost classifier,boosting ensemble learning technique, data rescaling technique, minmaxscaler function",
                        "display_url": "https://siberian.dev/classification/adaptive-boosting/adaboost-classification-with-minmaxscaler"
                    },
                    {
                        "name": "AdaBoostClassifier_Normalize.ipynb",
                        "title": "AdaBoost Classification with Normalize",
                        "description": "This Code template is for the Classification tasks using a simple AdaBoostClassifier based on the Boosting Ensemble Learning technique, where the data rescaling technique used is the Normalize function from the sci-kit learn library.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Adaptive_Boosting/AdaBoostClassifier_Normalize.ipynb",
                        "keywords": "code template, classification, simple adaboost classifier, boosting ensemble learning technique, data rescaling technique, normalize function",
                        "display_url": "https://siberian.dev/classification/adaptive-boosting/adaboost-classification-with-normalize"
                    },
                    {
                        "name": "AdaBoostClassifier_RobustScaler.ipynb",
                        "title": "AdaBoost Classification with RobustScaler",
                        "description": "This Code template is for the Classification tasks using a simple AdaBoostClassifier based on the Boosting Ensemble Learning technique. For data rescaling, Robust Scaler is utilized for normalizing the data.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Adaptive_Boosting/AdaBoostClassifier_RobustScaler.ipynb",
                        "keywords": "code template, classification, simple adaboost classifier,boosting ensemble learning technique, data rescaling technique, robustscaler function",
                        "display_url": "https://siberian.dev/classification/adaptive-boosting/adaboost-classification-with-robustscaler"
                    },
                    {
                        "name": "AdaBoostClassifier_Scale.ipynb",
                        "title": "AdaBoost Classification with Scale",
                        "description": "This Code template is for the Classification tasks using a simple AdaBoostClassifier based on the Boosting Ensemble Learning technique, along with the data rescaling technique using the Scale function.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Adaptive_Boosting/AdaBoostClassifier_Scale.ipynb",
                        "keywords": "code template, classification, simple adaboost classifier,boosting ensemble learning technique, data rescaling technique, scale, function",
                        "display_url": "https://siberian.dev/classification/adaptive-boosting/adaboost-classification-with-scale"
                    },
                    {
                        "name": "AdaBoostClassifier_StandardScaler.ipynb",
                        "title": "AdaBoost Classification with StandardScaler",
                        "description": "This Code template is for the Classification tasks using an AdaBoostClassifier based on the Boosting Ensemble Learning technique. StandardScaler is utilized for data rescaling before model training for classification.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Adaptive_Boosting/AdaBoostClassifier_StandardScaler.ipynb",
                        "keywords": "code template, classification,simple adaboost classifier,boosting, ensemble,learning technique, data rescaling technique, standardscaler, function",
                        "display_url": "https://siberian.dev/classification/adaptive-boosting/adaboost-classification-with-standardscaler"
                    }
                ]
            },
            {
                "name": "CatBoost",
                "models": [
                    {
                        "name": "CatBoostClassifier.ipynb",
                        "title": "Simple CatBoostClassifier",
                        "description": "This Code template is for classification using CatBoostClassifier. CatBoost is an algorithm for gradient boosting on decision trees. CatBoost name comes from two words Category and Boosting.",
                        "URL": "https://cdn.siberian.dev/code/Classification/CatBoost/CatBoostClassifier.ipynb",
                        "keywords": "code template, classification,catboostclassifier, catboost,gradient boosting, decision trees",
                        "display_url": "https://siberian.dev/classification/catboost/simple-catboostclassifier"
                    },
                    {
                        "name": "CatBoostClassifier_MaxAbsScaler.ipynb",
                        "title": "CatBoostClassifier with MaxAbsScaler",
                        "description": "This Code template is for the Classification task using CatBoostClassifier with the MaxAbsScaler feature scaling technique. CatBoost is a high-performance open-source library for gradient boosting on decision trees.",
                        "URL": "https://cdn.siberian.dev/code/Classification/CatBoost/CatBoostClassifier_MaxAbsScaler.ipynb",
                        "keywords": "code template, classification,catboostclassifier, maxabsscaler, scaling technique",
                        "display_url": "https://siberian.dev/classification/catboost/catboostclassifier-with-maxabsscaler"
                    },
                    {
                        "name": "CatBoostClassifier_MinMaxScaler.ipynb",
                        "title": "CatBoostClassifier with MinMaxScaler",
                        "description": "This Code template is for the Classification task using CatBoostClassifier with MinMaxScaler Rescaling Technique without a pipeline. In this demonstration, CatBoostClassifier from the CatBoost library is utilized.",
                        "URL": "https://cdn.siberian.dev/code/Classification/CatBoost/CatBoostClassifier_MinMaxScaler.ipynb",
                        "keywords": "code template, classification,catboostclassifier, minmaxscaler, rescaling technique, pipeline",
                        "display_url": "https://siberian.dev/classification/catboost/catboostclassifier-with-minmaxscaler"
                    },
                    {
                        "name": "CatBoostClassifier_Normalize.ipynb",
                        "title": "CatBoostClassifier with Normalize",
                        "description": "This Code template is for the Classification task using CatBoostClassifier. Before training the actual model, the training and test set will be normalized using Normalize function from the sci-kit learn library.",
                        "URL": "https://cdn.siberian.dev/code/Classification/CatBoost/CatBoostClassifier_Normalize.ipynb",
                        "keywords": "code template, classification,catboostclassifier, normalize, rescaling technique, pipeline",
                        "display_url": "https://siberian.dev/classification/catboost/catboostclassifier-with-normalize"
                    },
                    {
                        "name": "CatBoostClassifier_Pool.ipynb",
                        "title": "CatBoost Classification using Pool",
                        "description": "This Code template is for classification using CatBoostClassifier with data preprocessing via Pool. CatBoost is an algorithm for gradient boosting on decision trees. Pool used in CatBoost as a data structure to train a model from.",
                        "URL": "https://cdn.siberian.dev/code/Classification/CatBoost/CatBoostClassifier_Pool.ipynb",
                        "keywords": "code template, classification,catboostclassifier, data preprocessing, catboost,gradient boosting, decision, trees",
                        "display_url": "https://siberian.dev/classification/catboost/catboost-classification-using-pool"
                    },
                    {
                        "name": "CatBoostClassifier_StandardScaler.ipynb",
                        "title": "CatBoostClassifier with StandardScaler",
                        "description": "This Code template is for the Classification task using CatBoostClassifier. Along with model training, the template illustrates the impact of data rescaling using the StandardScaler function on the model accuracy.",
                        "URL": "https://cdn.siberian.dev/code/Classification/CatBoost/CatBoostClassifier_StandardScaler.ipynb",
                        "keywords": "code template, classification,catboostclassifier, standardscaler, rescaling technique, pipeline",
                        "display_url": "https://siberian.dev/classification/catboost/catboostclassifier-with-standardscaler"
                    }
                ]
            },
            {
                "name": "Decision_Tree",
                "models": [
                    {
                        "name": "DecisionTreeClassifier.ipynb",
                        "title": "Decision Tree Classification",
                        "description": "This Code template is for the Classification task using a simple DecisionTreeClassifier based on the Classification and Regression Trees algorithm. A Decision tree is a flowchart-like tree structure where each internal node denotes a test on an attribute, each branch represents an outcome of the test, and each leaf node holds an outcome label.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Decision_Tree/DecisionTreeClassifier.ipynb",
                        "keywords": "code template, classification,simple decisiontree classifier, regression trees,",
                        "display_url": "https://siberian.dev/classification/decision-tree/decision-tree-classification"
                    },
                    {
                        "name": "DecisionTreeClassifier_MaxAbsScaler.ipynb",
                        "title": "DecisionTreeClassifier with MaxAbsScaler",
                        "description": "This Code template is for the Classification task using a simple DecisionTreeClassifier based on the Classification and Regression Trees algorithm along with the Feature scaling technique MaxAbsScaler. The goal is to create a model that predicts the value of a target variable by learning simple decision rules inferred from the data features.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Decision_Tree/DecisionTreeClassifier_MaxAbsScaler.ipynb",
                        "keywords": "code template, classification,simple decision tree classifier,classification, regression trees,scaling technique, maxabsscaler",
                        "display_url": "https://siberian.dev/classification/decision-tree/decisiontreeclassifier-with-maxabsscaler"
                    },
                    {
                        "name": "DecisionTreeClassifier_MinMaxScaler.ipynb",
                        "title": "Decision Tree Classification with MinMax Scalar",
                        "description": "This Code template is for the Classification task using a simple DecisionTreeClassifier based on the Classification and Regression Trees algorithm along with the Feature scaling technique MinMaxScaler. A decision tree is the most powerful and popular tool for classification and prediction.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Decision_Tree/DecisionTreeClassifier_MinMaxScaler.ipynb",
                        "keywords": "code template, classification,simple decision tree classifier,regression trees,scaling technique, minmaxscaler",
                        "display_url": "https://siberian.dev/classification/decision-tree/decision-tree-classification-with-minmax-scalar"
                    },
                    {
                        "name": "DecisionTreeClassifier_Normalize.ipynb",
                        "title": "Decision Tree Classification with Normalization",
                        "description": "This Code template is for the Classification task using a simple DecisionTreeClassifier based on the Classification and Regression Trees algorithm. Before model training for classification, the data is normalized using the sci-kit learns Normalize function from preprocessing class.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Decision_Tree/DecisionTreeClassifier_Normalize.ipynb",
                        "keywords": "code template, classification,simple decision tree classifier, regression trees,scaling technique, normalize",
                        "display_url": "https://siberian.dev/classification/decision-tree/decision-tree-classification-with-normalization"
                    },
                    {
                        "name": "DecisionTreeClassifier_RobustScaler.ipynb",
                        "title": "Decision Tree Classification with Robust Scalar",
                        "description": "This Code template is for the Classification task using a DecisionTreeClassifier based on the Decision Trees algorithm along with the Feature scaling technique RobustScaler. A decision tree algorithm can be used for both regression and classification problems.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Decision_Tree/DecisionTreeClassifier_RobustScaler.ipynb",
                        "keywords": "code template, classification,simple decisiontreeclassifier, regression, trees scaling technique, robustscaler",
                        "display_url": "https://siberian.dev/classification/decision-tree/decision-tree-classification-with-robust-scalar"
                    },
                    {
                        "name": "DecisionTreeClassifier_Scale.ipynb",
                        "title": "Decision Tree Classification with Scale",
                        "description": "This Code template is for the Classification task using a simple DecisionTreeClassifier based on the Classification and Regression Trees algorithm along with the Feature scaling technique Scale. The sci-kit learn Scale function standardize a dataset along any axis. Center to the mean and component-wise scale to unit variance.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Decision_Tree/DecisionTreeClassifier_Scale.ipynb",
                        "keywords": "code template, classification,simple decision tree classifier,classification, regression, trees,scaling technique, scale",
                        "display_url": "https://siberian.dev/classification/decision-tree/decision-tree-classification-with-scale"
                    },
                    {
                        "name": "DecisionTreeClassifier_StandardScaler.ipynb",
                        "title": "Decision Tree Classification with Standard Scalar",
                        "description": "This Code template illustrates the Classification problem using  DecisionTreeClassifier based on the Classification and Regression Trees algorithm along with the Feature scaling technique StandardScaler. StandardScaler is one of the popular data-rescaling techniques in the data science community.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Decision_Tree/DecisionTreeClassifier_StandardScaler.ipynb",
                        "keywords": "code template, classification,simple decision tree classifier,classification regression trees, scaling technique, standardscaler,data science, data rescaling",
                        "display_url": "https://siberian.dev/classification/decision-tree/decision-tree-classification-with-standard-scalar"
                    }
                ]
            },
            {
                "name": "Extra_Trees",
                "models": [
                    {
                        "name": "ExtraTreesClassifier.ipynb",
                        "title": "Extra Trees Classifier",
                        "description": "This Code template is for the Classification tasks using simple ExtraTreesClassifier based on the Extremely randomized trees algorithm. It constructs the set of decision trees. During tree construction, the decision rule is randomly selected. This algorithm is very similar to Random Forest except for a random selection of split values.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Extra_Trees/ExtraTreesClassifier.ipynb",
                        "keywords": "code template, classification, simple extra trees classifier, randomized trees,",
                        "display_url": "https://siberian.dev/classification/extra-trees/extra-trees-classifier"
                    },
                    {
                        "name": "ExtraTreesClassifier_MaxAbsScaler.ipynb",
                        "title": "Extra Trees Classifier with MaxAbsScaler",
                        "description": "This Code template is for the Classification tasks using a simple ExtraTreesClassifier based on the Extremely randomized trees algorithm, where the data rescaling technique used is the MaxAbsScaler function. As a decision tree-based algorithm, it doesn't require data normalization. But to understand its effects on the algorithm, the template uses MaxAbsScaler for the task.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Extra_Trees/ExtraTreesClassifier_MaxAbsScaler.ipynb",
                        "keywords": "code template, classification, simple extra trees classifier, extremely randomized trees, data rescaling technique, maxabsscaler function",
                        "display_url": "https://siberian.dev/classification/extra-trees/extra-trees-classifier-with-maxabsscaler"
                    },
                    {
                        "name": "ExtraTreesClassifier_MinMaxScaler.ipynb",
                        "title": "Extra Trees Classifier with MinMax Scaler",
                        "description": "This Code template is for the Classification tasks using a simple ExtraTreesClassifier based on the Extremely randomized trees algorithm. Also, the template utilized MinMaxScaler has the data rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Extra_Trees/ExtraTreesClassifier_MinMaxScaler.ipynb",
                        "keywords": "code template, classification, simple extra trees classifier, extremely randomized trees, data rescaling technique, minmaxscaler function",
                        "display_url": "https://siberian.dev/classification/extra-trees/extra-trees-classifier-with-minmax-scaler"
                    },
                    {
                        "name": "ExtraTreesClassifier_Normalize.ipynb",
                        "title": "Extra Trees Classifier with Normalize",
                        "description": "This Code template demonstrates the Classification tasks using a simple ExtraTreesClassifier based on the Extremely randomized trees algorithm, and data normalization is performed using the sci-kit learn's Normalize.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Extra_Trees/ExtraTreesClassifier_Normalize.ipynb",
                        "keywords": "code template, classification, simple extra trees classifier,extremely randomized trees,data rescaling technique, normalize function",
                        "display_url": "https://siberian.dev/classification/extra-trees/extra-trees-classifier-with-normalize"
                    },
                    {
                        "name": "ExtraTreesClassifier_RobustScaler.ipynb",
                        "title": "Extra Trees Classifier with Robust Scaler",
                        "description": "This Code template is for the Classification tasks using a simple ExtraTreesClassifier based on the Extremely randomized trees algorithm, where the data rescaling technique used is the RobustScaler function.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Extra_Trees/ExtraTreesClassifier_RobustScaler.ipynb",
                        "keywords": "code template, classification, simple extra trees classifier,extremely randomized trees,data rescaling technique, robustscaler function",
                        "display_url": "https://siberian.dev/classification/extra-trees/extra-trees-classifier-with-robust-scaler"
                    },
                    {
                        "name": "ExtraTreesClassifier_Scale.ipynb",
                        "title": "Extra Trees Classifier with Scale",
                        "description": "This Code template utilizes ExtraTreeClassifier from the sci-kit learns library for tabular Classification problems. For data normalization scale from preprocessing class of the sci-kit learn library has been used.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Extra_Trees/ExtraTreesClassifier_Scale.ipynb",
                        "keywords": "code template, classification, simple extra trees classifier,extremely randomized trees,data rescaling technique, scale function",
                        "display_url": "https://siberian.dev/classification/extra-trees/extra-trees-classifier-with-scale"
                    },
                    {
                        "name": "ExtraTreesClassifier_StandardScaler.ipynb",
                        "title": "Extra Trees Classifier with Standard Scaler",
                        "description": "The Code template is for the Classification problem utilizing an ExtraTreesClassifier based on the Extremely randomized trees algorithm along StandardScaler for data normalization.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Extra_Trees/ExtraTreesClassifier_StandardScaler.ipynb",
                        "keywords": "code template, classification, simple extra trees classifier,extremely randomized trees,data rescaling technique, standardscaler function",
                        "display_url": "https://siberian.dev/classification/extra-trees/extra-trees-classifier-with-standard-scaler"
                    }
                ]
            },
            {
                "name": "Gradient_Boosting_Machine",
                "models": [
                    {
                        "name": "GradientBoostingClassifier.ipynb",
                        "title": "Gradient Boosting Classification",
                        "description": "This Code template is for the Classification tasks using a simple GradientBoostingClassifier based on the Gradient Boosting Ensemble Learning Technique. The main idea behind this algorithm is to build models sequentially, and these subsequent models try to reduce the errors of the previous model.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Gradient_Boosting_Machine/GradientBoostingClassifier.ipynb",
                        "keywords": "code template, classification, simple gradient boosting classifier,gradient boosting,learning technique",
                        "display_url": "https://siberian.dev/classification/gradient-boosting-machine/gradient-boosting-classification"
                    },
                    {
                        "name": "GradientBoostingClassifier_MaxAbsScaler.ipynb",
                        "title": "GradientBoostingClassifier with MaxAbsScaler",
                        "description": "This Code template is for the Classification tasks using a GradientBoostingClassifier based on the Gradient Boosting Ensemble Learning Technique. The objective is to minimize this loss function by adding weak learners using gradient descent. The template also uses MaxAbsScaler for data rescaling/normalization.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Gradient_Boosting_Machine/GradientBoostingClassifier_MaxAbsScaler.ipynb",
                        "keywords": "code template, classification,gradient boosting classifier,gradient boosting, ensemble,learning technique, rescaling technique, maxabsscaler",
                        "display_url": "https://siberian.dev/classification/gradient-boosting-machine/gradientboostingclassifier-with-maxabsscaler"
                    },
                    {
                        "name": "GradientBoostingClassifier_MinMaxScaler.ipynb",
                        "title": "GradientBoostingClassifier with MinMaxScaler",
                        "description": "This Code template illustrates the Classification problem using a GradientBoostingClassifier based on the Gradient Boosting Ensemble Learning Technique. A gradient-boosting classifier is used when the target column is binary. MinMaxScaler is utilized for data normalization from the sci-kit learn library.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Gradient_Boosting_Machine/GradientBoostingClassifier_MinMaxScaler.ipynb",
                        "keywords": "code template, classification,gradient boosting classifier,gradient boosting, ensemble,learning technique, rescaling technique, minmaxscaler",
                        "display_url": "https://siberian.dev/classification/gradient-boosting-machine/gradientboostingclassifier-with-minmaxscaler"
                    },
                    {
                        "name": "GradientBoostingClassifier_Normalize.ipynb",
                        "title": "GradientBoostingClassifier with Normalizer",
                        "description": "This Code template illustrate GradientBoostingClassifier based on the Gradient Boosting Ensemble Learning Technique for classification problem and feature rescaling technique Normalization",
                        "URL": "https://cdn.siberian.dev/code/Classification/Gradient_Boosting_Machine/GradientBoostingClassifier_Normalize.ipynb",
                        "keywords": "code template, classification,gradient boosting classifier,gradient boosting, ensemble,learning technique, rescaling technique, normalization",
                        "display_url": "https://siberian.dev/classification/gradient-boosting-machine/gradientboostingclassifier-with-normalizer"
                    },
                    {
                        "name": "GradientBoostingClassifier_RobustScaler.ipynb",
                        "title": "GradientBoostingClassifier with RobustScaler",
                        "description": "The Code template is for the Classification problem on tabular data using a GradientBoostingClassifier based on the Gradient Boosting Ensemble Learning Technique. Gradient boosting trees can be more accurate than random forests. The template also employs RobustScaler for data rescaling.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Gradient_Boosting_Machine/GradientBoostingClassifier_RobustScaler.ipynb",
                        "keywords": "code template, classification,gradient boosting classifier,gradient boosting, ensemble,learning technique, rescaling technique, robustscaler",
                        "display_url": "https://siberian.dev/classification/gradient-boosting-machine/gradientboostingclassifier-with-robustscaler"
                    },
                    {
                        "name": "GradientBoostingClassifier_Scale.ipynb",
                        "title": "GradientBoostingClassifier with Scale",
                        "description": "This Code template utilizes Gradient Boosting Classifier for the Classification problems. The model is based on Boosting Approach of Ensemble learning. The data is normalized using the sci-kit learn Scale function.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Gradient_Boosting_Machine/GradientBoostingClassifier_Scale.ipynb",
                        "keywords": "code template, classification,gradient boosting classifier,gradient boosting, ensemble,learning technique, rescaling technique, scale",
                        "display_url": "https://siberian.dev/classification/gradient-boosting-machine/gradientboostingclassifier-with-scale"
                    },
                    {
                        "name": "GradientBoostingClassifier_StandardScaler.ipynb",
                        "title": "GradientBoostingClassifier with StandardScaler",
                        "description": "This Code template is for the Classification problem using a GradientBoostingClassifier. The gradient boosting algorithm is one of the most powerful algorithms in the field of machine learning. StandScaler is utilized as a data normalization technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Gradient_Boosting_Machine/GradientBoostingClassifier_StandardScaler.ipynb",
                        "keywords": "code template, classification,gradient boosting classifier,gradient boosting, ensemble,learning technique, rescaling technique, standardscaler",
                        "display_url": "https://siberian.dev/classification/gradient-boosting-machine/gradientboostingclassifier-with-standardscaler"
                    }
                ]
            },
            {
                "name": "Histogram_Based_Gradient_Boosting_Trees",
                "models": [
                    {
                        "name": "HistGradientBoostingClassifier.ipynb",
                        "title": "Histogram based Gradient Boosting Classification",
                        "description": "This Code template is for the Classification task using a simple Histogram based Gradient Boosting Trees. This estimator is much faster than GradientBoostingClassifier for big datasets.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingClassifier.ipynb",
                        "keywords": "code template, classification,simple, histogram,gradient boosting, trees, estimator, faster, gradientboostingclassifier, datasets",
                        "display_url": "https://siberian.dev/classification/histogram-based-gradient-boosting-trees/histogram-based-gradient-boosting-classification"
                    },
                    {
                        "name": "HistGradientBoostingClassifier_MaxAbsScaler.ipynb",
                        "title": "HistGradientBoostingClassifier with MaxAbsScaler",
                        "description": "This code template is for classification analysis using a HistGradientBoostingClassifier and the feature rescaling technique called MaxAbsScaler. The HistGradientBoostingClassifier is much faster than GradientBoostingClassifier for big datasets with more than 10000 entries or data points.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingClassifier_MaxAbsScaler.ipynb",
                        "keywords": "code template, classification,histgradient boosting classifier, rescaling technique,maxabsscaler",
                        "display_url": "https://siberian.dev/classification/histogram-based-gradient-boosting-trees/histgradientboostingclassifier-with-maxabsscaler"
                    },
                    {
                        "name": "HistGradientBoostingClassifier_MinMaxScaler.ipynb",
                        "title": "HistGradientBoostingClassifier with MinMaxScaler",
                        "description": "This code template is for classification analysis using a HistGradientBoostingClassifier. This estimator has native support for missing values (NaNs). During training, the tree grower learns at each split point whether samples with missing values should go to the left or right child based on the potential gain. MinMaxScaler is utilized for data normalization.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingClassifier_MinMaxScaler.ipynb",
                        "keywords": "code template, classification,histgradient boosting classifier, rescaling technique,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/histogram-based-gradient-boosting-trees/histgradientboostingclassifier-with-minmaxscaler"
                    },
                    {
                        "name": "HistGradientBoostingClassifier_Normalize.ipynb",
                        "title": "HistGradientBoostingClassifier with Normalize",
                        "description": "This code template is for classification analysis using a HistGradientBoostingClassifier and the feature rescaling technique called Normalizer. The implementation of HistGradientBoosting gets inspiration from the LightGBM framework.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingClassifier_Normalize.ipynb",
                        "keywords": "code template, classification,histgradient boosting classifier, rescaling technique,normalizer",
                        "display_url": "https://siberian.dev/classification/histogram-based-gradient-boosting-trees/histgradientboostingclassifier-with-normalize"
                    },
                    {
                        "name": "HistGradientBoostingClassifier_RobustScaler.ipynb",
                        "title": "HistGradientBoostingClassifier with RobustScaler",
                        "description": "This code template is for classification analysis using a HistGradientBoostingClassifier and the feature rescaling technique called RobustScaler. These histogram-based estimators can be orders of magnitude faster than GradientBoostingClassifier when the number of samples is larger than ten thousand.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingClassifier_RobustScaler.ipynb",
                        "keywords": "code template, classification,histgradient boosting classifier, rescaling technique,robustscaler",
                        "display_url": "https://siberian.dev/classification/histogram-based-gradient-boosting-trees/histgradientboostingclassifier-with-robustscaler"
                    },
                    {
                        "name": "HistGradientBoostingClassifier_Scale.ipynb",
                        "title": "HistGradientBoostingClassifier with Scale",
                        "description": "This code template demonstrates classification problem-solving using a HistGradientBoostingClassifier. Along with the Scale function from preprocessing class of sci-kit learn for data rescaling.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingClassifier_Scale.ipynb",
                        "keywords": "code template, classification,histgradient boosting classifier, rescaling technique,scale",
                        "display_url": "https://siberian.dev/classification/histogram-based-gradient-boosting-trees/histgradientboostingclassifier-with-scale"
                    },
                    {
                        "name": "HistGradientBoostingClassifier_StandardScaler.ipynb",
                        "title": "HistGradientBoostingClassifier with StandardScaler",
                        "description": "This code template is to solve classification problems using a HistGradientBoostingClassifier and the data rescaling technique called StandardScaler.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingClassifier_StandardScaler.ipynb",
                        "keywords": "code template, classification,histgradient boosting classifier, rescaling technique,standardscaler",
                        "display_url": "https://siberian.dev/classification/histogram-based-gradient-boosting-trees/histgradientboostingclassifier-with-standardscaler"
                    }
                ]
            },
            {
                "name": "k-Nearest_Neighbor",
                "models": [
                    {
                        "name": "KNeighborsClassifier.ipynb",
                        "title": "K-Nearest Neighbor Classifier",
                        "description": "This Code template is for the Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm. K-Nearest Neighbour is one of the simplest Machine Learning algorithms based on the Supervised Learning technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/k-nearest-neighbor-classifier"
                    },
                    {
                        "name": "KNeighborsClassifier_MaxAbsScaler.ipynb",
                        "title": "KNeighborsClassifier with MaxAbsScaler",
                        "description": "This Code template is for the Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm. MaxAbsScaler is utilized for data rescaling to reduce the computational complexity of the distance matrix.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_MaxAbsScaler.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors, maxabsscaler technique",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/kneighborsclassifier-with-maxabsscaler"
                    },
                    {
                        "name": "KNeighborsClassifier_MaxAbsScaler_PowerTransformer.ipynb",
                        "title": "KNeighborsClassifier with MaxAbsScaler & PowerTransformer",
                        "description": "This Code template is for the Classification task using KNeighborsClassifier. K-NN algorithm stores all the available data and classifies a new data point based on the similarity. The template utilizes the MaxAbsScaler feature scaling technique and PowerTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_MaxAbsScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,kneighborsclassifier, maxabsscaler, scaling technique, powertransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/kneighborsclassifier-with-maxabsscaler-&-powertransformer"
                    },
                    {
                        "name": "KNeighborsClassifier_MaxAbsScaler_QuantileTransformer.ipynb",
                        "title": "KNeighborsClassifier with MaxAbsScaler & QuantileTransformer",
                        "description": "This Code template is for the Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm along with the data rescaling technique MaxAbsScaler and feature transformation technique QuantileTransformer in a pipeline. The k-NN algorithm can be used for Regression but frequently is used for Classification problems.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_MaxAbsScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,data rescaling technique, maxabsscaler, data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/kneighborsclassifier-with-maxabsscaler-&-quantiletransformer"
                    },
                    {
                        "name": "KNeighborsClassifier_MinMaxScaler.ipynb",
                        "title": "K-Nearest Neighbor Classifier with MinMaxScaler",
                        "description": "This Code template is for the Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm and feature rescaling technique MinMaxScaler in a pipeline. K-NN is also known as a lazy learner algorithm because it does not learn from the training set immediately. Instead, it stores the dataset, and at the time of classification, it acts on the dataset.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_MinMaxScaler.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/k-nearest-neighbor-classifier-with-minmaxscaler"
                    },
                    {
                        "name": "KNeighborsClassifier_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "KNeighborsClassifier with MinMaxScaler & Polynomial Features",
                        "description": "This Code template is for the Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm. MinMaxScaler and Polynomial Features are used for rescaling and feature transformation in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,minmaxscalerpolynomial, s, rescaling, data tranformation, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/kneighborsclassifier-with-minmaxscaler-&-polynomial-features"
                    },
                    {
                        "name": "KNeighborsClassifier_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "KNeighborsClassifier with MinMaxScaler & Power Transformer",
                        "description": "This Code template is for the Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm. MinMaxScaler and PowerTransformer are used in Pipeline for data rescaling and transformation.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,minmaxscaler, rescaling, powertransformer, data tranformation, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/kneighborsclassifier-with-minmaxscaler-&-power-transformer"
                    },
                    {
                        "name": "KNeighborsClassifier_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "KNeighborsClassifier with MinMaxScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm. MinMaxScaler and QuantileTransformer get utilized for data rescaling and feature transformation. A pipeline from sci-kit learn is used to fit all three operations.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,minmaxscalerquantiletransformer, rescaling, data tranformation, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/kneighborsclassifier-with-minmaxscaler-&-quantile-transformer"
                    },
                    {
                        "name": "KNeighborsClassifier_Normalize.ipynb",
                        "title": "K-Nearest Neighbor Classifier with Normalize",
                        "description": "This Demonstration is for K-Nearest Neighbor Classifier for the Classification problem. It also includes data normalization using sci-kit learn's  Normalize function from preprocessing class.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_Normalize.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,rescaling technique, normalize, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/k-nearest-neighbor-classifier-with-normalize"
                    },
                    {
                        "name": "KNeighborsClassifier_Normalize_QuantileTransformer.ipynb",
                        "title": "KNeighborsClassifier with Normalizer & QuantileTransformer",
                        "description": "This Code template is for the Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm along with Normalize and Quantile Transformer. Normalize, and QuantileTransformer are for data rescaling and transformation. Quantile Transformation is a non-parametric data transformation technique to transform your numerical data distribution to follow a certain data distribution.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_Normalize_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,normalize, quantile transformer, rescaling, data tranformation, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/kneighborsclassifier-with-normalizer-&-quantiletransformer"
                    },
                    {
                        "name": "KNeighborsClassifier_PolynomialFeatures.ipynb",
                        "title": "K-Nearest Neighbor Classifier with PolynomialFeatures",
                        "description": "This Code template is for the Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm and polynomial feature transformation in a pipeline. Polynomial Feature is a simple method that can get features\u2019 high-order and interaction terms.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,polynomial, data tranformation, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/k-nearest-neighbor-classifier-with-polynomialfeatures"
                    },
                    {
                        "name": "KNeighborsClassifier_PowerTransformer.ipynb",
                        "title": "K-Nearest Neighbor Classifier with PowerTransformer",
                        "description": "This Code template is for the Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm and feature transformation technique PowerTransformer in a pipeline. Power Transformer is often used to transform data to follow the Normal Distribution.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/k-nearest-neighbor-classifier-with-powertransformer"
                    },
                    {
                        "name": "KNeighborsClassifier_QuantileTransformer.ipynb",
                        "title": "K-Nearest Neighbor Classifier with QuantileTransformer",
                        "description": "This Code template is for the Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm and feature transformation technique QuantileTransformer in a pipeline. In the Scikit-Learn, the Quantile Transformer can transform the data into Normal distribution or Uniform distribution.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/k-nearest-neighbor-classifier-with-quantiletransformer"
                    },
                    {
                        "name": "KNeighborsClassifier_RobustScaler.ipynb",
                        "title": "K-Nearest Neighbor Classifier with RobustScaler",
                        "description": "This Code template illustrates the Classification problem solving using KNeighborsClassifier and feature rescaling technique RobustScaler in a pipeline from sci-kit learn.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_RobustScaler.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,rescaling technique, robustscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/k-nearest-neighbor-classifier-with-robustscaler"
                    },
                    {
                        "name": "KNeighborsClassifier_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "KNeighborsClassifier with RobustScaler & Polynomial Features",
                        "description": "This Code template is for the Classification task using a simple KNeighborsClassifier. RobustScaler and PolynomialFeatures are used for rescaling and feature transformation in a pipeline. The purpose of the pipeline is to assemble several steps that can be cross-validated together while setting different parameters.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,robustscaler, polynomials features, rescaling, data tranformation, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/kneighborsclassifier-with-robustscaler-&-polynomial-features"
                    },
                    {
                        "name": "KNeighborsClassifier_RobustScaler_PowerTransformer.ipynb",
                        "title": "KNeighborsClassifier with RobustScaler & PowerTransformer",
                        "description": "This Code template is for the Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm. The model is fitted in Pipeline along with RobustScaler and PowerTransformer for data rescaling and data transformation.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,robust scaler power transformer, rescaling, data tranformation, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/kneighborsclassifier-with-robustscaler-&-powertransformer"
                    },
                    {
                        "name": "KNeighborsClassifier_RobustScaler_QuantileTransformer.ipynb",
                        "title": "KNeighborsClassifier with RobustScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification task using a simple KNeighborsClassifier. KNeighborsClassifier, RobustScaler, and QuantileTransformer are fitted in a sci-kit learn pipeline. RobustScaler and QuantileTransformer are utilized for data engineering.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,robustscaler, quantile transformer, rescaling, data tranformation, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/kneighborsclassifier-with-robustscaler-&-quantile-transformer"
                    },
                    {
                        "name": "KNeighborsClassifier_Scale.ipynb",
                        "title": "K-Nearest Neighbor Classifier with Scale",
                        "description": "This Code template is for the Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm and scale separately. The algorithm at the training phase stores the data points, and when it gets new data or input, then it classifies that data into a category that is much similar or closer to the new data.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_Scale.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,scale,",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/k-nearest-neighbor-classifier-with-scale"
                    },
                    {
                        "name": "KNeighborsClassifier_Scale_PolynomialFeatures.ipynb",
                        "title": "KNeighborsClassifier with Scale & Polynomial Features",
                        "description": "This Code template demonstrates the ability of KNeighorsClassifier to solve Classification problems in python. The code also utilizes Scale, PolynomialFeatures for rescaling, and feature transformation in a sci-kit learn pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_Scale_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,scale, polynomials, rescaling, data tranformation, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/kneighborsclassifier-with-scale-&-polynomial-features"
                    },
                    {
                        "name": "KNeighborsClassifier_Scale_PowerTransformer.ipynb",
                        "title": "KNeighborsClassifier with Scale & Power Transformer",
                        "description": "This Code template demonstrates how to solve tabular classification problems using a sci-kit learn pipeline. The pipeline includes PowerTransformer for data transformation, and KNeighborsClassifier has the estimator.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,scale power, transformer, rescaling, data tranformation, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/kneighborsclassifier-with-scale-&-power-transformer"
                    },
                    {
                        "name": "KNeighborsClassifier_StandardScaler.ipynb",
                        "title": "K-Nearest Neighbor Classifier with StandardScaler",
                        "description": "This Code template is for the Classification task using a simple KNeighborsClassifier based on the K-Nearest Neighbors algorithm. Before model training, the data is normalized using StandardScaler to reduce the complexity of the data.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_StandardScaler.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/k-nearest-neighbor-classifier-with-standardscaler"
                    },
                    {
                        "name": "KNeighborsClassifier_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "KNeighborsClassifier with StandardScaler & Polynomial Features",
                        "description": "This Code template is for the KNeighborsClassifier estimator based on K-Nearest Neighbors algorithm. The template also includes StandardScaler and PolynomialFeatures functions for data engineering tasks.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,standard scaler polynomials, rescaling, data tranformation, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/kneighborsclassifier-with-standardscaler-&-polynomial-features"
                    },
                    {
                        "name": "KNeighborsClassifier_StandardScaler_PowerTransformer.ipynb",
                        "title": "KNeighborsClassifier with StandardScaler & Power Transformer",
                        "description": "This Code template is for the Classification problem using a KNeighborsClassifier based on the K-Nearest Neighbors algorithm. The Algorithm is ideal for non-linear data since there's no assumption about underlying data. The StandardScaler and PowerTransformer are used for rescaling and feature transformation in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,standard scaler power transformer, rescaling, data tranformation, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/kneighborsclassifier-with-standardscaler-&-power-transformer"
                    },
                    {
                        "name": "KNeighborsClassifier_StandardScaler_QuantileTransformer.ipynb",
                        "title": "KNeighborsClassifier with StandardScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification task using a K-Nearest Neighbors algorithm-based estimator KNeighborsClassifier. StandardScaler and QuantileTransformer are used for data rescaling and data transformation in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/k-Nearest_Neighbor/KNeighborsClassifier_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple kneighbors classifier,knearest neighbors,standard scaler quantile transformer, rescaling, data tranformation, pipeline",
                        "display_url": "https://siberian.dev/classification/k-nearest-neighbor/kneighborsclassifier-with-standardscaler-&-quantile-transformer"
                    }
                ]
            },
            {
                "name": "LightGBM",
                "models": [
                    {
                        "name": "LGBMClassifier.ipynb",
                        "title": "Simple LGBMClassifier",
                        "description": "This Code template is for the Classification task using LGBMClassifier. It is a decision Tree-based ensemble Machine Learning algorithm that uses a Gradient Boosting framework.",
                        "URL": "https://cdn.siberian.dev/code/Classification/LightGBM/LGBMClassifier.ipynb",
                        "keywords": "code template, classification,lgbmclassifier, decision, treebased, ensemble, machine learning,gradient boosting, framework",
                        "display_url": "https://siberian.dev/classification/lightgbm/simple-lgbmclassifier"
                    },
                    {
                        "name": "LGBMClassifier_MaxAbsScaler.ipynb",
                        "title": "LGBMClassifier with MaxAbsScaler",
                        "description": "This Code template is for the Classification task using LGBMClassifier. LightGBM is a gradient-boosting framework based on decision trees to increase the efficiency of the model and reduces memory usage. MaxAbsScaler is utilized for data normalization.",
                        "URL": "https://cdn.siberian.dev/code/Classification/LightGBM/LGBMClassifier_MaxAbsScaler.ipynb",
                        "keywords": "code template, classification,lgbmclassifier, decision, treebased, ensemble, machine learning,gradient boosting, framework, maxabsscaler, scaling, gpu",
                        "display_url": "https://siberian.dev/classification/lightgbm/lgbmclassifier-with-maxabsscaler"
                    },
                    {
                        "name": "LGBMClassifier_MinMaxScaler.ipynb",
                        "title": "LGBMClassifier with MinMaxScaler",
                        "description": "This Code template is for the Classification task using LGBMClassifier with data scaling with MinMaxScaler. LightGBM uses two novel techniques: Gradient-based One Side Sampling and Exclusive Feature Bundling (EFB), which fulfills the limitations of the histogram-based algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Classification/LightGBM/LGBMClassifier_MinMaxScaler.ipynb",
                        "keywords": "code template, classification,lgbmclassifier,data scaling, minmaxscaler, decision, treebased, ensemble, machine learning,gradient boosting, framework",
                        "display_url": "https://siberian.dev/classification/lightgbm/lgbmclassifier-with-minmaxscaler"
                    },
                    {
                        "name": "LGBMClassifier_Normalize.ipynb",
                        "title": "LGBMClassifier with Normalize",
                        "description": "This Code template is for the Classification task using LGBMClassifier with data scaling with Normalize. LightGBM has a faster rate of execution, along with being able to maintain good accuracy levels.",
                        "URL": "https://cdn.siberian.dev/code/Classification/LightGBM/LGBMClassifier_Normalize.ipynb",
                        "keywords": "code template, classification,lgbmclassifier,data scaling, normalize, decision treebased, ensemble, machine learning,gradient boosting, framework",
                        "display_url": "https://siberian.dev/classification/lightgbm/lgbmclassifier-with-normalize"
                    },
                    {
                        "name": "LGBMClassifier_StandardScaler.ipynb",
                        "title": "LGBMClassifier with StandardScaler",
                        "description": "This Code template is for the Classification task using LGBMClassifier with data scaling with StandardScaler. The LightGBM algorithm performs well in machine learning competitions because of its robust handling of a variety of data types, relationships, and distributions.",
                        "URL": "https://cdn.siberian.dev/code/Classification/LightGBM/LGBMClassifier_StandardScaler.ipynb",
                        "keywords": "code template, classification,lgbmclassifier,data scaling, standardscaler, decision, treebased, ensemble, machine learning,gradient boosting, framework",
                        "display_url": "https://siberian.dev/classification/lightgbm/lgbmclassifier-with-standardscaler"
                    }
                ]
            },
            {
                "name": "Linear_Models",
                "models": [
                    {
                        "name": "LogisticRegression.ipynb",
                        "title": "Logistic Regression",
                        "description": "This Code template is for the Classification tasks using Logistic Regression. In statistics, the logistic model (or logit model) is a statistical model that models the probability of an event taking place by having the log odds for the event be a linear combination of one or more independent variables.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression.ipynb",
                        "keywords": "code template, classification, logistic regression, rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logistic-regression"
                    },
                    {
                        "name": "LogisticRegression_MaxAbsScaler_PolynomailFeatures.ipynb",
                        "title": "LogisticRegression with MaxAbsScaler and PolynomialFeatures",
                        "description": "This Code template is for the Classification task using LogisticRegression along with MaxAbsScaler feature scaling technique and PolynomialFeatures as Feature Transformation Technique in a pipeline. All the utilized estimators and functions are available in the sci-kit to learn.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_MaxAbsScaler_PolynomailFeatures.ipynb",
                        "keywords": "code template, classification,logisticregression, maxabsscaler, scaling technique, polynomials, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logisticregression-with-maxabsscaler-and-polynomialfeatures"
                    },
                    {
                        "name": "LogisticRegression_MaxAbsScaler_PowerTransformer.ipynb",
                        "title": "Logistic Regression with MaxAbsScaler & PowerTransformer",
                        "description": "This Code template is for the Classification tasks using LogisticRegression with MaxAbsScaler feature scaling technique and PowerTransformer as Feature Transformation Technique in a pipeline. In regression analysis, logistic regression or logit regression is estimating the parameters of a logistic model (the coefficients in the linear combination).",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_MaxAbsScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification, logisticregression, maxabsscaler, scaling technique,powertransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logistic-regression-with-maxabsscaler-&-powertransformer"
                    },
                    {
                        "name": "LogisticRegression_MinMaxScaler.ipynb",
                        "title": "Logistic Regression with MinMaxScaler",
                        "description": "This Code template is for the Classification tasks using Logistic Regression and feature rescaling technique MinMaxScaler in a pipeline. Logistic regression is used in various fields, including machine learning, most medical fields, and social sciences.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_MinMaxScaler.ipynb",
                        "keywords": "code template, classification, logistic regression, rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logistic-regression-with-minmaxscaler"
                    },
                    {
                        "name": "LogisticRegression_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "LogisticRegression with MinMaxScaler & PolynomialTransformer",
                        "description": "This Code template is for the Classification task using LogisticRegression with MinMaxScaler feature scaling technique and PolynomialTransformer as Feature Transformation Technique in a pipeline. Logistic regression can be used to predict the risk of developing a given disease based on the observed characteristics of the patient.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,logisticregression, minmaxscaler, scaling technique, polynomialtransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logisticregression-with-minmaxscaler-&-polynomialtransformer"
                    },
                    {
                        "name": "LogisticRegression_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "LogisticRegression with MinMaxScaler & PowerTransformer",
                        "description": "This Code template is for the Classification task using LogisticRegression from sci-kit learn along with the MinMaxScaler feature scaling technique and PowerTransformer as Feature Transformation Technique in a pipeline. Logistic regression can be seen as a special case of the generalized linear model and is thus analogous to linear regression.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,logisticregression, minmaxscaler, scaling technique, powertransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logisticregression-with-minmaxscaler-&-powertransformer"
                    },
                    {
                        "name": "LogisticRegression_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "LogisticRegression with MinMaxScaler & QuantileTransformer",
                        "description": "This Code template is for the Classification task using LogisticRegression with MinMaxScaler feature scaling technique and QuantileTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,logisticregression, minmaxscaler, scaling technique, quantiletransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logisticregression-with-minmaxscaler-&-quantiletransformer"
                    },
                    {
                        "name": "LogisticRegression_Normalize.ipynb",
                        "title": "Logistic Regression with Normalizer",
                        "description": "This Code template is for the Classification tasks using Logistic Regression and feature rescaling technique Normalizer. Logistic regression is also known in the literature as logit regression, maximum-entropy classification (MaxEnt), or the log-linear classifier.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_Normalize.ipynb",
                        "keywords": "code template, classification, logistic regression, rescaling technique, normalizer",
                        "display_url": "https://siberian.dev/classification/linear-models/logistic-regression-with-normalizer"
                    },
                    {
                        "name": "LogisticRegression_Normalize_PolynomialFeatures.ipynb",
                        "title": "LogisticRegression with Normalize & PolynomialFeatures",
                        "description": "This Code template is for the Classification problem using a simple LogisticRegression where separate data rescaling and feature transformation are applied using Normalize and PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple logistic regression,rescaling,normalize, data tranformation,polynomials, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logisticregression-with-normalize-&-polynomialfeatures"
                    },
                    {
                        "name": "LogisticRegression_Normalize_PowerTransformer.ipynb",
                        "title": "LogisticRegression with Normalize & PowerTransformer",
                        "description": "The Code template utilizes LogisticRegression for tabular classification problems. The demonstration also includes Normalize and Power Transformer functions for data engineering.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_Normalize_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple logistic regression,rescaling,normalize, data tranformation,powertransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logisticregression-with-normalize-&-powertransformer"
                    },
                    {
                        "name": "LogisticRegression_Normalize_QuantileTransformer.ipynb",
                        "title": "LogisticRegression with Normalize & Quantile Transformer",
                        "description": "This Code template is for the Classification task using the LogisticRegression. Logistic regression is a classification algorithm used to find the probability of event success and failure. It is used when the dependent variable is binary. The template also includes Normalize feature scaling technique and QuantileTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_Normalize_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,logisticregression, normalize, scaling technique, quantiletransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logisticregression-with-normalize-&-quantile-transformer"
                    },
                    {
                        "name": "LogisticRegression_PolynomialFeatures.ipynb",
                        "title": "Logistic Regression with PolynomialFeatures",
                        "description": "This Code template is for the Classification tasks using Logistic Regression and the feature transformation technique PolynomialFeatures in a pipeline. Polynomial features are those features created by raising existing features to an exponent.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification, logistic regression, data tranformation technique, polynomials, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logistic-regression-with-polynomialfeatures"
                    },
                    {
                        "name": "LogisticRegression_PowerTransformer.ipynb",
                        "title": "LogisticRegression with Power Transformer",
                        "description": "This Code template is for the Classification tasks using LogisticRegression. Logistic regression is also known as Binomial logistics regression. It is based on a sigmoid function where output is probability and input can be from -infinity to +infinity.  A power Transformer is utilized to make data more Gaussian-like.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_PowerTransformer.ipynb",
                        "keywords": "code template, classification, logisticregression, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logisticregression-with-power-transformer"
                    },
                    {
                        "name": "LogisticRegression_QuantileTransformer.ipynb",
                        "title": "LogisticRegression with Quantile Transformer",
                        "description": "This Code template is for the Classification tasks using the LogisticRegression and feature transformation technique QuantileTransformer in a pipeline. Logistic regression is easier to implement and interpret.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_QuantileTransformer.ipynb",
                        "keywords": "code template, classification, logisticregression, data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logisticregression-with-quantile-transformer"
                    },
                    {
                        "name": "LogisticRegression_RobustScaler.ipynb",
                        "title": "Logistic Regression with RobustScaler",
                        "description": "This Code template is for the Classification tasks using Logistic Regression. The algorithm makes no assumptions about distributions of classes in feature space. The template uses the data normalization technique RobustScaler in a sci-kit learn pipeline class.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_RobustScaler.ipynb",
                        "keywords": "code template, classification, logistic regression, rescaling technique, robustscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logistic-regression-with-robustscaler"
                    },
                    {
                        "name": "LogisticRegression_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "LogisticRegression with RobustScaler & PolynomialTransformer",
                        "description": "The demonstrating code template is for solving the Classification problem using the LogisticRegression algorithm. The demonstration also includes data engineering techniques such as data rescaling and transformation using RobustScaler, and PolynomialTransformer respectively.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,logisticregression, robustscaler, scaling technique, polynomials, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logisticregression-with-robustscaler-&-polynomialtransformer"
                    },
                    {
                        "name": "LogisticRegression_RobustScaler_PowerTransformer.ipynb",
                        "title": "LogisticRegression with RobustScaler & Power Transformer",
                        "description": "The Code Template uses a Logistic Regression estimator from the sci-kit learn library for tabular data classification. The data science pipeline also includes data rescaling and data transformation. For the mentioned task, RobustScaler and PowerTransformer from sci-kit learn are utilized.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,logisticregression, robustscaler, scaling technique, powertransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logisticregression-with-robustscaler-&-power-transformer"
                    },
                    {
                        "name": "LogisticRegression_RobustScaler_QuantileTransformer.ipynb",
                        "title": "LogisticRegression with RobustScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification task using the LogisticRegression. The estimator is less inclined to over-fitting, but it can overfit in high dimensional datasets. The sample also includes RobustScaler and QuantileTransformer in a pipeline along with the model.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,logisticregression, robustscaler, scaling technique, quantiletransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logisticregression-with-robustscaler-&-quantile-transformer"
                    },
                    {
                        "name": "LogisticRegression_Scale.ipynb",
                        "title": "Logistic Regression with Scale",
                        "description": "The Code is for the Classification problem using Logistic Regression and feature rescaling technique Scale. The algorithm is very fast at classifying unknown records.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_Scale.ipynb",
                        "keywords": "code template, classification, logistic regression, rescaling technique, scale",
                        "display_url": "https://siberian.dev/classification/linear-models/logistic-regression-with-scale"
                    },
                    {
                        "name": "LogisticRegression_Scale_PolynomialFeatures.ipynb",
                        "title": "LogisticRegression with Scale & PolynomialFeatures",
                        "description": "This Code template is for the Classification task using a simple LogisticRegression. It is very fast algorithm for classifying unknown records. Illustration also includes data rescaling using Scale and feature transformation using PolynomialFeatures in a sci-kit learn pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_Scale_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple logistic regression, rescaling,scale, data tranformation,polynomials, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logisticregression-with-scale-&-polynomialfeatures"
                    },
                    {
                        "name": "LogisticRegression_Scale_PowerTransformer.ipynb",
                        "title": "LogisticRegression with Scale & Power Transformer",
                        "description": "This Code template is for the Classification task using a LogisticRegression. The module also illustrates the effect of data rescaling using Scale and data transformation using a Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, classificaiton,simple logistic regression, rescaling,scale, data tranformation,power transformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logisticregression-with-scale-&-power-transformer"
                    },
                    {
                        "name": "LogisticRegression_Scale_QuantileTransformer.ipynb",
                        "title": "LogisticRegression with Scale & QuantileTransformer",
                        "description": "The code template can be used for the classification analysis using a LogisticRegression. Logistic regression is easier to implement and interpret algorithm. The template also utilizes the sci-kit learn Pipeline class to perform data rescaling transformation through Scale and QuantileTransformer while fitting the model.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_Scale_QuantileTransformer.ipynb",
                        "keywords": "code template, classification, simple logistic regression, scaling,data tranformation,quantile transformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logisticregression-with-scale-&-quantiletransformer"
                    },
                    {
                        "name": "LogisticRegression_StandardScaler.ipynb",
                        "title": "Logistic Regression with StandardScaler",
                        "description": "This Code template is for the Classification tasks using simple Logistic Regression. Logistic regression is also known as logit regression, maximum-entropy classification, or the log-linear classifier. The template also includes StandardScale from the scikit learns preprocessing class for the data normalization task.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_StandardScaler.ipynb",
                        "keywords": "code template, classification, simple logistic regression, logistic regression, logit regression, maximumentropy, classification, loglinear classifier",
                        "display_url": "https://siberian.dev/classification/linear-models/logistic-regression-with-standardscaler"
                    },
                    {
                        "name": "LogisticRegression_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "LogisticRegression with StandardScaler & Polynomial Features",
                        "description": "The Code template includes a data science pipeline to solve tabular classification problems using a Logistic Regression estimator along with StandardScaler, and Polynomial Features has a data engineering process.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,logisticregression, standardscaler, scaling technique, polynomials, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logisticregression-with-standardscaler-&-polynomial-features"
                    },
                    {
                        "name": "LogisticRegression_StandardScaler_PowerTransformer.ipynb",
                        "title": "LogisticRegression with StandardScaler & Power Transformer",
                        "description": "The Classification template utilizes the LogisticRegression with StandardScaler feature scaling technique and PowerTransformer as Feature Transformation Technique. Logistic regression is used when the target variable takes only two values, and if the data is linearly separable, it is more efficient to classify it into two separate classes. The pipeline is utilized to fit the model/estimator along with data engineering methods.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,logisticregression, standardscaler, scaling technique, powertransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logisticregression-with-standardscaler-&-power-transformer"
                    },
                    {
                        "name": "LogisticRegression_StandardScaler_QuantileTransformer.ipynb",
                        "title": "LogisticRegression with StandardScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification task using the LogisticRegression with StandardScaler feature scaling technique and QuantileTransformer as Feature Transformation Technique in a pipeline. Logistic regression analysis is used to examine the association of (categorical or continuous) independent variable(s) with one dichotomous dependent variable.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/LogisticRegression_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,logisticregression, standardscaler, scaling technique, quantiletransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/logisticregression-with-standardscaler-&-quantile-transformer"
                    },
                    {
                        "name": "Perceptron.ipynb",
                        "title": "Simple Perceptron Classifier",
                        "description": "This Code template is for the Classification task using simple Perceptron. It is a simple classification algorithm suitable for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron.ipynb",
                        "keywords": "code template, classification,simple perceptron, simple, classification,suitable, scale, learning",
                        "display_url": "https://siberian.dev/classification/linear-models/simple-perceptron-classifier"
                    },
                    {
                        "name": "Perceptron_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "title": "Perceptron with MaxAbsScaler & PolynomialFeatures",
                        "description": "This Code template is for the Classification task using simple Perceptron. A Perceptron is a neural network unit that does certain computations to detect features or business intelligence in the input data. Along with the model fitting template utilizes MaxAbsScaler and Polynomial Features for data engineering tasks.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple perceptron, scaling technique, maxabsscaler, transformer, powertransformer",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-maxabsscaler-&-polynomialfeatures"
                    },
                    {
                        "name": "Perceptron_MaxAbsScaler_PowerTransformer.ipynb",
                        "title": "Perceptron with MaxAbsScaler & PowerTransformer",
                        "description": "This Code template illustrates the Classification task using simple Perceptron. The algorithm is a two-class (binary) classification machine learning algorithm. Code also includes the feature rescaling technique MaxAbsScaler and the feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_MaxAbsScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple perceptron, rescaling technique, maxabsscaler, data tranformation technique, powertransformer, pipeline, simple classification, ",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-maxabsscaler-&-powertransformer"
                    },
                    {
                        "name": "Perceptron_MinMaxScaler.ipynb",
                        "title": "Perceptron with MinMaxScaler",
                        "description": "This Code Sample is for the Classification problem using a Perceptron. Perceptron is a type of neural network model, perhaps the simplest type of neural network model. It consists of a single node or neuron that takes a row of data as input and predicts a class label. MinMaxScaler is utilized to normalize the given data before training the model on it.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_MinMaxScaler.ipynb",
                        "keywords": "code template, classification,perceptron, data rescaling technique, minmaxscaler function, pipeline, simple classification, ",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-minmaxscaler"
                    },
                    {
                        "name": "Perceptron_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Perceptron with MinMaxScaler & Polynomial Features",
                        "description": "This Code template is for the Classification task using simple Perceptron. The perceptron model enables machines to automatically learn coefficients of weight which helps in classifying the inputs. Data engineering technique like data rescaling and transformation is utilized to understand their effect on the model result and performance. For this task, MinMaxScaler and PolynomialFeatures are utilized.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple perceptron, simple classification,scale learning, data tranformation technique, polynomials, rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-minmaxscaler-&-polynomial-features"
                    },
                    {
                        "name": "Perceptron_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Perceptron with MinMaxScaler & Power Transformer",
                        "description": "The demonstration is for the Classification problem using the Perceptron algorithm by utilizing the perceptron estimator available in the sci-kit learn library. The algorithm is also recognized as the Linear Binary Classifier. The perceptron model is extremely efficient and helpful in arranging the input data and classifying the same into different classes. The demonstration also includes MinMaxScaler and PowerTransformer for data engineering.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple perceptron, scaling technique, minmaxscaler, transformer, power, transformer",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-minmaxscaler-&-power-transformer"
                    },
                    {
                        "name": "Perceptron_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Perceptron with MinMaxScaler & QuantileTransformer",
                        "description": "The Code demonstration is for tabular Classification using the Perceptron algorithm using perceptron estimator. A perceptron is a single-layer neural network, and a multi-layer perceptron is called Neural Network. MinMaxScaler and QuantileTransformer are used to normalize and manipulate distribution before model training.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple perceptron, scaling technique, minmaxscaler, transformer, quantile transformer",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-minmaxscaler-&-quantiletransformer"
                    },
                    {
                        "name": "Perceptron_Normalize.ipynb",
                        "title": "Perceptron with Normalize",
                        "description": "This Code template is for the Classification task using a Perceptron, and the data rescaling technique used is the StandardScaler in a pipeline. The perceptron is a mathematical model of a biological neuron. While in actual neurons, the dendrite receives electrical signals from the axons of other neurons. In the perceptron, these electrical signals are represented as numerical values.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_Normalize.ipynb",
                        "keywords": "code template, classification,perceptron, data rescaling technique, standardscaler, function, pipeline, simple, classification,suitable, scale, learning",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-normalize"
                    },
                    {
                        "name": "Perceptron_Normalize_PolynomialFeatures.ipynb",
                        "title": "Perceptron with Normalize & Polynomial Features",
                        "description": "This Code template is for the Classification task using simple Perceptron. The Perceptron always converges to the best linear separator for a given dataset. The convergence criteria for Perceptron depend on the initial value of the weight vector. The template also includes Normalize for data rescaling and Polynomial Features to generate a matrix consisting of all polynomial combinations of the features with a degree less than or equal to the specified degree.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple perceptron, scaling technique, normalize, polynomial,data tranformation technique",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-normalize-&-polynomial-features"
                    },
                    {
                        "name": "Perceptron_Normalize_PowerTransformer.ipynb",
                        "title": "Perceptron with Normalize & Power Transformer",
                        "description": "The Code demonstration is to solve the Classification problem using the Perceptron algorithm. The template also utilizes the sci-kit learns Pipeline class to fit Normalize and PowerTransformer along with the model in a sequence of instructions.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_Normalize_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple perceptron, scaling technique, normalize, power transformer, data tranformation technique",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-normalize-&-power-transformer"
                    },
                    {
                        "name": "Perceptron_Normalize_QuantileTransformer.ipynb",
                        "title": "Perceptron with Normalize & QuantileTransformer",
                        "description": "This Code template is for the Classification task using Perceptron. It was introduced by Frank Rosenblatt in 1957. He proposed a Perceptron learning rule based on the original MCP neuron. Perceptron Estimator, Normalize, and QuantileTransformer is utilized in a sci-kit learn pipeline to fit the model.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_Normalize_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple perceptron, scaling technique, normalize, transformer, quantile transformer",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-normalize-&-quantiletransformer"
                    },
                    {
                        "name": "Perceptron_PolynomialFeatures.ipynb",
                        "title": "Perceptron with Polynomial Features",
                        "description": "This Code template is for the Classification task using simple Perceptron. This algorithm enables neurons to learn and processes elements in the training set one at a time. The demonstration also includes the feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple perceptron, simple, classification,scale learning, data tranformation technique, polynomials, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-polynomial-features"
                    },
                    {
                        "name": "Perceptron_PowerTransformer.ipynb",
                        "title": "Perceptron with Power Transformer",
                        "description": "This Code template is for the Classification task using simple Perceptron. The Perceptron algorithm learns the weights for the input signals to draw a linear decision boundary. Along with the estimator feature transformation technique, PowerTransformer is fitted in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple perceptron, simple classification, scale learning, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-power-transformer"
                    },
                    {
                        "name": "Perceptron_QuantileTransformer.ipynb",
                        "title": "Perceptron with Quantile Transformer",
                        "description": "This Code template is for the Classification task using simple Perceptron. A Perceptron accepts inputs, moderates them with certain weight values, then applies the transformation function to output the final result. QuantileTransformer is utilized for data transformation in a Pipeline class.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple perceptron, simple classification, scale learning, data tranformation technique, quantile transformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-quantile-transformer"
                    },
                    {
                        "name": "Perceptron_RobustScaler.ipynb",
                        "title": "Perceptron with RobustScaler",
                        "description": "This Code demonstrates a Classification problem using a Perceptron estimator from the sci-kit learn library. It is an algorithm for Supervised Learning of single-layer binary linear classifiers. RobustScaler is utilized for data normalization.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_RobustScaler.ipynb",
                        "keywords": "code template, classification,perceptron, data rescaling technique, robustscaler function, pipeline, simple classification,scale learning",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-robustscaler"
                    },
                    {
                        "name": "Perceptron_RobustScaler_PowerTransformer.ipynb",
                        "title": "Perceptron with RobustScaler & Power Transformer",
                        "description": "This Code template is for the Classification task using  Perceptron. The Perceptron learning rule converges if the two classes can be separated by the linear hyperplane. However, if the classes cannot be separated perfectly by a linear classifier, it could give rise to errors. RobustScaler and PowerTransformer are utilized along with the estimator in a sci-kit learn pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple perceptron, scaling technique, robustscaler, transformer, powertransformer",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-robustscaler-&-power-transformer"
                    },
                    {
                        "name": "Perceptron_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Perceptron with RobustScaler & QuantileTransformer",
                        "description": "This Code template is for the Classification task using simple Perceptron where the scaling technique used is RobustScaler and transformer used is QuantileTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple perceptron, scaling technique, robustscaler, transformer, quantiletransformer",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-robustscaler-&-quantiletransformer"
                    },
                    {
                        "name": "Perceptron_Scale.ipynb",
                        "title": "Perceptron with Scale",
                        "description": "This Code template is for the Classification task using a Perceptron in which the data rescaling technique used is a seperate scaler. This is a simple classification algorithm suitable for large scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_Scale.ipynb",
                        "keywords": "code template, classification,perceptron, data rescaling technique, seperate, scaler, simple, classification,suitable, scale, learning",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-scale"
                    },
                    {
                        "name": "Perceptron_Scale_PolynomialFeatures.ipynb",
                        "title": "Perceptron with RobustScaler & PolynomialFeatures",
                        "description": "This Code template is for the Classification task using simple Perceptron where the scaling technique used is Scale and transformer used is PolynomialFeatures.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_Scale_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple perceptron, scaling technique, scale, transformer, polynomials",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-robustscaler-&-polynomialfeatures"
                    },
                    {
                        "name": "Perceptron_Scale_PowerTransformer.ipynb",
                        "title": "Perceptron with RobustScaler & Scale",
                        "description": "This Code template is for the Classification task using simple Perceptron where the scaling technique used is Scale and transformer used is powerTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple perceptron, scaling technique, scale, transformer, powertransformer",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-robustscaler-&-scale"
                    },
                    {
                        "name": "Perceptron_Scale_QuantileTransformer.ipynb",
                        "title": "Perceptron with Scale & QuantileTransformer",
                        "description": "This Code template is for the Classification task using simple Perceptron with feature scaling using Scale and feature transformation using QuantileTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_Scale_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple perceptron, scaling,scale, data tranformation,quantiletransformer",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-scale-&-quantiletransformer"
                    },
                    {
                        "name": "Perceptron_StandardScaler.ipynb",
                        "title": "Perceptron with StandardScaler",
                        "description": "This Code template is for the Classification task using a Perceptron in which the data rescaling technique used is the StandardScaler function in a pipeline. This is a simple classification algorithm suitable for large scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_StandardScaler.ipynb",
                        "keywords": "code template, classification,perceptron, data rescaling technique, standardscaler, function, pipeline, simple, classification,suitable, scale, learning",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-standardscaler"
                    },
                    {
                        "name": "Perceptron_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Perceptron with StandardScaler & Polynomial Features",
                        "description": "This Code template is for the Classification task using simple Perceptron. Which is a simple classification algorithm suitable for large scale learning and feature transformation technique PolynomialFeatures feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple perceptron, simple, classification,suitable, scale, learning, data tranformation technique, polynomials, rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-standardscaler-&-polynomial-features"
                    },
                    {
                        "name": "Perceptron_StandardScaler_PowerTransformer.ipynb",
                        "title": "Perceptron with StandardScaler & Power Transformer",
                        "description": "This Code template is for the Classification task using simple Perceptron. Which is a simple classification algorithm suitable for large scale learning and feature transformation technique PowerTransformer feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple perceptron, simple, classification,suitable, scale, learning, data tranformation technique, powertransformer, rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-standardscaler-&-power-transformer"
                    },
                    {
                        "name": "Perceptron_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Perceptron with StandardScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification task using simple Perceptron. Which is a simple classification algorithm suitable for large scale learning where data rescaling is done using StandardScaler and feature transformation is done is using QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/Perceptron_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple perceptron, simple, classification,suitable, scale, learning,data rescaling,standardscaler, data tranformation,quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-standardscaler-&-quantile-transformer"
                    },
                    {
                        "name": "RidgeClassifier.ipynb",
                        "title": "Simple RidgeClassifier",
                        "description": "This Code template is for the Classification tasks using the simple RidgeClassifier. It first converts binary class to {-1, 1} and then treats the classification task as a regression task.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier.ipynb",
                        "keywords": "code template, classification,simple, ridgeclassifier, converts, binary, class,treats, classification, regression, ",
                        "display_url": "https://siberian.dev/classification/linear-models/simple-ridgeclassifier"
                    },
                    {
                        "name": "RidgeClassifier_MaxAbsScaler.ipynb",
                        "title": "RidgeClassifier with MaxAbsScaler",
                        "description": "This Code template is for the Classification task using RidgeClassifier with MaxAbsScaler feature scaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_MaxAbsScaler.ipynb",
                        "keywords": "code template, classification,ridgeclassifier, maxabsscaler, scaling technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-maxabsscaler"
                    },
                    {
                        "name": "RidgeClassifier_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "title": "RidgeClassifier with MaxAbsScaler & Polynomial Features",
                        "description": "This Code template is for the Classification tasks using RidgeClassifier, with feature scaling using MaxAbsScaler and also, feature transformation using Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,ridgeclassifier, scaling,maxabsscaler, also, data tranformation,polynomial, s, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-maxabsscaler-&-polynomial-features"
                    },
                    {
                        "name": "RidgeClassifier_MaxAbsScaler_QuantileTransformer.ipynb",
                        "title": "RidgeClassifier with MaxAbsScaler & QuantileTransformer",
                        "description": "This Code template is for the Classification tasks using RidgeClassifier, with feature scaling using MaxAbsScaler and also, feature transformation using Quantile Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_MaxAbsScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,ridgeclassifier, scaling,maxabsscaler, also, data tranformation,quantile transformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-maxabsscaler-&-quantiletransformer"
                    },
                    {
                        "name": "RidgeClassifier_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "RidgeClassifier with MinMaxScaler & PolynomialFeatures",
                        "description": "This Code template is for the Classification tasks using RidgeClassifier with MinMaxScaler feature scaling technique and PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,ridgeclassifier, minmaxscaler, scaling technique,polynomials, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-minmaxscaler-&-polynomialfeatures"
                    },
                    {
                        "name": "RidgeClassifier_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "RidgeClassifier with MinMaxScaler & Power Transformer",
                        "description": "This Code template is for the Classification tasks using RidgeClassifier with MinMaxScaler feature scaling technique and PowerTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,ridgeclassifier, minmaxscaler, scaling technique,powertransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-minmaxscaler-&-power-transformer"
                    },
                    {
                        "name": "RidgeClassifier_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "RidgeClassifier with MinMaxScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification tasks using RidgeClassifier with MinMaxScaler feature scaling technique and QuantileTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,ridgeclassifier, minmaxscaler, scaling technique,quantiletransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-minmaxscaler-&-quantile-transformer"
                    },
                    {
                        "name": "RidgeClassifier_Normalize.ipynb",
                        "title": "Ridge classifier with Normalization",
                        "description": "This Code template is for the Classification tasks using RidgeClassifier and feature rescaling technique Normalization.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_Normalize.ipynb",
                        "keywords": "code template, classification,ridgeclassifier, rescaling technique, normalization",
                        "display_url": "https://siberian.dev/classification/linear-models/ridge-classifier-with-normalization"
                    },
                    {
                        "name": "RidgeClassifier_Normalize_PolynomialFeatures.ipynb",
                        "title": "RidgeClassifier with Normalize & Polynomial Features",
                        "description": "This Code template is for the Classification tasks using the simple RidgeClassifier where separate rescaling is done using Normalize and feature transformation is done using PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, ridgeclassifier, rescaling,normalize, data tranformation,polynomials, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-normalize-&-polynomial-features"
                    },
                    {
                        "name": "RidgeClassifier_Normalize_PowerTransformer.ipynb",
                        "title": "RidgeClassifier with Normalize and PowerTransformer",
                        "description": "This Code template is for the Classification tasks using the simple RidgeClassifier where separate rescaling is done using Normalize and feature transformation is done using PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_Normalize_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, ridgeclassifier, rescaling,normalize, data tranformation,powertransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-normalize-and-powertransformer"
                    },
                    {
                        "name": "RidgeClassifier_Normalize_QuantileTransformer.ipynb",
                        "title": "RidgeClassifier with Normalize & Quantile Transformer",
                        "description": "This Code template is for the Classification tasks using the simple RidgeClassifier where separate rescaling is done using Normalize and feature transformation is done using Quantile Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_Normalize_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, ridgeclassifier, rescaling,normalize, data tranformation,quantile transformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-normalize-&-quantile-transformer"
                    },
                    {
                        "name": "RidgeClassifier_PowerTransformer.ipynb",
                        "title": "Simple RidgeClassifier with PowerTransformer",
                        "description": "This Code template is for the Classification tasks using the simple RidgeClassifier and feature transformation technique PowerTransformer in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, ridgeclassifier, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/simple-ridgeclassifier-with-powertransformer"
                    },
                    {
                        "name": "RidgeClassifier_QuantileTransformer.ipynb",
                        "title": "Simple RidgeClassifier with QuantileTransformer",
                        "description": "This Code template is for the Classification tasks using the simple RidgeClassifier and feature transformation technique QuantileTransformer in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, ridgeclassifier, data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/simple-ridgeclassifier-with-quantiletransformer"
                    },
                    {
                        "name": "RidgeClassifier_RobustScaler.ipynb",
                        "title": "Ridge classifier with Robust Scaler and Pipeline",
                        "description": "This Code template is for the Classification tasks using RidgeClassifier and feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_RobustScaler.ipynb",
                        "keywords": "code template, classification,ridgeclassifier, rescaling technique, robustscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/ridge-classifier-with-robust-scaler-and-pipeline"
                    },
                    {
                        "name": "RidgeClassifier_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "RidgeClassifier with RobustScaler & Polynomial Features",
                        "description": "This Code template is for the Classification tasks using RidgeClassifier with RobustScaler feature scaling technique and Polynomial Features as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,ridgeclassifier, robustscaler, scaling technique,polynomial, s, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-robustscaler-&-polynomial-features"
                    },
                    {
                        "name": "RidgeClassifier_RobustScaler_PowerTransformer.ipynb",
                        "title": "RidgeClassifier with RobustScaler & Power Transformer",
                        "description": "This Code template is for the Classification tasks using RidgeClassifier, feature rescaling using RobustScaler and feature transformation using Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,ridgeclassifier, rescaling,robustscaler, data tranformation,power, transformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-robustscaler-&-power-transformer"
                    },
                    {
                        "name": "RidgeClassifier_RobustScaler_QuantileTransformer.ipynb",
                        "title": "RidgeClassifier with RobustScaler & QuantileTransformer",
                        "description": "This Code template is for the Classification tasks using RidgeClassifier, feature scaling using RobustScaler and also, feature transformation using Quantile Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,ridgeclassifier, scaling,robustscaler, also, data tranformation,quantile transformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-robustscaler-&-quantiletransformer"
                    },
                    {
                        "name": "RidgeClassifier_Scale.ipynb",
                        "title": "Ridge classifier with Scale",
                        "description": "This Code template is for the Classification tasks using RidgeClassifier and feature rescaling technique Scaling.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_Scale.ipynb",
                        "keywords": "code template, classification,ridgeclassifier, rescaling technique, scaling",
                        "display_url": "https://siberian.dev/classification/linear-models/ridge-classifier-with-scale"
                    },
                    {
                        "name": "RidgeClassifier_Scale_PolynomialFeatures.ipynb",
                        "title": "RidgeClassifier with Scale and PolynomialFeatures",
                        "description": "This Code template is for the Classification tasks using the simple RidgeClassifier where separate rescaling is done using Scale and feature transformation is done using PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_Scale_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, ridgeclassifier, rescaling,scale, data tranformation,polynomials, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-scale-and-polynomialfeatures"
                    },
                    {
                        "name": "RidgeClassifier_Scale_PowerTransformer.ipynb",
                        "title": "RidgeClassifier with Scale and PowerTransformer",
                        "description": "This Code template is for the Classification tasks using the simple RidgeClassifier where separate rescaling is done using Scale and feature transformation is done using PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, ridgeclassifier, rescaling,scale, data tranformation,powertransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-scale-and-powertransformer"
                    },
                    {
                        "name": "RidgeClassifier_Scale_QuantileTransformer.ipynb",
                        "title": "RidgeClassifier with Scale & Quantile Transformer",
                        "description": "This Code template is for the Classification task using RidgeClassifier with scale feature scaling technique and feature transforme is done by Quantile transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_Scale_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,ridgeclassifier, scale, scaling technique, transforme,quantile transformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-scale-&-quantile-transformer"
                    },
                    {
                        "name": "RidgeClassifier_StandardScaler.ipynb",
                        "title": "RidgeClassifier with StandardScaler",
                        "description": "This Code template is for the Classification tasks using RidgeClassifier and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_StandardScaler.ipynb",
                        "keywords": "code template, classification,ridgeclassifier, rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-standardscaler"
                    },
                    {
                        "name": "RidgeClassifier_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "RidgeClassifier with StandardScaler & Polynomial Features",
                        "description": "This Code template is for the Classification tasks using RidgeClassifier, feature rescaling using StandardScaler and feature transformation using Polynomial features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,ridgeclassifier, rescaling,standardscaler, data tranformation,polynomial, s, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-standardscaler-&-polynomial-features"
                    },
                    {
                        "name": "RidgeClassifier_StandardScaler_PowerTransformer.ipynb",
                        "title": "RidgeClassifier with StandardScaler & Power Transformer",
                        "description": "This Code template is for the Classification tasks using RidgeClassifier, feature rescaling using StandardScaler and feature transformation using Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,ridgeclassifier, rescaling,standardscaler, data tranformation,power, transformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-standardscaler-&-power-transformer"
                    },
                    {
                        "name": "RidgeClassifier_StandardScaler_QuantileTransformer.ipynb",
                        "title": "RidgeClassifier with StandardScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification tasks using RidgeClassifier, feature rescaling using StandardScaler and feature transformation using Quantile Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/RidgeClassifier_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,ridgeclassifier, rescaling,standardscaler, data tranformation,quantile transformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-standardscaler-&-quantile-transformer"
                    },
                    {
                        "name": "SGDClassifier.ipynb",
                        "title": "Stochastic Gradient Descent Classifier",
                        "description": "This Code template is for the Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent approach.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier.ipynb",
                        "keywords": "code template, classification,simple, sgdclassifier,stochastic, gradient, descent, approach",
                        "display_url": "https://siberian.dev/classification/linear-models/stochastic-gradient-descent-classifier"
                    },
                    {
                        "name": "SGDClassifier_MaxAbsScaler.ipynb",
                        "title": "SGDClassifier with MaxAbsScaler",
                        "description": "This Code template is for the Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent with MaxAbsScaler as Feature Rescaling technique",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_MaxAbsScaler.ipynb",
                        "keywords": "code template, classification,simple, sgdclassifier,stochastic, gradient, descent, maxabsscaler, rescaling technique",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-maxabsscaler"
                    },
                    {
                        "name": "SGDClassifier_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "title": "SGDClassifier with MaxAbsScaler & PolynomialFeatures",
                        "description": "This Code template is for the Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent with MaxAbsScaler as Feature Rescaling technique PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, sgdclassifier,stochastic, gradient, descent, maxabsscaler, rescaling technique, polynomials, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-maxabsscaler-&-polynomialfeatures"
                    },
                    {
                        "name": "SGDClassifier_MaxAbsScaler_PowerTransformer.ipynb",
                        "title": "SGDClassifier with MaxAbsScaler & Power Transformer",
                        "description": "This Code template is for the Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent with MaxAbsScaler as Feature Rescaling technique Power Transformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_MaxAbsScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, sgdclassifier,stochastic, gradient, descent, maxabsscaler, rescaling technique, power, transformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-maxabsscaler-&-power-transformer"
                    },
                    {
                        "name": "SGDClassifier_MaxAbsScaler_QuantileTransformer.ipynb",
                        "title": "SGDClassifier with MaxAbsScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent with MaxAbsScaler as Feature Rescaling technique Quantile Transformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_MaxAbsScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, sgdclassifier,stochastic, gradient, descent, maxabsscaler, rescaling technique, quantile transformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-maxabsscaler-&-quantile-transformer"
                    },
                    {
                        "name": "SGDClassifier_MinMaxScaler.ipynb",
                        "title": "SGDClassifier with MinMaxScaler",
                        "description": "This Code template is for the Classification task using the SGDClassifier based on the Stochastic Gradient Descent approach and feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_MinMaxScaler.ipynb",
                        "keywords": "code template, classification,sgdclassifier,stochastic, gradient, descent, approach, rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-minmaxscaler"
                    },
                    {
                        "name": "SGDClassifier_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "SGDClassifier with MinMaxScaler & PolynomialFeatures",
                        "description": "This Code template is for the Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent with MinMaxScaler as Feature Rescaling technique PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, sgdclassifier,stochastic, gradient, descent, minmaxscaler, rescaling technique, polynomials, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-minmaxscaler-&-polynomialfeatures"
                    },
                    {
                        "name": "SGDClassifier_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "SGDClassifier with MinMaxScaler & PowerTransformer",
                        "description": "This Code template can be used for the Classification tasks using SGDClassifier based on the Stochastic Gradient Descent with MinMaxScaler as Feature Rescaling technique PowerTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,sgdclassifier,stochastic, gradient, descent, minmaxscaler, rescaling technique, powertransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-minmaxscaler-&-powertransformer"
                    },
                    {
                        "name": "SGDClassifier_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "SGDClassifier with MinMaxScaler & QuantileTransformer",
                        "description": "This Code template is for the Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent with MinMaxScaler as Feature Rescaling technique QuantileTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, sgdclassifier,stochastic, gradient, descent, minmaxscaler, rescaling technique, quantiletransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-minmaxscaler-&-quantiletransformer"
                    },
                    {
                        "name": "SGDClassifier_Normalize.ipynb",
                        "title": "SGDClassifier with Normalize",
                        "description": "This Code template is for the Classification task using the SGDClassifier based on the Stochastic Gradient Descent approach and feature rescaling technique Normalize.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_Normalize.ipynb",
                        "keywords": "code template, classification,sgdclassifier,stochastic, gradient, descent, approach, rescaling technique, normalize",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-normalize"
                    },
                    {
                        "name": "SGDClassifier_Normalize_PolynomialFeatures.ipynb",
                        "title": "SGDClassifier with Normalize and PolynomialFeatures",
                        "description": "This Code template is for Classification task using the SGDClassifier where separate rescaling is done using Normalize and feature transformation is done using PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,sgdclassifier, rescaling,normalize, data tranformation,polynomials, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-normalize-and-polynomialfeatures"
                    },
                    {
                        "name": "SGDClassifier_Normalize_PowerTransformer.ipynb",
                        "title": "SGDClassifier with Normalize and PowerTransformer",
                        "description": "This Code template is for Classification task using the SGDClassifier where separate rescaling is done using Normalize and feature transformation is done using PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_Normalize_PowerTransformer.ipynb",
                        "keywords": "code template, classification,sgdclassifier, rescaling,normalize, data tranformation,powertransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-normalize-and-powertransformer"
                    },
                    {
                        "name": "SGDClassifier_PolynomialFeatures.ipynb",
                        "title": "SGDClassifier with Polynomial Features",
                        "description": "This Code template is for the Classification task using the SGDClassifier based on the Stochastic Gradient Descent approach and feature Transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,sgdclassifier,stochastic, gradient, descent, approach, data tranformation technique, polynomials, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-polynomial-features"
                    },
                    {
                        "name": "SGDClassifier_PowerTransformer.ipynb",
                        "title": "SGDClassifier with PowerTransformer",
                        "description": "This Code template is for the Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent approach and Feature Transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, sgdclassifier,stochastic, gradient, descent, approach, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-powertransformer"
                    },
                    {
                        "name": "SGDClassifier_QuantileTransformer.ipynb",
                        "title": "SGDClassifier with QuantileTransformer",
                        "description": "This Code template is for the Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent approach and Feature Transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, sgdclassifier,stochastic, gradient, descent, approach, data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-quantiletransformer"
                    },
                    {
                        "name": "SGDClassifier_RobustScaler.ipynb",
                        "title": "SGDClassifier with RobustScaler",
                        "description": "This Code template is for the Classification task using the SGDClassifier based on the Stochastic Gradient Descent approach and feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_RobustScaler.ipynb",
                        "keywords": "code template, classification,sgdclassifier,stochastic, gradient, descent, approach, rescaling technique, robustscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-robustscaler"
                    },
                    {
                        "name": "SGDClassifier_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "SGDClassifier with RobustScaler & PolynomialFeatures",
                        "description": "This Code template is for the Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent with RobustScaler as Feature Rescaling technique PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, sgdclassifier,stochastic, gradient, descent, robustscaler, rescaling technique, polynomials, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-robustscaler-&-polynomialfeatures"
                    },
                    {
                        "name": "SGDClassifier_RobustScaler_PowerTransformer.ipynb",
                        "title": "SGDClassifier with RobustScaler & Power Transformer",
                        "description": "This Code template is for the Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent with RobustScaler as Feature Rescaling technique Power Transformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, sgdclassifier,stochastic, gradient, descent, robustscaler, rescaling technique, power, transformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-robustscaler-&-power-transformer"
                    },
                    {
                        "name": "SGDClassifier_RobustScaler_QuantileTransformer.ipynb",
                        "title": "SGDClassifier with RobustScaler & Quantile Transformer",
                        "description": "This Code template is for classification analysis using the SGD Classifier where rescaling method used is RobustScaler and feature transformation is done via Quantile Transformer.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification, sgd, classifier, rescaling, method, robustscaler, data tranformation,quantile transformer",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-robustscaler-&-quantile-transformer"
                    },
                    {
                        "name": "SGDClassifier_Scale.ipynb",
                        "title": "SGDClassifier with Scale",
                        "description": "This Code template is for the Classification task using the SGDClassifier based on the Stochastic Gradient Descent approach and feature rescaling technique Scale .",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_Scale.ipynb",
                        "keywords": "code template, classification,sgdclassifier,stochastic, gradient, descent, approach, rescaling technique, scale,",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-scale"
                    },
                    {
                        "name": "SGDClassifier_Scale_QuantileTransformer.ipynb",
                        "title": "SGDClassifier with Scale and PowerTransformer",
                        "description": "This Code template is for Classification task using the SGDClassifier where separate rescaling is done using scale and feature transformation is done using QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_Scale_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,sgdclassifier, rescaling,scale, data tranformation,quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-scale-and-powertransformer"
                    },
                    {
                        "name": "SGDClassifier_StandardScaler.ipynb",
                        "title": "Stochastic Gradient Descent Classifier with StandardScaler",
                        "description": "This Code template is for the Classification task using the SGDClassifier based on the Stochastic Gradient Descent approach and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_StandardScaler.ipynb",
                        "keywords": "code template, classification,sgdclassifier,stochastic, gradient, descent, approach, rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/stochastic-gradient-descent-classifier-with-standardscaler"
                    },
                    {
                        "name": "SGDClassifier_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "SGDClassifier with StandardScaler and PolynomialFeatures",
                        "description": "This Code template is for the Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent approach with Feature Rescaling technique StandardScaler and Feature Transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, sgdclassifier,stochastic, gradient, descent, approach, rescaling technique, standardscaler, data tranformation technique, polynomials, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-standardscaler-and-polynomialfeatures"
                    },
                    {
                        "name": "SGDClassifier_StandardScaler_PowerTransformer.ipynb",
                        "title": "SGDClassifier with StandardScaler and PowerTransformer",
                        "description": "This Code template is for the Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent approach with Feature Rescaling technique StandardScaler and Feature Transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, sgdclassifier,stochastic, gradient, descent, approach, rescaling technique, standardscaler, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-standardscaler-and-powertransformer"
                    },
                    {
                        "name": "SGDClassifier_StandardScaler_QuantileTransformer.ipynb",
                        "title": "SGDClassifier with StandardScaler and QuantileTransformer",
                        "description": "This Code template is for the Classification tasks using the simple SGDClassifier based on the Stochastic Gradient Descent approach with Feature Rescaling technique StandardScaler and Feature Transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Linear_Models/SGDClassifier_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, sgdclassifier,stochastic, gradient, descent, approach, rescaling technique, standardscaler, data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-standardscaler-and-quantiletransformer"
                    }
                ]
            },
            {
                "name": "Naive_Bayes",
                "models": [
                    {
                        "name": "BernoulliNB.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier",
                        "description": "This Code template is for the Classification tasks using simple BernoulliNB based on the Naive Bayes algorithm. BernoulliNB is for data that is distributed according to multivariate Bernoulli distributions.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB.ipynb",
                        "keywords": "code template, classification,simple, bernoullinb,naive, bayes,bernoullinb, data, distributed, according, multivariate, bernoulli, distributions",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoulli-naive-bayes-classifier"
                    },
                    {
                        "name": "BernoulliNB_MaxAbsScaler.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier with MaxAbsScaler",
                        "description": "This code template is facilitates to solve the problem of classification problem using Bernoulli Naive Bayes Algorithm using MaxAbsScaler technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_MaxAbsScaler.ipynb",
                        "keywords": "code template, facilitates, solve, classification,bernoulli, naive, bayes,maxabsscaler, technique",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoulli-naive-bayes-classifier-with-maxabsscaler"
                    },
                    {
                        "name": "BernoulliNB_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "title": "BernoulliNB with MaxAbsScaler and PolynomialFeatures",
                        "description": "This code template is facilitates to solve the problem of classification problem using Bernoulli Naive Bayes Algorithm using MaxAbsScaler technique and polynomialFeatures.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, facilitates, solve, classification,bernoulli, naive, bayes,maxabsscaler, technique, polynomials",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoullinb-with-maxabsscaler-and-polynomialfeatures"
                    },
                    {
                        "name": "BernoulliNB_MaxAbsScaler_PowerTransformer.ipynb",
                        "title": "BernoulliNB with MaxAbsScaler and PowerTransformer",
                        "description": "This code template is facilitates to solve the problem of classification problem using Bernoulli Naive Bayes Algorithm using MaxAbsScaler technique and PowerTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_MaxAbsScaler_PowerTransformer.ipynb",
                        "keywords": "code template, facilitates, solve, classification,bernoulli, naive, bayes,maxabsscaler, technique, powertransformer",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoullinb-with-maxabsscaler-and-powertransformer"
                    },
                    {
                        "name": "BernoulliNB_MinMaxScaler.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier with MinMaxScaler",
                        "description": "This code template is facilitates to solve the problem of classification problem using Bernoulli Naive Bayes Algorithm using MinMaxScaler technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_MinMaxScaler.ipynb",
                        "keywords": "code template, facilitates, solve, classification,bernoulli, naive, bayes,minmaxscaler, technique",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoulli-naive-bayes-classifier-with-minmaxscaler"
                    },
                    {
                        "name": "BernoulliNB_Normalize.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier with Normalize",
                        "description": "This code template is facilitates to solve the problem of classification problem using Bernoulli Naive Bayes Algorithm using Normalize technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_Normalize.ipynb",
                        "keywords": "code template, facilitates, solve, classification,bernoulli, naive, bayes,normalize, technique",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoulli-naive-bayes-classifier-with-normalize"
                    },
                    {
                        "name": "BernoulliNB_PolynomialFeatures.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier with Polynomial Features",
                        "description": "This Code template is for the Classification tasks using simple BernoulliNB based on the Naive Bayes algorithm along with feature transformation technique using Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, bernoullinb,naive, bayes,data tranformation technique,polynomial, s, pipeline",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoulli-naive-bayes-classifier-with-polynomial-features"
                    },
                    {
                        "name": "BernoulliNB_PowerTransformer.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier with Power Transformer",
                        "description": "This Code template is for the Classification tasks using simple BernoulliNB based on the Naive Bayes algorithm along with feature transformation technique using Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, bernoullinb,naive, bayes,data tranformation technique,power, transformer, pipeline",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoulli-naive-bayes-classifier-with-power-transformer"
                    },
                    {
                        "name": "BernoulliNB_QuantileTransformer.ipynb",
                        "title": "BernoulliNB with Quantile Transformer",
                        "description": "This Code template is for regression analysis using Bernoulli Naive Bayes Algorithm where the transformer used is Quantile Transformer.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, bernoulli, naive, bayes,transformer, quantile transformer",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoullinb-with-quantile-transformer"
                    },
                    {
                        "name": "BernoulliNB_RobustScaler.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier with RobustScaler",
                        "description": "This code template is facilitates to solve the problem of classification problem using Bernoulli Naive Bayes Algorithm using RobustScaler technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_RobustScaler.ipynb",
                        "keywords": "code template, facilitates, solve, classification,bernoulli, naive, bayes,robustscaler, technique",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoulli-naive-bayes-classifier-with-robustscaler"
                    },
                    {
                        "name": "BernoulliNB_Scale.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier with Scale",
                        "description": "This code template is facilitates to solve the problem of classification problem using Bernoulli Naive Bayes Algorithm using Scale technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_Scale.ipynb",
                        "keywords": "code template, facilitates, solve, classification,bernoulli, naive, bayes,scale, technique",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoulli-naive-bayes-classifier-with-scale"
                    },
                    {
                        "name": "BernoulliNB_StandardScaler.ipynb",
                        "title": "Bernoulli Naive Bayes Classifier with StandardScaler",
                        "description": "This code template is facilitates to solve the problem of classification problem using Bernoulli Naive Bayes Algorithm using StandardScaler technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/BernoulliNB_StandardScaler.ipynb",
                        "keywords": "code template, facilitates, solve, classification,bernoulli, naive, bayes,standardscaler, technique",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoulli-naive-bayes-classifier-with-standardscaler"
                    },
                    {
                        "name": "CategoricalNB.ipynb",
                        "title": "Categorical Naive Bayes Classifier",
                        "description": "This Code template is for the Classification tasks using CategoricalNB based on the Naive Bayes algorithm for categorically distributed data.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/CategoricalNB.ipynb",
                        "keywords": "code template, classification,categoricalnb,naive, bayes,categorically, distributed, data",
                        "display_url": "https://siberian.dev/classification/naive-bayes/categorical-naive-bayes-classifier"
                    },
                    {
                        "name": "CategoricalNB_MinMaxScaler.ipynb",
                        "title": "Categorical Naive Bayes Classifier with MinMaxScaler",
                        "description": "This Code template is for the Classification tasks using CategoricalNB based on the Naive Bayes algorithm for categorically distributed data with feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/CategoricalNB_MinMaxScaler.ipynb",
                        "keywords": "code template, classification,categoricalnb,naive, bayes,categorically, distributed, data rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/naive-bayes/categorical-naive-bayes-classifier-with-minmaxscaler"
                    },
                    {
                        "name": "CategoricalNB_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Categorical Naive Bayes Classifier with MinMaxScaler and Quantile Transformer",
                        "description": "This Code template is for the Classification tasks using CategoricalNB based on the Naive Bayes algorithm for categorically distributed data with feature rescaling technique MinMaxScaler and feature transformation technique Quantile Transformation in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/CategoricalNB_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,categoricalnb,naive, bayes,categorically, distributed, data rescaling technique, minmaxscaler, data tranformation technique, quantile, data tranformation, pipeline",
                        "display_url": "https://siberian.dev/classification/naive-bayes/categorical-naive-bayes-classifier-with-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "GaussianNB.ipynb",
                        "title": "Gaussian Naive Bayes Classifier",
                        "description": "This Code template is for the Classification tasks using GaussianNB based on the Gaussian Naive Bayes algorithm that follows Gaussian normal distribution and supports continuous data.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB.ipynb",
                        "keywords": "code template, classification,gaussiannb,gaussian, naive, bayes,follows, gaussian, normal, distribution, supports, continuous, data",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussian-naive-bayes-classifier"
                    },
                    {
                        "name": "GaussianNB_MaxAbsScaler.ipynb",
                        "title": "GaussianNB with MaxAbsScaler",
                        "description": "This Code template is for Classification task using Gaussian Naive Bayes Algorithm where the scaling technique used is MaxAbsScaler.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_MaxAbsScaler.ipynb",
                        "keywords": "code template, classification,gaussian, naive, bayes,scaling technique, maxabsscaler",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussiannb-with-maxabsscaler"
                    },
                    {
                        "name": "GaussianNB_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "title": "Gaussian Naive Bayes Classifier with MaxAbsScaler and PolynomialFeatures",
                        "description": "This code template is facilitates to solve the problem of classification problem using Gaussian Naive Bayes Algorithm using PolynomialFeatures, MaxAbsScaler techniques.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, facilitates, solve, classification,gaussian, naive, bayes,polynomials, maxabsscaler, techniques",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussian-naive-bayes-classifier-with-maxabsscaler-and-polynomialfeatures"
                    },
                    {
                        "name": "GaussianNB_MaxAbsScaler_PowerTransformer.ipynb",
                        "title": "GaussianNB with MaxAbsScaler and PowerTransformer",
                        "description": "This Code template is for the Classification tasks using GaussianNB based on the Gaussian Naive Bayes algorithm that follows Gaussian normal distribution and supports continuous data; feature scaling is done via MaxAbsScaler while feature transformation via Power Transformer",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_MaxAbsScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,gaussiannb,gaussian, naive, bayes,follows, gaussian, normal, distribution, supports, continuous, data;, scaling,maxabsscaler, data tranformation,power, transformer",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussiannb-with-maxabsscaler-and-powertransformer"
                    },
                    {
                        "name": "GaussianNB_MaxAbsScaler_QuantileTransformer.ipynb",
                        "title": "GaussianNB with MaxAbsScaler and QuantileTransformer",
                        "description": "This Code template is for the Classification tasks using GaussianNB based on the Gaussian Naive Bayes algorithm that follows Gaussian normal distribution and supports continuous data; feature scaling is done via MaxAbsScaler while feature transformation via Quantile Transformer",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_MaxAbsScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,gaussiannb,gaussian, naive, bayes,follows, gaussian, normal, distribution, supports, continuous, data;, scaling,maxabsscaler, data tranformation,quantile transformer",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussiannb-with-maxabsscaler-and-quantiletransformer"
                    },
                    {
                        "name": "GaussianNB_MinMaxScaler.ipynb",
                        "title": "Gaussian Naive Bayes Classifier with MinMaxScaler",
                        "description": "This Code template is for Classification task using Gaussian Naive Bayes Algorithm where the scaling technique used is MaxAbsScaler.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_MinMaxScaler.ipynb",
                        "keywords": "code template, classification,gaussian, naive, bayes,scaling technique, maxabsscaler",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussian-naive-bayes-classifier-with-minmaxscaler"
                    },
                    {
                        "name": "GaussianNB_Normalize.ipynb",
                        "title": "Gaussian Naive Bayes Classifier with Normalizer",
                        "description": "This Code template is for Classification task using Gaussian Naive Bayes Algorithm where the scaling technique used is Normalize.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_Normalize.ipynb",
                        "keywords": "code template, classification,gaussian, naive, bayes,scaling technique, normalize",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussian-naive-bayes-classifier-with-normalizer"
                    },
                    {
                        "name": "GaussianNB_PolynomialFeatures.ipynb",
                        "title": "Gaussian Naive Bayes Classifier with Polynomial Features",
                        "description": "This Code template is for the Classification tasks using GaussianNB based on the Gaussian Naive Bayes algorithm that follows Gaussian normal distribution and supports continuous data along with feature transformation using PolynomialFeatures.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,gaussiannb,gaussian, naive, bayes,follows, gaussian, normal, distribution, supports, continuous, data, data tranformation,polynomials",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussian-naive-bayes-classifier-with-polynomial-features"
                    },
                    {
                        "name": "GaussianNB_PowerTransformer.ipynb",
                        "title": "Gaussian Naive Bayes Classifier with Power Transformer",
                        "description": "This Code template is for the Classification tasks using GaussianNB based on the Gaussian Naive Bayes algorithm that follows Gaussian normal distribution and supports continuous data along with feature transformation using Power Transformer",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_PowerTransformer.ipynb",
                        "keywords": "code template, classification,gaussiannb,gaussian, naive, bayes,follows, gaussian, normal, distribution, supports, continuous, data, data tranformation,power, transformer",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussian-naive-bayes-classifier-with-power-transformer"
                    },
                    {
                        "name": "GaussianNB_QuantileTransformer.ipynb",
                        "title": "Gaussian Naive Bayes Classifier with Quantile Transformer",
                        "description": "This Code template is for the Classification tasks using GaussianNB based on the Gaussian Naive Bayes algorithm that follows Gaussian normal distribution and supports continuous data along with feature transformation using Quantile Transformer.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,gaussiannb,gaussian, naive, bayes,follows, gaussian, normal, distribution, supports, continuous, data, data tranformation,quantile,transformer",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussian-naive-bayes-classifier-with-quantile-transformer"
                    },
                    {
                        "name": "GaussianNB_RobustScaler.ipynb",
                        "title": "Gaussian Naive Bayes Classifier with Robust Scaler",
                        "description": "This Code template is for Classification task using Gaussian Naive Bayes Algorithm where the scaling technique used is RobustScaler.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_RobustScaler.ipynb",
                        "keywords": "code template, classification,gaussian, naive, bayes,scaling technique, robustscaler",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussian-naive-bayes-classifier-with-robust-scaler"
                    },
                    {
                        "name": "GaussianNB_Scale.ipynb",
                        "title": "Gaussian Naive Bayes Classifier with Scale",
                        "description": "This Code template is for Classification task using Gaussian Naive Bayes Algorithm where the scaling technique used is Scale.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_Scale.ipynb",
                        "keywords": "code template, classification,gaussian, naive, bayes,scaling technique, scale",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussian-naive-bayes-classifier-with-scale"
                    },
                    {
                        "name": "GaussianNB_StandardScaler.ipynb",
                        "title": "Gaussian Naive Bayes Classifier with Standard Scaler",
                        "description": "This Code template is for Classification task using Gaussian Naive Bayes Algorithm where the scaling technique used is StandardScaler.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/GaussianNB_StandardScaler.ipynb",
                        "keywords": "code template, classification,gaussian, naive, bayes,scaling technique, standardscaler",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussian-naive-bayes-classifier-with-standard-scaler"
                    },
                    {
                        "name": "MultinomialNB.ipynb",
                        "title": "Multinomial Naive Bayes Classifier",
                        "description": "This Code template is for the Classification tasks using MultinomialNB based on the Naive Bayes algorithm for multinomially distributed data.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/MultinomialNB.ipynb",
                        "keywords": "code template, classification,multinomialnb,naive, bayes,multinomially, distributed, data",
                        "display_url": "https://siberian.dev/classification/naive-bayes/multinomial-naive-bayes-classifier"
                    },
                    {
                        "name": "MultinomialNB_MinMaxScaler.ipynb",
                        "title": "Multinomial Naive Bayes Classifier with MinMaxScaler",
                        "description": "This Code template is for Classification tasks using MultinomialNB based on the Naive Bayes algorithm for multinomially distributed data and feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/MultinomialNB_MinMaxScaler.ipynb",
                        "keywords": "code template, classification,multinomialnb,naive, bayes,multinomially, distributed, data rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/naive-bayes/multinomial-naive-bayes-classifier-with-minmaxscaler"
                    },
                    {
                        "name": "MultinomialNB_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Multinomial Naive Bayes Classifier with MinMaxScaler and Quantile Transformer",
                        "description": "This Code template is for Classification tasks using MultinomialNB based on the Naive Bayes algorithm for multinomially distributed data with feature rescaling technique MinMaxScaler and feature transformation technique Quantile Transformation in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Naive_Bayes/MultinomialNB_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,multinomialnb,naive, bayes,multinomially, distributed, data rescaling technique, minmaxscaler, data tranformation technique, quantile, data tranformation, pipeline",
                        "display_url": "https://siberian.dev/classification/naive-bayes/multinomial-naive-bayes-classifier-with-minmaxscaler-and-quantile-transformer"
                    }
                ]
            },
            {
                "name": "Nearest_Centroid",
                "models": [
                    {
                        "name": "NearestCentroidClassifier.ipynb",
                        "title": "Simple Nearest Centroid Classification",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/simple-nearest-centroid-classification"
                    },
                    {
                        "name": "NearestCentroidClassifier_MaxAbsScaler.ipynb",
                        "title": "Nearest Centroid Classification with MaxAbsScaler",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid and data rescaling technique MaxAbsScaler in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_MaxAbsScaler.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, data rescaling technique, maxabsscaler, pipeline, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-maxabsscaler"
                    },
                    {
                        "name": "NearestCentroidClassifier_MaxAbsScaler_PowerTransformer.ipynb",
                        "title": "NearestCentroid with MaxAbsScaler and PowerTransformer",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid and data rescaling technique MaxAbsScaler and feature transformation PowerTransformer in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_MaxAbsScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, data rescaling technique, maxabsscaler, data tranformation, powertransformer, pipeline, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearestcentroid-with-maxabsscaler-and-powertransformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_MaxAbsScaler_QuantileTransformer.ipynb",
                        "title": "NearestCentroid with MaxAbsScaler and QuantileTransformer",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid and data rescaling technique MaxAbsScaler and feature transformation QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_MaxAbsScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, data rescaling technique, maxabsscaler, data tranformation, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearestcentroid-with-maxabsscaler-and-quantiletransformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_MinMaxScaler.ipynb",
                        "title": "Nearest Centroid Classification with MinMaxScaler",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid and data rescaling technique MinMaxScaler in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_MinMaxScaler.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, data rescaling technique, minmaxscaler, pipeline, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-minmaxscaler"
                    },
                    {
                        "name": "NearestCentroidClassifier_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Nearest Centroid Classification with MinMaxScaler and Polynomial Features",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid with feature rescaling technique MinMaxScaler and feature transforming technique Polynomial Features in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, rescaling technique, minmaxscaler, transforming, technique, polynomial, s, pipeline, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "NearestCentroidClassifier_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Nearest Centroid Classification with MInMaxScaler & PowerTransformer",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid with feature rescaling technique MinMaxScaler and feature tranformation technique used is PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, rescaling technique, minmaxscaler, tranformation, technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-minmaxscaler-&-powertransformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "NearestCentroid with MinMaxScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid with feature rescaling technique MinMaxScaler and feature transforming technique Quantile Transformer in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, rescaling technique, minmaxscaler, transforming, technique, quantile transformer, pipeline, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearestcentroid-with-minmaxscaler-&-quantile-transformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_normalize.ipynb",
                        "title": "Nearest Centroid Classification with normalizer",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid and data rescaling technique MinMaxScaler in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_normalize.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, data rescaling technique, minmaxscaler, pipeline, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-normalizer"
                    },
                    {
                        "name": "NearestCentroidClassifier_Normalize_PolynomialFeatures.ipynb",
                        "title": "Nearest Centroid Classification with Normalize & Polynomial Features",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid where separate rescaling is done using Normalize and feature transformation is done using PolynomialFeatures in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, rescaling,normalize, data tranformation,polynomials, pipeline, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-normalize-&-polynomial-features"
                    },
                    {
                        "name": "NearestCentroidClassifier_Normalize_PowerTransformer.ipynb",
                        "title": "NearestCentroid with Normalize &  Power Transformer",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid where separate rescaling is done using Normalize and feature transformation is done using PowerTransformer in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_Normalize_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, rescaling,normalize, data tranformation,powertransformer, pipeline, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearestcentroid-with-normalize-&--power-transformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_Normalize_QuantileTransformer.ipynb",
                        "title": "NearestCentroid with Normalize &  Quantile Transformer",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid where separate rescaling is done using Normalize and feature transformation is done using Quantile Transformerr in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_Normalize_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, rescaling,normalize, data tranformation,quantile transformerr, pipeline, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearestcentroid-with-normalize-&--quantile-transformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_PolynomialFeatures.ipynb",
                        "title": "Nearest Centroid Classification with Polynomial Features",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid and feature transforming technique Polynomial Features in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, transforming, technique, polynomial, s, pipeline, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-polynomial-features"
                    },
                    {
                        "name": "NearestCentroidClassifier_PowerTransformer.ipynb",
                        "title": "Nearest Centroid Classification with PowerTransformer",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid and feature tranformation technique PowerTransformer in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, tranformation, technique, powertransformer, pipeline, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-powertransformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_QuantileTransformer.ipynb",
                        "title": "Nearest Centroid Classification with QuantileTransformer",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid and feature transformation technique QuantileTransformer in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, data tranformation technique, quantiletransformer, pipeline, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-quantiletransformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_RobustScaler.ipynb",
                        "title": "Nearest Centroid Classification with Robust Scaler",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid and data rescaling technique RobustScaler in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_RobustScaler.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, data rescaling technique, robustscaler, pipeline, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-robust-scaler"
                    },
                    {
                        "name": "NearestCentroidClassifier_scale.ipynb",
                        "title": "Nearest Centroid Classification with scale",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid and data rescaling technique MinMaxScaler in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_scale.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, data rescaling technique, minmaxscaler, pipeline, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-scale"
                    },
                    {
                        "name": "NearestCentroidClassifier_Scale_PolynomialFeatures.ipynb",
                        "title": "NearestCentroid with Scale & Polynomial Features",
                        "description": "This Code template is for the Classification task using a NearestCentroid Classifier where rescaling is done using Scale and feature transformation is done via Polynomial Features.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_Scale_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,nearestcentroid, classifier, rescaling,scale, data tranformation,polynomial, s",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearestcentroid-with-scale-&-polynomial-features"
                    },
                    {
                        "name": "NearestCentroidClassifier_Scale_PowerTransformer.ipynb",
                        "title": "NearestCentroid with Scale & Power Transformer",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid where separate rescaling is done using scale and feature transformation is done using PowerTransformer in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, rescaling,scale, data tranformation,powertransformer, pipeline, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearestcentroid-with-scale-&-power-transformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_Scale_QuantileTransformer.ipynb",
                        "title": "NearestCentroid with Scale & Quantile Transformer",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid where separate rescaling is done using Scale and feature transformation is done using Quantile Transformer in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_Scale_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, rescaling,scale, data tranformation,quantile transformer, pipeline, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearestcentroid-with-scale-&-quantile-transformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_StandardScaler.ipynb",
                        "title": "Nearest Centroid Classification with Standard Scaler",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid and data rescaling technique StandardScaler in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_StandardScaler.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, data rescaling technique, standardscaler, pipeline, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-standard-scaler"
                    },
                    {
                        "name": "NearestCentroidClassifier_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Nearest Centroid Classification with StandardScaler and Polynomial Features",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid with feature rescaling technique StandardScaler and feature transforming technique Polynomial Features in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, rescaling technique, standardscaler, transforming, technique, polynomial, s, pipeline, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "NearestCentroidClassifier_StandardScaler_PowerTransformer.ipynb",
                        "title": "Nearest Centroid Classification with StandardScaler and PowerTransformer",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid with feature rescaling technique StandardScaler and feature tranformation technique PowerTransformer in a pipeline. The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, rescaling technique, standardscaler, tranformation, technique, powertransformer, pipeline, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-standardscaler-and-powertransformer"
                    },
                    {
                        "name": "NearestCentroidClassifier_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Nearest Centroid Classification with StandardScaler and QuantileTransformer",
                        "description": "This Code template is for the Classification task using a simple NearestCentroid with feature rescaling technique StandardScaler and feature tranformation technique QuantileTransformer in a pipeline.The NearestCentroid classifier is a simple algorithm that represents each class by the centroid of its members.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Nearest_Centroid/NearestCentroidClassifier_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, nearestcentroid, rescaling technique, standardscaler, tranformation, technique, quantiletransformer, pipelinethe, nearestcentroid, classifier, simple,represents, class, centroid, members",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-standardscaler-and-quantiletransformer"
                    }
                ]
            },
            {
                "name": "Other_Ensemble",
                "models": [
                    {
                        "name": "StackingClassifier.ipynb",
                        "title": "Simple Stacking Classifier",
                        "description": "This Code template is for the Classification task using a Stacking Classifier. It implements an ensemble learning technique where the predictions of multiple classifiers get stacked and are used as features to train the meta-classifier which makes the final prediction.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Other_Ensemble/StackingClassifier.ipynb",
                        "keywords": "code template, classification,stacking, classifier, implements, ensemble,learning technique, predictions, multiple, classifiers, stacked, s, train, metaclassifier, makes, final, prediction",
                        "display_url": "https://siberian.dev/classification/other-ensemble/simple-stacking-classifier"
                    }
                ]
            },
            {
                "name": "Radius_Neighbors",
                "models": [
                    {
                        "name": "RadiusNeighborsClassifier.ipynb",
                        "title": "Simple RadiusNeighborsClassifier",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/simple-radiusneighborsclassifier"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "title": "RadiusNeighborsClassifier with MaxAbsScaler and PolynomialFeatures",
                        "description": "This code template facilitates to solve the problem of classification problem using Radius Neighbor Classifier Algorithm using PolynomialFeatures, MaxAbsScaler techniques.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, facilitates, solve, classification,radius, neighbor, classifier,polynomials, maxabsscaler, techniques",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-maxabsscaler-and-polynomialfeatures"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_MaxAbsScaler_PowerTransformer.ipynb",
                        "title": "Radius Neighbors Classifier with MaxAbsScaler and PowerTransformer",
                        "description": "This code template facilitates to solve the problem of classification problem using Radius Neighbor Classifier Algorithm using PowerTransformer, MaxAbsScaler techniques.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_MaxAbsScaler_PowerTransformer.ipynb",
                        "keywords": "code template, facilitates, solve, classification,radius, neighbor, classifier,powertransformer, maxabsscaler, techniques",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radius-neighbors-classifier-with-maxabsscaler-and-powertransformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_MaxAbsScaler_QuantileTransformer.ipynb",
                        "title": "RadiusNeighborsClassifier with MaxAbsScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier using MaxAbsScaler with pipeline and Quantile Transformer Feature Transformation. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_MaxAbsScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier,maxabsscaler, pipeline,quantile transformer, data tranformation, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-maxabsscaler-&-quantile-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_MinMaxScaler.ipynb",
                        "title": "RadiusNeighborsClassifier with MinMaxScaler",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier, with data being scaled by MinMaxScaler. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_MinMaxScaler.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier, data, scaled, minmaxscaler, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-minmaxscaler"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "RadiusNeighborsClassifier with MinMaxScaler & Polynomial Features",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier using MinMax Scaler with pipeline and Polynomial Feature Transformation. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier,minmax, scaler, pipeline, polynomial, data tranformation, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-minmaxscaler-&-polynomial-features"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "RadiusNeighborsClassifier with MinMaxScaler & Power Transformer",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier using MinMax Scaler with pipeline and Power Transformation.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier,minmax, scaler, pipeline, power, data tranformation",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-minmaxscaler-&-power-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "RadiusNeighborsClassifier with MinMaxScaler & QuantileTransformer",
                        "description": "This code template is for Classification technique using RadiusNeighborsClassifier with feature rescaling technique called MinMaxScaler and feature transformation technique called Quantile Transformer.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification, technique,radiusneighborsclassifier, rescaling technique,minmaxscaler, data tranformation technique,quantile transformer",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-minmaxscaler-&-quantiletransformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_Normalize.ipynb",
                        "title": "RadiusNeighborsClassifier with Normalize",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier, with data being scaled by Normalizer. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_Normalize.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier, data, scaled, normalizer, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-normalize"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_Normalize_PowerTransformer.ipynb",
                        "title": "RadiusNeighborsClassifier with Normalize & Power Transformer",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier with separate feature scaling using Normalize pipelining Power Transformer which is a feature transformation technique. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_Normalize_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier, scaling,normalize, pipelining, power, transformer, data tranformation technique, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-normalize-&-power-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_Normalize_QuantileTransformer.ipynb",
                        "title": "RadiusNeighborsClassifier with Normalize & QuantileTransformer",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier with separate feature scaling using Normalize pipelining QuantileTransformer which is a feature transformation technique. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_Normalize_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier, scaling,normalize, pipelining, quantiletransformer, data tranformation technique, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-normalize-&-quantiletransformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_PolynomialFeatures.ipynb",
                        "title": "RadiusNeighborsClassifier with Polynomial Features",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier with pipeline and Polynomial Features Transformation. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier, pipeline, polynomial, s, data tranformation, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-polynomial-features"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_PowerTransformer.ipynb",
                        "title": "RadiusNeighborsClassifier with Power Transformer",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier with pipeline and PowerTransformer Feature Transformation. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier, pipeline, powertransformer, data tranformation, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-power-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_QuantileTransformer.ipynb",
                        "title": "RadiusNeighborsClassifier with Quantile Transformer",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier with pipeline and QuantileTransformer Feature Transformation. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier, pipeline, quantiletransformer, data tranformation, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-quantile-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_RobustScaler.ipynb",
                        "title": "RadiusNeighborsClassifier with RobustScaler",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier, with data being scaled by RobustScaler. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_RobustScaler.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier, data, scaled, robustscaler, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-robustscaler"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_RobustScaler_PowerTransformer.ipynb",
                        "title": "RadiusNeighborsClassifier with RobustScaler & Power Transformer",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier using RobustScaler with pipeline and Power Transformer Feature Transformation. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier,robustscaler, pipeline,power, transformer, data tranformation, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-robustscaler-&-power-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_Scale.ipynb",
                        "title": "RadiusNeighborsClassifier with Scale",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier, with data being scaled by scale. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_Scale.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier, data, scaled, scale, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-scale"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_Scale_PolynomialFeatures.ipynb",
                        "title": "RadiusNeighborsClassifier with Scale & Polynomial Features",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier with separate feature scaling using Scale pipelining Power Transformer which is a feature transformation technique. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_Scale_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier, scaling,scale, pipelining, power, transformer, data tranformation technique, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-scale-&-polynomial-features"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_Scale_PowerTransformer.ipynb",
                        "title": "RadiusNeighborsClassifier with Scale & Power Transformer",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier with separate feature scaling using Scale pipelining Power Transformer which is a feature transformation technique. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier, scaling,scale, pipelining, power, transformer, data tranformation technique, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-scale-&-power-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_Scale_QuantileTransformer.ipynb",
                        "title": "RadiusNeighborsClassifier with Scale & Quantile Transformer",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier with separate feature scaling using Scale pipelining Quantile Transformer which is a feature transformation technique. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_Scale_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier, scaling,scale, pipelining, quantile transformer,data tranformation technique, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-scale-&-quantile-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_StandardScaler.ipynb",
                        "title": "RadiusNeighborsClassifier with StandardScaler",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier, with data being scaled by StandardScaler. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_StandardScaler.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier, data, scaled, standardscaler, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-standardscaler"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "RadiusNeighborsClassifier with StandardScaler & Polynomial Features",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier using Standard Scaler with pipeline and Polynomial Features Feature Transformation. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier,standard, scaler, pipeline,polynomial, s, data tranformation, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-standardscaler-&-polynomial-features"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_StandardScaler_PowerTransformer.ipynb",
                        "title": "RadiusNeighborsClassifier with StandardScaler & Power Transformer",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier using Standard Scaler with pipeline and Power Transformer Feature Transformation. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier,standard, scaler, pipeline,power, transformer, data tranformation, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-standardscaler-&-power-transformer"
                    },
                    {
                        "name": "RadiusNeighborsClassifier_StandardScaler_QuantileTransformer.ipynb",
                        "title": "RadiusNeighborsClassifier with StandardScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification task using a simple Radius Neighbor Classifier using Standard Scaler with pipeline and Quantile Transformer Feature Transformation. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Radius_Neighbors/RadiusNeighborsClassifier_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, radius, neighbor, classifier,standard, scaler, pipeline,quantile transformer, data tranformation, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-standardscaler-&-quantile-transformer"
                    }
                ]
            },
            {
                "name": "Random_Forest",
                "models": [
                    {
                        "name": "RandomForestClassifier.ipynb",
                        "title": "Random Forest Classification",
                        "description": "This Code template is for the Classification tasks using a simple RandomForestClassifier based on the Ensemble Learning technique. It is a meta estimator that fits multiple decision trees and uses averaging to improve the predictive accuracy and control over-fitting.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Random_Forest/RandomForestClassifier.ipynb",
                        "keywords": "code template, classification,simple, randomforestclassifier,ensemble,learning technique, meta, estimator, fits, multiple, decision, trees, averaging, improve, predictive, accuracy, control, overfitting",
                        "display_url": "https://siberian.dev/classification/random-forest/random-forest-classification"
                    },
                    {
                        "name": "RandomForestClassifier_MaxAbsScaler.ipynb",
                        "title": "Random Forest Classification with MaxAbsScaler",
                        "description": "This Code template is for the Classification tasks using a simple RandomForestClassifier based on the Ensemble Learning technique along with data rescaling using MaxAbsScaler. Random Forest is a meta estimator that fits multiple decision trees and uses averaging to improve the predictive accuracy and control over-fitting.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Random_Forest/RandomForestClassifier_MaxAbsScaler.ipynb",
                        "keywords": "code template, classification,simple, randomforestclassifier,ensemble,learning technique,data rescaling,maxabsscaler, random, forest, meta, estimator, fits, multiple, decision, trees, averaging, improve, predictive, accuracy, control, overfitting",
                        "display_url": "https://siberian.dev/classification/random-forest/random-forest-classification-with-maxabsscaler"
                    },
                    {
                        "name": "RandomForestClassifier_MinMaxScaler.ipynb",
                        "title": "Random Forest Classification with MinMaxScalerScaler",
                        "description": "This Code template is for the Classification tasks using a simple RandomForestClassifier based on the Ensemble Learning technique along with data rescaling using MinMaxScaler. Random Forest is a meta estimator that fits multiple decision trees and uses averaging to improve the predictive accuracy and control over-fitting.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Random_Forest/RandomForestClassifier_MinMaxScaler.ipynb",
                        "keywords": "code template, classification,simple, randomforestclassifier,ensemble,learning technique,data rescaling,minmaxscaler, random, forest, meta, estimator, fits, multiple, decision, trees, averaging, improve, predictive, accuracy, control, overfitting",
                        "display_url": "https://siberian.dev/classification/random-forest/random-forest-classification-with-minmaxscalerscaler"
                    },
                    {
                        "name": "RandomForestClassifier_Normalize.ipynb",
                        "title": "Random Forest Classification with Normalizer",
                        "description": "This Code template is for the Classification tasks using a simple RandomForestClassifier based on the Ensemble Learning technique and feature rescaling technique Normalize. It is a meta estimator that fits multiple decision trees and uses averaging to improve the predictive accuracy and control over-fitting.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Random_Forest/RandomForestClassifier_Normalize.ipynb",
                        "keywords": "code template, classification,simple, randomforestclassifier,ensemble,learning technique, rescaling technique, normalize, meta, estimator, fits, multiple, decision, trees, averaging, improve, predictive, accuracy, control, overfitting",
                        "display_url": "https://siberian.dev/classification/random-forest/random-forest-classification-with-normalizer"
                    },
                    {
                        "name": "RandomForestClassifier_RobustScaler.ipynb",
                        "title": "Random Forest Classification with RobustScaler",
                        "description": "This Code template is for the Classification tasks using a simple RandomForestClassifier based on the Ensemble Learning technique along with data rescaling using RobustScaler. Random Forest is a meta estimator that fits multiple decision trees and uses averaging to improve the predictive accuracy and control over-fitting.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Random_Forest/RandomForestClassifier_RobustScaler.ipynb",
                        "keywords": "code template, classification,simple, randomforestclassifier,ensemble,learning technique,data rescaling,robustscaler, random, forest, meta, estimator, fits, multiple, decision, trees, averaging, improve, predictive, accuracy, control, overfitting",
                        "display_url": "https://siberian.dev/classification/random-forest/random-forest-classification-with-robustscaler"
                    },
                    {
                        "name": "RandomForestClassifier_StandardScaler.ipynb",
                        "title": "Random Forest Classification with StandardScaler",
                        "description": "This Code template is for the Classification tasks using a simple RandomForestClassifier based on the Ensemble Learning technique along with data rescaling using StandardScaler. Random Forest is a meta estimator that fits multiple decision trees and uses averaging to improve the predictive accuracy and control over-fitting.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Random_Forest/RandomForestClassifier_StandardScaler.ipynb",
                        "keywords": "code template, classification,simple, randomforestclassifier,ensemble,learning technique,data rescaling,standardscaler, random, forest, meta, estimator, fits, multiple, decision, trees, averaging, improve, predictive, accuracy, control, overfitting",
                        "display_url": "https://siberian.dev/classification/random-forest/random-forest-classification-with-standardscaler"
                    }
                ]
            },
            {
                "name": "Support_Vector_Machine",
                "models": [
                    {
                        "name": "LinearSVC.ipynb",
                        "title": "Linear Support Vector Classification",
                        "description": "This Code template is for the Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC.ipynb",
                        "keywords": "code template, classification,simple, linear, support, vector, classifierlinearsvc,support, vector, machine,",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linear-support-vector-classification"
                    },
                    {
                        "name": "LinearSVC_MaxAbsScaler.ipynb",
                        "title": "LinearSVC with MaxAbsScaler",
                        "description": "This Code template is for the Classification task using LinearSVC using MaxAbsScaler as Feature Rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_MaxAbsScaler.ipynb",
                        "keywords": "code template, classification,linearsvc,maxabsscaler, rescaling technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linearsvc-with-maxabsscaler"
                    },
                    {
                        "name": "LinearSVC_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "title": "Linear Support Vector Classification with MaxAbsScaler and PolynomialFeatures",
                        "description": "This Code template is for the Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique StandardScaler and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, linear, support, vector, classifierlinearsvc,support, vector, machine,rescaling technique, standardscaler, data tranformation technique, polynomials, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linear-support-vector-classification-with-maxabsscaler-and-polynomialfeatures"
                    },
                    {
                        "name": "LinearSVC_MaxAbsScaler_PowerTransformer.ipynb",
                        "title": "Linear Support Vector Classification with MaxAbsScaler and PowerTransformer",
                        "description": "This Code template is for the Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique MaxAbsScaler and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_MaxAbsScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, linear, support, vector, classifierlinearsvc,support, vector, machine,rescaling technique, maxabsscaler, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linear-support-vector-classification-with-maxabsscaler-and-powertransformer"
                    },
                    {
                        "name": "LinearSVC_MaxAbsScaler_QuantileTransformer.ipynb",
                        "title": "LinearSVC with MaxAbsScaler and QuantileTransformer",
                        "description": "This Code template is for the Classification task using LinearSVC using MaxAbsScaler with pipeline and Quantile Transformer Feature Transformation.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_MaxAbsScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,linearsvc,maxabsscaler, pipeline,quantile transformer, data tranformation",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linearsvc-with-maxabsscaler-and-quantiletransformer"
                    },
                    {
                        "name": "LinearSVC_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "LinearSVC with MinMaxScaler & Polynomial Features",
                        "description": "This Code template is for the Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique MinMaxScaler and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, linear, support, vector, classifierlinearsvc,support, vector, machine,rescaling technique, minmaxscaler, data tranformation technique, polynomials, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linearsvc-with-minmaxscaler-&-polynomial-features"
                    },
                    {
                        "name": "LinearSVC_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Linear Support Vector Classification with MinMaxScaler and PowerTransformer",
                        "description": "This Code template is for the Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique MinMaxScaler and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, linear, support, vector, classifierlinearsvc,support, vector, machine,rescaling technique, minmaxscaler, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linear-support-vector-classification-with-minmaxscaler-and-powertransformer"
                    },
                    {
                        "name": "LinearSVC_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "LinearSVC with MinMaxScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique MinMaxScaler and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, linear, support, vector, classifierlinearsvc,support, vector, machine,rescaling technique, minmaxscaler, data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linearsvc-with-minmaxscaler-&-quantile-transformer"
                    },
                    {
                        "name": "LinearSVC_Normalize.ipynb",
                        "title": "LinearSVC with Normalize",
                        "description": "This Code template is for the Classification task using a simple Linear Support Vector Classifier (LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique Normalize",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_Normalize.ipynb",
                        "keywords": "code template, classification,simple, linear, support, vector, classifier, linearsvc,support, vector, machine,rescaling technique, normalize",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linearsvc-with-normalize"
                    },
                    {
                        "name": "LinearSVC_Normalize_PolynomialFeatures.ipynb",
                        "title": "LinearSVC with Scale & Polynomial Features",
                        "description": "This Code template is for the Classification task using a simple Linear Support Vector Classifier (LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique Normalize and feature transformation technique Polynomial Features in a pipeline and separately as well.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, linear, support, vector, classifier, linearsvc,support, vector, machine,rescaling technique, normalize, data tranformation technique, polynomial, s, pipeline, separately, well",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linearsvc-with-scale-&-polynomial-features"
                    },
                    {
                        "name": "LinearSVC_Normalize_QuantileTransformer.ipynb",
                        "title": "LinearSVC with Normalize & Quantile Transformer",
                        "description": "This Code template is for classification analysis using the LinearSVC Classifier where rescaling method used is Normalize and feature transformation is done via Quantile Transformer.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_Normalize_QuantileTransformer.ipynb",
                        "keywords": "code template, classification, linearsvc, classifier, rescaling, method, normalize, data tranformation,quantile transformer",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linearsvc-with-normalize-&-quantile-transformer"
                    },
                    {
                        "name": "LinearSVC_PowerTransformer.ipynb",
                        "title": "Linear Support Vector Classification with PowerTransformer",
                        "description": "This Code template is for the Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, linear, support, vector, classifierlinearsvc,support, vector, machine,data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linear-support-vector-classification-with-powertransformer"
                    },
                    {
                        "name": "LinearSVC_QuantileTransformer.ipynb",
                        "title": "Linear Support Vector Classification with QuantileTransformer",
                        "description": "This Code template is for the Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, linear, support, vector, classifierlinearsvc,support, vector, machine,data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linear-support-vector-classification-with-quantiletransformer"
                    },
                    {
                        "name": "LinearSVC_RobustScaler.ipynb",
                        "title": "LinearSVC with RobustScaler",
                        "description": "This Code template is for the Classification task using LinearSVC using RobustScaler with pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_RobustScaler.ipynb",
                        "keywords": "code template, classification,linearsvc,robustscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linearsvc-with-robustscaler"
                    },
                    {
                        "name": "LinearSVC_RobustScaler_PowerTransformer.ipynb",
                        "title": "LinearSVC with RobustScaler & Power Transformer",
                        "description": "This Code template is for the Classification task using LinearSVC using RobustScaler with pipeline and Power Transformer Feature Transformation.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,linearsvc,robustscaler, pipeline,power, transformer, data tranformation",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linearsvc-with-robustscaler-&-power-transformer"
                    },
                    {
                        "name": "LinearSVC_RobustScaler_QuantileTransformer.ipynb",
                        "title": "LinearSVC with RobustScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique RobustScaler and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, linear, support, vector, classifierlinearsvc,support, vector, machine,rescaling technique, robustscaler, data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linearsvc-with-robustscaler-&-quantile-transformer"
                    },
                    {
                        "name": "LinearSVC_Scale.ipynb",
                        "title": "LinearSVC with Scale",
                        "description": "This Code template is for the Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling using Scale.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_Scale.ipynb",
                        "keywords": "code template, classification,simple, linear, support, vector, classifierlinearsvc,support, vector, machine,rescaling,scale",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linearsvc-with-scale"
                    },
                    {
                        "name": "LinearSVC_Scale_PolynomialFeatures.ipynb",
                        "title": "LinearSVC with Scale & Polynomial Features",
                        "description": "This Code template is for the Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with separate feature rescaling using Scale and pipelining PolynomialFeatures which is a feature transformation technique",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_Scale_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, linear, support, vector, classifierlinearsvc,support, vector, machine, rescaling,scale, pipelining, polynomials, data tranformation technique",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linearsvc-with-scale-&-polynomial-features"
                    },
                    {
                        "name": "LinearSVC_Scale_PowerTransformer.ipynb",
                        "title": "LinearSVC with Scale & Power Transformer",
                        "description": "This Code template is for the Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with separate feature rescaling using Scale and pipelining PowerTransformer which is a feature transformation technique",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, linear, support, vector, classifierlinearsvc,support, vector, machine, rescaling,scale, pipelining, powertransformer, data tranformation technique",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linearsvc-with-scale-&-power-transformer"
                    },
                    {
                        "name": "LinearSVC_Scale_QuantileTransformer.ipynb",
                        "title": "LinearSVC with Scale & Quantile Transformer",
                        "description": "This Code template is for the Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique Scale and feature transformation technique QuantileTransformer in a pipeline and separately as well.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_Scale_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, linear, support, vector, classifierlinearsvc,support, vector, machine,rescaling technique, scale, data tranformation technique, quantiletransformer, pipeline, separately, well",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linearsvc-with-scale-&-quantile-transformer"
                    },
                    {
                        "name": "LinearSVC_StandardScaler.ipynb",
                        "title": "Linear Support Vector Classification with StandardScaler",
                        "description": "This Code template is for the Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_StandardScaler.ipynb",
                        "keywords": "code template, classification,simple, linear, support, vector, classifierlinearsvc,support, vector, machine,rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linear-support-vector-classification-with-standardscaler"
                    },
                    {
                        "name": "LinearSVC_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Linear Support Vector Classification with StandardScaler and PolynomialFeatures",
                        "description": "This Code template is for the Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique StandardScaler and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, linear, support, vector, classifierlinearsvc,support, vector, machine,rescaling technique, standardscaler, data tranformation technique, polynomials, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linear-support-vector-classification-with-standardscaler-and-polynomialfeatures"
                    },
                    {
                        "name": "LinearSVC_StandardScaler_PowerTransformer.ipynb",
                        "title": "Linear Support Vector Classification with StandardScaler and PowerTransformer",
                        "description": "This Code template is for the Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique StandardScaler and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, linear, support, vector, classifierlinearsvc,support, vector, machine,rescaling technique, standardscaler, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linear-support-vector-classification-with-standardscaler-and-powertransformer"
                    },
                    {
                        "name": "LinearSVC_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Linear Support Vector Classification with StandardScaler and QuantileTransformer",
                        "description": "This Code template is for the Classification task using a simple Linear Support Vector Classifier(LinearSVC) based on the Support Vector Machine algorithm with feature rescaling technique StandardScaler and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/LinearSVC_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, linear, support, vector, classifierlinearsvc,support, vector, machine,rescaling technique, standardscaler, data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/linear-support-vector-classification-with-standardscaler-and-quantiletransformer"
                    },
                    {
                        "name": "NuSVC.ipynb",
                        "title": "Nu-Support Vector Classification",
                        "description": "This Code template is for the Classification task using a simple Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC.ipynb",
                        "keywords": "code template, classification,simple, nusupport, vector, classifiernusvc,support, vector, machine,",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nu-support-vector-classification"
                    },
                    {
                        "name": "NuSVC_MaxAbsScaler.ipynb",
                        "title": "NuSVC with MaxAbsScaler",
                        "description": "This Code template is for the Classification task using Nu-Support Vector Classifier (NuSVC) based on the Support Vector Machine algorithm with rescaling technique as MaxAbs Scaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_MaxAbsScaler.ipynb",
                        "keywords": "code template, classification,nusupport, vector, classifier, nusvc,support, vector, machine,rescaling technique, maxabs, scaler, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nusvc-with-maxabsscaler"
                    },
                    {
                        "name": "NuSVC_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "title": "NuSVC with MaxAbsScaler & Polynomial Features",
                        "description": "This Code template is for the Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with Polynomial Features as Feature Transformation Technique with rescaling technique as MaxAbsScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,nusupport, vector, classifiernusvc,support, vector, machine,polynomial, s, data tranformation technique, rescaling technique, maxabsscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nusvc-with-maxabsscaler-&-polynomial-features"
                    },
                    {
                        "name": "NuSVC_MaxAbsScaler_PowerTransformer.ipynb",
                        "title": "NuSVC with MaxAbsScaler and PowerTranformer",
                        "description": "This Code template is for the Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique and rescaling technique as MaxAbs Scaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_MaxAbsScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,nusupport, vector, classifiernusvc,support, vector, machine,powertransformer, data tranformation technique, rescaling technique, maxabs, scaler, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nusvc-with-maxabsscaler-and-powertranformer"
                    },
                    {
                        "name": "NuSVC_MaxAbsScaler_QuantileTransformer.ipynb",
                        "title": "NuSVC with MaxAbsScaler and QuantileTransformer",
                        "description": "This Code template is for the Classification task using a simple Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with feature rescaling technique MaxAbsScaler and feature transformation technique QuantileTransformer in pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_MaxAbsScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, nusupport, vector, classifiernusvc,support, vector, machine,rescaling technique, maxabsscaler, data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nusvc-with-maxabsscaler-and-quantiletransformer"
                    },
                    {
                        "name": "NuSVC_MinMaxScaler.ipynb",
                        "title": "Nu-Support Vector Classification with MinMaxScaler",
                        "description": "This Code template is for the Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with MinMaxScaler as feature rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_MinMaxScaler.ipynb",
                        "keywords": "code template, classification,nusupport, vector, classifiernusvc,support, vector, machine,minmaxscaler, rescaling technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nu-support-vector-classification-with-minmaxscaler"
                    },
                    {
                        "name": "NuSVC_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "NuSVC with MinMaxScaler & Polynomial Features",
                        "description": "This Code template is for the Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with Polynomial Features as Feature Transformation Technique with rescaling technique as MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,nusupport, vector, classifiernusvc,support, vector, machine,polynomial, s, data tranformation technique, rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nusvc-with-minmaxscaler-&-polynomial-features"
                    },
                    {
                        "name": "NuSVC_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "NuSVC with MinMaxScaler & Power Transformer",
                        "description": "This Code template is for the Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique with rescaling technique as MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,nusupport, vector, classifiernusvc,support, vector, machine,powertransformer, data tranformation technique, rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nusvc-with-minmaxscaler-&-power-transformer"
                    },
                    {
                        "name": "NuSVC_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "NuSVC with MinMaxScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with QuantileTransformer as Feature Transformation Technique with rescaling technique as MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,nusupport, vector, classifiernusvc,support, vector, machine,quantiletransformer, data tranformation technique, rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nusvc-with-minmaxscaler-&-quantile-transformer"
                    },
                    {
                        "name": "NuSVC_Normalize.ipynb",
                        "title": "Nu-Support Vector Classification with Normalize",
                        "description": "This Code template is for the Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with Normalize as feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_Normalize.ipynb",
                        "keywords": "code template, classification,nusupport, vector, classifiernusvc,support, vector, machine,normalize, rescaling technique",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nu-support-vector-classification-with-normalize"
                    },
                    {
                        "name": "NuSVC_Normalize_PowerTransformer.ipynb",
                        "title": "NuSVC with Normalize & Power Transformer",
                        "description": "This Code template is for the Classification task using NuSVC Classifier with Normalizer feature scaling technique and PowerTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_Normalize_PowerTransformer.ipynb",
                        "keywords": "code template, classification,nusvc, classifier, normalizer, scaling technique, powertransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nusvc-with-normalize-&-power-transformer"
                    },
                    {
                        "name": "NuSVC_PolynomialFeatures.ipynb",
                        "title": "Nu-Support Vector Classification with Polynomial Features",
                        "description": "This Code template is for the Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,nusupport, vector, classifiernusvc,support, vector, machine,polynomials, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nu-support-vector-classification-with-polynomial-features"
                    },
                    {
                        "name": "NuSVC_PowerTransformer.ipynb",
                        "title": "NuSVC with PowerTransformer",
                        "description": "This Code template is for the Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_PowerTransformer.ipynb",
                        "keywords": "code template, classification,nusupport, vector, classifiernusvc,support, vector, machine,powertransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nusvc-with-powertransformer"
                    },
                    {
                        "name": "NuSVC_QuantileTransformer.ipynb",
                        "title": "NuSVC with QuantileTransformer",
                        "description": "This Code template is for the Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with QuantileTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,nusupport, vector, classifiernusvc,support, vector, machine,quantiletransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nusvc-with-quantiletransformer"
                    },
                    {
                        "name": "NuSVC_RobustScaler.ipynb",
                        "title": "Nu-Support Vector Classification with RobustScaler",
                        "description": "This Code template is for the Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with RobustScaler as feature rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_RobustScaler.ipynb",
                        "keywords": "code template, classification,nusupport, vector, classifiernusvc,support, vector, machine,robustscaler, rescaling technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nu-support-vector-classification-with-robustscaler"
                    },
                    {
                        "name": "NuSVC_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "NuSVC with RobustScaler & PolynomialFeatures",
                        "description": "This Code template is for the Classification task using a simple Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with feature rescaling technique RobustScaler and feature transformation technique PolynomialFeatures in pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, nusupport, vector, classifiernusvc,support, vector, machine,rescaling technique, robustscaler, data tranformation technique, polynomials, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nusvc-with-robustscaler-&-polynomialfeatures"
                    },
                    {
                        "name": "NuSVC_RobustScaler_PowerTransformer.ipynb",
                        "title": "NuSVC with Robust Scaler & Power Transformer",
                        "description": "This Code template is for the Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique and rescaling technique as Robust Scaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,nusupport, vector, classifiernusvc,support, vector, machine,powertransformer, data tranformation technique, rescaling technique, robust, scaler, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nusvc-with-robust-scaler-&-power-transformer"
                    },
                    {
                        "name": "NuSVC_RobustScaler_QuantileTransformer.ipynb",
                        "title": "NuSVC with RobustScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with Quantile Transformer as Feature Transformation Technique and rescaling technique as Robust Scaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,nusupport, vector, classifiernusvc,support, vector, machine,quantile transformer, data tranformation technique, rescaling technique, robust, scaler, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nusvc-with-robustscaler-&-quantile-transformer"
                    },
                    {
                        "name": "NuSVC_Scale.ipynb",
                        "title": "Nu-Support Vector Classification  with Scale",
                        "description": "This Code template is for the Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with Scale as feature rescaling technique",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_Scale.ipynb",
                        "keywords": "code template, classification,nusupport, vector, classifiernusvc,support, vector, machine,scale, rescaling technique",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nu-support-vector-classification--with-scale"
                    },
                    {
                        "name": "NuSVC_Scale_PolynomialFeatures.ipynb",
                        "title": "NuSVC with Scale & PolynomialFeatures",
                        "description": "This Code template is for the Classification task using a simple Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with feature rescaling technique Scaler and feature transformation technique PolynomialFeatures in pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_Scale_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,simple, nusupport, vector, classifiernusvc,support, vector, machine,rescaling technique, scaler, data tranformation technique, polynomials, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nusvc-with-scale-&-polynomialfeatures"
                    },
                    {
                        "name": "NuSVC_Scale_PowerTransformer.ipynb",
                        "title": "NuSVC with Scale & Power Transformer",
                        "description": "This Code template is for the Classification task using a simple Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with Scaler as feature rescaling technique separately and PowerTransformer as feature transformation technique in pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, classification,simple, nusupport, vector, classifiernusvc,support, vector, machine,scaler, rescaling technique, separately, powertransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nusvc-with-scale-&-power-transformer"
                    },
                    {
                        "name": "NuSVC_StandardScaler.ipynb",
                        "title": "Nu-Support Vector Classification with StandardScaler",
                        "description": "This Code template is for the Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm and feature rescaling technique StandardScaler in a pipeline. The implementation of NuSVC is based on libsvm.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_StandardScaler.ipynb",
                        "keywords": "code template, classification,nusupport, vector, classifiernusvc,support, vector, machine,rescaling technique, standardscaler, pipeline,nusvc,libsvm",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nu-support-vector-classification-with-standardscaler"
                    },
                    {
                        "name": "NuSVC_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "NuSVC with StandardScaler and PolynomialFeatures",
                        "description": "This Code template is for the Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with StandardScaler feature scaling technique and PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,nusupport, vector, classifiernusvc,support, vector, machine,standardscaler, scaling technique, polynomials, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nusvc-with-standardscaler-and-polynomialfeatures"
                    },
                    {
                        "name": "NuSVC_StandardScaler_PowerTransformer.ipynb",
                        "title": "NuSVC with StandardScaler and PowerTransformer",
                        "description": "This Code template is for the Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with StandardScaler feature scaling technique and PowerTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,nusupport, vector, classifiernusvc,support, vector, machine,standardscaler, scaling technique, powertransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nusvc-with-standardscaler-and-powertransformer"
                    },
                    {
                        "name": "NuSVC_StandardScaler_QuantileTransformer.ipynb",
                        "title": "NuSVC with StandardScaler and QuantileTransformer",
                        "description": "This Code template is for the Classification task using Nu-Support Vector Classifier(NuSVC) based on the Support Vector Machine algorithm with StandardScaler feature scaling technique and QuantileTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/NuSVC_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,nusupport, vector, classifiernusvc,support, vector, machine,standardscaler, scaling technique, quantiletransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/nusvc-with-standardscaler-and-quantiletransformer"
                    },
                    {
                        "name": "SVC.ipynb",
                        "title": "Simple Support Vector Classification",
                        "description": "This Code template is for the Classification task using simple Support Vector Classifier(SVC) based on the Support Vector Machine algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC.ipynb",
                        "keywords": "code template, classification,simple, support, vector, classifiersvc,support, vector, machine,",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/simple-support-vector-classification"
                    },
                    {
                        "name": "SVC_MaxAbsScaler.ipynb",
                        "title": "SVC with MaxAbsScaler",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with MaxAbsScaler feature scaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_MaxAbsScaler.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,maxabsscaler, scaling technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/svc-with-maxabsscaler"
                    },
                    {
                        "name": "SVC_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "title": "SVC with MaxAbsScaler and PolynomialFeatures",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with MaxAbsScaler feature scaling technique and PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_MaxAbsScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,maxabsscaler, scaling technique, polynomials, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/svc-with-maxabsscaler-and-polynomialfeatures"
                    },
                    {
                        "name": "SVC_MinMaxScaler.ipynb",
                        "title": "Support Vector Classification with MinMaxScaler",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with MinMaxScaler as feature rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_MinMaxScaler.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,minmaxscaler, rescaling technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/support-vector-classification-with-minmaxscaler"
                    },
                    {
                        "name": "SVC_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Support Vector Classification with  MinMaxScaler & Polynomial Features",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with MinMaxScaler feature scaling technique and PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,minmaxscaler, scaling technique, polynomials, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/support-vector-classification-with--minmaxscaler-&-polynomial-features"
                    },
                    {
                        "name": "SVC_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Support Vector Classification with  MinMaxScaler & Power Transformer",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique with rescaling technique as MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,powertransformer, data tranformation technique, rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/support-vector-classification-with--minmaxscaler-&-power-transformer"
                    },
                    {
                        "name": "SVC_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Support Vector Classification with  MinMaxScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with QuantileTransformer as Feature Transformation Technique with rescaling technique as MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,quantiletransformer, data tranformation technique, rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/support-vector-classification-with--minmaxscaler-&-quantile-transformer"
                    },
                    {
                        "name": "SVC_Normalize.ipynb",
                        "title": "Support Vector Classification with Normalize",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with Normalize as feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_Normalize.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,normalize, rescaling technique",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/support-vector-classification-with-normalize"
                    },
                    {
                        "name": "SVC_Normalize_PolynomialFeatures.ipynb",
                        "title": "Support Vector Classification with Normalize & Polynomial Features",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with normalize feature scaling technique and PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,normalize, scaling technique, polynomials, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/support-vector-classification-with-normalize-&-polynomial-features"
                    },
                    {
                        "name": "SVC_Normalize_PowerTransformer.ipynb",
                        "title": "Support Vector Classification with Normalize & Power Transformer",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with normalize feature scaling technique seperately and PowerTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_Normalize_PowerTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,normalize, scaling technique, powertransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/support-vector-classification-with-normalize-&-power-transformer"
                    },
                    {
                        "name": "SVC_Normalize_QuantileTransformer.ipynb",
                        "title": "Support Vector Classification with Normalize & Quantile Transformer",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with normalize feature scaling technique seperately and QuantileTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_Normalize_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,normalize, scaling technique, quantiletransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/support-vector-classification-with-normalize-&-quantile-transformer"
                    },
                    {
                        "name": "SVC_PolynomialFeatures.ipynb",
                        "title": "Support Vector Classification with Polynomial Features",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,polynomials, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/support-vector-classification-with-polynomial-features"
                    },
                    {
                        "name": "SVC_PowerTransformer.ipynb",
                        "title": "Support Vector Classification with  Power Transformer",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_PowerTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,powertransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/support-vector-classification-with--power-transformer"
                    },
                    {
                        "name": "SVC_QuantileTransformer.ipynb",
                        "title": "Support Vector Classification with  Quantile Transformer",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,powertransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/support-vector-classification-with--quantile-transformer"
                    },
                    {
                        "name": "SVC_RobustScaler.ipynb",
                        "title": "Support Vector Classification with RobustScaler",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with RobustScaler as feature rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_RobustScaler.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,robustscaler, rescaling technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/support-vector-classification-with-robustscaler"
                    },
                    {
                        "name": "SVC_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "Support Vector Classification with RobustScaler & Polynomial Features",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with RobustScaler feature scaling technique and PolynomialFeatures as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,robustscaler, scaling technique, polynomials, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/support-vector-classification-with-robustscaler-&-polynomial-features"
                    },
                    {
                        "name": "SVC_RobustScaler_PowerTransformer.ipynb",
                        "title": "Support Vector Classification with Robust Scaler & Power Transformer",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique and rescaling technique as Robust Scaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,powertransformer, data tranformation technique, rescaling technique, robust, scaler, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/support-vector-classification-with-robust-scaler-&-power-transformer"
                    },
                    {
                        "name": "SVC_RobustScaler_QuantileTransformer.ipynb",
                        "title": "SVC with RobustScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification task using Support Vector Classifier (SVC) based on the Support Vector Machine algorithm with QuantileTransformer as Feature Transformation Technique and rescaling technique as Robust Scaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, classifier, svc,support, vector, machine,quantiletransformer, data tranformation technique, rescaling technique, robust, scaler, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/svc-with-robustscaler-&-quantile-transformer"
                    },
                    {
                        "name": "SVC_Scale.ipynb",
                        "title": "Support Vector Classification with Scale",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with Scale as feature rescaling technique",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_Scale.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,scale, rescaling technique",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/support-vector-classification-with-scale"
                    },
                    {
                        "name": "SVC_Scale_QuantileTransformer.ipynb",
                        "title": "SVC with Scale & Quantile Transformer",
                        "description": "This Code template is for the Classification task using simple Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with data rescaling technique Scale separately and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_Scale_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,simple, support, vector, classifiersvc,support, vector, machine,data rescaling technique, scale, separately, data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/svc-with-scale-&-quantile-transformer"
                    },
                    {
                        "name": "SVC_StandardScaler.ipynb",
                        "title": "Support Vector Classification with StandardScaler",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_StandardScaler.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/support-vector-classification-with-standardscaler"
                    },
                    {
                        "name": "SVC_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Support Vector Classification with  StandardScaler & Polynomial Features",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with PolynomialFeatures as Feature Transformation Technique rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,polynomials, data tranformation technique, rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/support-vector-classification-with--standardscaler-&-polynomial-features"
                    },
                    {
                        "name": "SVC_StandardScaler_PowerTransformer.ipynb",
                        "title": "Support Vector Classification with  StandardScaler & Power Transformer",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,powertransformer, data tranformation technique, rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/support-vector-classification-with--standardscaler-&-power-transformer"
                    },
                    {
                        "name": "SVC_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Support Vector Classification with  StandardScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification task using Support Vector Classifier(SVC) based on the Support Vector Machine algorithm with QuantileTransformer as Feature Transformation Technique rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Classification/Support_Vector_Machine/SVC_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, classifiersvc,support, vector, machine,quantiletransformer, data tranformation technique, rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/classification/support-vector-machine/support-vector-classification-with--standardscaler-&-quantile-transformer"
                    }
                ]
            },
            {
                "name": "XGBoost",
                "models": [
                    {
                        "name": "XGBoostClassifier.ipynb",
                        "title": "Extreme Gradient Boosting Classification",
                        "description": "This Code template is for the Classification task using XGBoostClassifier under the XGBoost framework. It is a decision Tree-based ensemble Machine Learning algorithm that uses a Gradient Boosting framework.",
                        "URL": "https://cdn.siberian.dev/code/Classification/XGBoost/XGBoostClassifier.ipynb",
                        "keywords": "code template, classification,xgboostclassifier, xgboost, framework, decision, treebased, ensemble, machine learning,gradient boosting, framework eXtreme Gradient Boosting",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-robustscaler-&-quantiletransformer"
                    },
                    {
                        "name": "XGBoostClassifier_DMatrix.ipynb",
                        "title": "XGBoost Classification using DMatrix",
                        "description": "This Code template is for the Classification task using XGBoost along with the DMatrix. DMatrix is an internal data structure that gets used by the XGBoost framework. It is optimized for both memory efficiency and training speed.",
                        "URL": "https://cdn.siberian.dev/code/Classification/XGBoost/XGBoostClassifier_DMatrix.ipynb",
                        "keywords": "code template, classification,xgboost, dmatrix, dmatrix, internal, data, structure, xgboost, framework, optimized, memory, efficiency, training, speed eXtreme Gradient Boosting",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-scale"
                    },
                    {
                        "name": "XGBoostClassifier_MaxAbsScaler.ipynb",
                        "title": "XGBoostClassifier with MaxAbsScaler",
                        "description": "This Code template is for the Classification task using XGBoostClassifier. Even though data rescaling is an optional operation in the case of any tree-based algorithm, this template utilizes MaxAbsScaler to understand the effect on model performance.",
                        "URL": "https://cdn.siberian.dev/code/Classification/XGBoost/XGBoostClassifier_MaxAbsScaler.ipynb",
                        "keywords": "code template, classification,xgboostclassifier, maxabsscaler, rescaling technique, xgboost, framework, treebased, ensemble, machine learning,gradient boosting, framework eXtreme Gradient Boosting",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-robustscaler-&-polynomialfeatures"
                    },
                    {
                        "name": "XGBoostClassifier_MinMaxScaler.ipynb",
                        "title": "XGBoostClassifier with MinMaxScaler",
                        "description": "This Code template is for the Classification task using XGBoostClassifier along with MinMaxScaler Rescaling Technique. The XGBoost (eXtreme Gradient Boosting) is a popular and efficient open-source implementation of the gradient-boosted trees algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Classification/XGBoost/XGBoostClassifier_MinMaxScaler.ipynb",
                        "keywords": "code template, classification,xgboostclassifier, minmaxscaler, rescaling technique, xgboost, framework, treebased, ensemble, machine learning,gradient boosting, framework eXtreme Gradient Boosting",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-robustscaler-&-scale"
                    },
                    {
                        "name": "XGBoostClassifier_Normalize.ipynb",
                        "title": "XGBoostClassifier with Normalize",
                        "description": "This Code template is for classification analysis using the XGBoost Classifier. XGBoost is one of the most popular ML algorithms due to its tendency to yield highly accurate results. Normalize is utilized to perform data normalization.",
                        "URL": "https://cdn.siberian.dev/code/Classification/XGBoost/XGBoostClassifier_Normalize.ipynb",
                        "keywords": "code template, classification, xgboost, classifier, rescaling,normalize eXtreme Gradient Boosting",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-scale-&-quantiletransformer"
                    },
                    {
                        "name": "XGBoostClassifier_StandardScaler.ipynb",
                        "title": "XGBoostClassifier with StandardScaler",
                        "description": "The Code Sample utilized XGBoostClassifier from the XGBoost library for classification problems on tabular data. Standard Scaler is also utilized to perform data rescaling.",
                        "URL": "https://cdn.siberian.dev/code/Classification/XGBoost/XGBoostClassifier_StandardScaler.ipynb",
                        "keywords": "code template, classification,xgboostclassifier, standardscaler, rescaling technique, xgboost, framework, treebased, ensemble, machine learning,gradient boosting, framework eXtreme Gradient Boosting",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-standardscaler"
                    }
                ]
            }
        ]
    },
    {
        "name": "Clustering",
        "image": "https://cdn.siberian.dev/code-gen/clustering_blue.png",
        "description": "Collect similar looking data points into groups of clusters.",
        "models": [
            {
                "name": "AffinityPropagation",
                "models": [
                    {
                        "name": "AffinityPropagation.ipynb",
                        "title": "Affinity Propagation",
                        "description": "This code template is used for performing unsupervised technique called clustering to label the data with an Affinity Propagation algorithm",
                        "URL": "https://cdn.siberian.dev/code/Clustering/AffinityPropagation/AffinityPropagation.ipynb",
                        "keywords": "code template, performing, unsupervised, technique,clustering, label, data, affinity, propagation,",
                        "display_url": "https://siberian.dev/clustering/affinitypropagation/affinity-propagation"
                    },
                    {
                        "name": "AffinityPropagation_MaxAbsScaler.ipynb",
                        "title": "Affinity Propagation with MaxAbsScaler",
                        "description": "This code template is used for performing unsupervised technique called clustering to label the data with an Affinity Propagation algorithm with feature rescaling technique called MaxAbsScaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/AffinityPropagation/AffinityPropagation_MaxAbsScaler.ipynb",
                        "keywords": "code template, performing, unsupervised, technique,clustering, label, data, affinity, propagation,rescaling technique,maxabsscaler",
                        "display_url": "https://siberian.dev/clustering/affinitypropagation/affinity-propagation-with-maxabsscaler"
                    },
                    {
                        "name": "AffinityPropagation_MinMaxScaler.ipynb",
                        "title": "AffinityPropagation with MinMaxScaler",
                        "description": "This code template is used for performing unsupervised technique called clustering to label the data with an Affinity Propagation algorithm with scaling technique MinMaxScaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/AffinityPropagation/AffinityPropagation_MinMaxScaler.ipynb",
                        "keywords": "code template, performing, unsupervised, technique,clustering, label, data, affinity, propagation,scaling technique, minmaxscaler",
                        "display_url": "https://siberian.dev/clustering/affinitypropagation/affinitypropagation-with-minmaxscaler"
                    },
                    {
                        "name": "AffinityPropagation_Normalize.ipynb",
                        "title": "AffinityPropagation with Normalize",
                        "description": "This code template is used for performing unsupervised technique called clustering to label the data with an Affinity Propagation algorithm with scaling technique Normalize.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/AffinityPropagation/AffinityPropagation_Normalize.ipynb",
                        "keywords": "code template, performing, unsupervised, technique,clustering, label, data, affinity, propagation,scaling technique, normalize",
                        "display_url": "https://siberian.dev/clustering/affinitypropagation/affinitypropagation-with-normalize"
                    },
                    {
                        "name": "AffinityPropagation_RobustScaler.ipynb",
                        "title": "AffinityPropagation with RobustScaler",
                        "description": "This code template is used for performing unsupervised technique called clustering to label the data with an Affinity Propagation algorithm with scaling technique RobustScaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/AffinityPropagation/AffinityPropagation_RobustScaler.ipynb",
                        "keywords": "code template, performing, unsupervised, technique,clustering, label, data, affinity, propagation,scaling technique, robustscaler",
                        "display_url": "https://siberian.dev/clustering/affinitypropagation/affinitypropagation-with-robustscaler"
                    },
                    {
                        "name": "AffinityPropagation_Scale.ipynb",
                        "title": "AffinityPropagation with Scale",
                        "description": "This code template is used for performing unsupervised technique called clustering to label the data with an Affinity Propagation algorithm with scaling technique 'scale' function",
                        "URL": "https://cdn.siberian.dev/code/Clustering/AffinityPropagation/AffinityPropagation_Scale.ipynb",
                        "keywords": "code template, performing, unsupervised, technique,clustering, label, data, affinity, propagation,scaling technique, scale, function",
                        "display_url": "https://siberian.dev/clustering/affinitypropagation/affinitypropagation-with-scale"
                    },
                    {
                        "name": "AffinityPropagation_StandardScaler.ipynb",
                        "title": "AffinityPropagation with StandardScaler",
                        "description": "This code template is used for performing unsupervised technique called clustering to label the data with an Affinity Propagation algorithm with scaling technique StandardScaler",
                        "URL": "https://cdn.siberian.dev/code/Clustering/AffinityPropagation/AffinityPropagation_StandardScaler.ipynb",
                        "keywords": "code template, performing, unsupervised, technique,clustering, label, data, affinity, propagation,scaling technique, standardscaler",
                        "display_url": "https://siberian.dev/clustering/affinitypropagation/affinitypropagation-with-standardscaler"
                    }
                ]
            },
            {
                "name": "Agglomerative_Clustering",
                "models": [
                    {
                        "name": "AgglomerativeClustering.ipynb",
                        "title": "Agglomerative Clustering",
                        "description": "This Code template is for the Cluster analysis using a simple Agglomerative Clustering algorithm. Which is type of hierarchical clustering, and this code template includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/Agglomerative_Clustering/AgglomerativeClustering.ipynb",
                        "keywords": "code template, cluster, simple, agglomerative, clustering,type, hierarchical, clustering, code template, includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/agglomerative-clustering/agglomerative-clustering"
                    },
                    {
                        "name": "AgglomerativeClustering_MaxAbsScaler.ipynb",
                        "title": "Agglomerative Clustering with MaxAbsScaler",
                        "description": "This Code template is for the Cluster analysis using a simple Agglomerative Clustering algorithm with the MaxAbsScaler feature rescaling technique. Which is type of hierarchical clustering, and this code template includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/Agglomerative_Clustering/AgglomerativeClustering_MaxAbsScaler.ipynb",
                        "keywords": "code template, cluster, simple, agglomerative, clustering,maxabsscaler, rescaling technique, type, hierarchical, clustering, code template, includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/agglomerative-clustering/agglomerative-clustering-with-maxabsscaler"
                    },
                    {
                        "name": "AgglomerativeClustering_MinMaxScaler.ipynb",
                        "title": "Agglomerative Clustering with MinMaxScaler",
                        "description": "This Code template is for the Cluster analysis using a simple Agglomerative Clustering algorithm with the MinMaxScaler feature rescaling technique. Which is type of hierarchical clustering, and this code template includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/Agglomerative_Clustering/AgglomerativeClustering_MinMaxScaler.ipynb",
                        "keywords": "code template, cluster, simple, agglomerative, clustering,minmaxscaler, rescaling technique, type, hierarchical, clustering, code template, includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/agglomerative-clustering/agglomerative-clustering-with-minmaxscaler"
                    },
                    {
                        "name": "AgglomerativeClustering_Normalize.ipynb",
                        "title": "Agglomerative Clustering with Normalize",
                        "description": "This Code template is for the Cluster analysis using a simple Agglomerative Clustering algorithm with the Normalize as feature rescaling technique. Which is type of hierarchical clustering, and this code template includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/Agglomerative_Clustering/AgglomerativeClustering_Normalize.ipynb",
                        "keywords": "code template, cluster, simple, agglomerative, clustering,normalize, rescaling technique, type, hierarchical, clustering, code template, includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/agglomerative-clustering/agglomerative-clustering-with-normalize"
                    },
                    {
                        "name": "AgglomerativeClustering_RobustScaler.ipynb",
                        "title": "Agglomerative Clustering with RobustScaler",
                        "description": "This Code template is for the Cluster analysis using a simple Agglomerative Clustering algorithm with the RobustScaler feature rescaling technique. Which is type of hierarchical clustering, and this code template includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/Agglomerative_Clustering/AgglomerativeClustering_RobustScaler.ipynb",
                        "keywords": "code template, cluster, simple, agglomerative, clustering,robustscaler, rescaling technique, type, hierarchical, clustering, code template, includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/agglomerative-clustering/agglomerative-clustering-with-robustscaler"
                    },
                    {
                        "name": "AgglomerativeClustering_Scale.ipynb",
                        "title": "Agglomerative Clustering with Scale",
                        "description": "This Code template is for the Cluster analysis using a simple Agglomerative Clustering algorithm with the Scale as feature rescaling technique. Which is type of hierarchical clustering, and this code template includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/Agglomerative_Clustering/AgglomerativeClustering_Scale.ipynb",
                        "keywords": "code template, cluster, simple, agglomerative, clustering,scale, rescaling technique, type, hierarchical, clustering, code template, includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/agglomerative-clustering/agglomerative-clustering-with-scale"
                    },
                    {
                        "name": "AgglomerativeClustering_StandardScaler.ipynb",
                        "title": "Agglomerative Clustering with StandardScaler",
                        "description": "This Code template is for the Cluster analysis using a simple Agglomerative Clustering algorithm with the StandardScaler feature rescaling technique. Which is type of hierarchical clustering, and this code template includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/Agglomerative_Clustering/AgglomerativeClustering_StandardScaler.ipynb",
                        "keywords": "code template, cluster, simple, agglomerative, clustering,standardscaler, rescaling technique, type, hierarchical, clustering, code template, includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/agglomerative-clustering/agglomerative-clustering-with-standardscaler"
                    }
                ]
            },
            {
                "name": "BIRCH",
                "models": [
                    {
                        "name": "BIRCH.ipynb",
                        "title": "Simple BIRCH",
                        "description": "This Code template is for the Cluster analysis using a simple BIRCH(balanced iterative reducing and clustering using hierarchies) Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/BIRCH/BIRCH.ipynb",
                        "keywords": "code template, cluster, simple, birchbalanced, iterative, reducing, clustering,hierarchies, clustering,includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/birch/simple-birch"
                    },
                    {
                        "name": "BIRCH_MaxAbsScaler.ipynb",
                        "title": "BIRCH with MaxAbsScaler",
                        "description": "This Code template is for the Cluster analysis using a simple BIRCH(balanced iterative reducing and clustering using hierarchies) Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters along with feature scaling using MaxAbsScaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/BIRCH/BIRCH_MaxAbsScaler.ipynb",
                        "keywords": "code template, cluster, simple, birchbalanced, iterative, reducing, clustering,hierarchies, clustering,includes, d, d, cluster, visualization, clusters, scaling,maxabsscaler",
                        "display_url": "https://siberian.dev/clustering/birch/birch-with-maxabsscaler"
                    },
                    {
                        "name": "BIRCH_MinMaxScaler.ipynb",
                        "title": "BIRCH with MinMaxScaler",
                        "description": "This Code template is for the Cluster analysis using a simple BIRCH(balanced iterative reducing and clustering using hierarchies) Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters along with feature scaling using MinMaxScaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/BIRCH/BIRCH_MinMaxScaler.ipynb",
                        "keywords": "code template, cluster, simple, birchbalanced, iterative, reducing, clustering,hierarchies, clustering,includes, d, d, cluster, visualization, clusters, scaling,minmaxscaler",
                        "display_url": "https://siberian.dev/clustering/birch/birch-with-minmaxscaler"
                    },
                    {
                        "name": "BIRCH_Normalize.ipynb",
                        "title": "BIRCH with Normalize",
                        "description": "This Code template is for the Cluster analysis using a simple BIRCH(balanced iterative reducing and clustering using hierarchies) Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters along with feature scaling using MinMaxScaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/BIRCH/BIRCH_Normalize.ipynb",
                        "keywords": "code template, cluster, simple, birchbalanced, iterative, reducing, clustering,hierarchies, clustering,includes, d, d, cluster, visualization, clusters, scaling,minmaxscaler",
                        "display_url": "https://siberian.dev/clustering/birch/birch-with-normalize"
                    },
                    {
                        "name": "BIRCH_RobustScaler.ipynb",
                        "title": "BIRCH with RobustScaler",
                        "description": "This Code template is for the Cluster analysis using a simple BIRCH(balanced iterative reducing and clustering using hierarchies) Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters along with feature scaling using RobustScaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/BIRCH/BIRCH_RobustScaler.ipynb",
                        "keywords": "code template, cluster, simple, birchbalanced, iterative, reducing, clustering,hierarchies, clustering,includes, d, d, cluster, visualization, clusters, scaling,robustscaler",
                        "display_url": "https://siberian.dev/clustering/birch/birch-with-robustscaler"
                    },
                    {
                        "name": "BIRCH_Scale.ipynb",
                        "title": "BIRCH with Scale",
                        "description": "This Code template is for the Cluster analysis using a simple BIRCH(balanced iterative reducing and clustering using hierarchies) Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters along with feature scaling using Scale.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/BIRCH/BIRCH_Scale.ipynb",
                        "keywords": "code template, cluster, simple, birchbalanced, iterative, reducing, clustering,hierarchies, clustering,includes, d, d, cluster, visualization, clusters, scaling,scale",
                        "display_url": "https://siberian.dev/clustering/birch/birch-with-scale"
                    },
                    {
                        "name": "BIRCH_StandardScaler.ipynb",
                        "title": "BIRCH with StandardScaler",
                        "description": "This Code template is for the Cluster analysis using a simple BIRCH(balanced iterative reducing and clustering using hierarchies) Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters along with feature scaling using StandardScaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/BIRCH/BIRCH_StandardScaler.ipynb",
                        "keywords": "code template, cluster, simple, birchbalanced, iterative, reducing, clustering,hierarchies, clustering,includes, d, d, cluster, visualization, clusters, scaling,standardscaler",
                        "display_url": "https://siberian.dev/clustering/birch/birch-with-standardscaler"
                    }
                ]
            },
            {
                "name": "DBSCAN",
                "models": [
                    {
                        "name": "DBSCAN.ipynb",
                        "title": "Simple DBSCAN",
                        "description": "This Code template is for the Cluster analysis using a simple DBSCAN (Density-Based Spatial Clustering of Applications with Noise) Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/DBSCAN/DBSCAN.ipynb",
                        "keywords": "code template, cluster, simple, dbscan, densitybased, spatial, clustering, applications, noise, clustering,includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/dbscan/simple-dbscan"
                    },
                    {
                        "name": "DBSCAN_MaxAbsScaler.ipynb",
                        "title": "DBSCAN with MaxAbsScaler",
                        "description": "This Code template is for the Cluster analysis using a simple DBSCAN (Density-Based Spatial Clustering of Applications with Noise) Clustering algorithm including 2D and 3D cluster visualization of the Clusters along with the MaxAbsScaler as a feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/DBSCAN/DBSCAN_MaxAbsScaler.ipynb",
                        "keywords": "code template, cluster, simple, dbscan, densitybased, spatial, clustering, applications, noise, clustering,including, d, d, cluster, visualization, clusters, maxabsscaler, rescaling technique",
                        "display_url": "https://siberian.dev/clustering/dbscan/dbscan-with-maxabsscaler"
                    },
                    {
                        "name": "DBSCAN_MinMaxScaler.ipynb",
                        "title": "DBSCAN with MinMaxScaler",
                        "description": "This Code template is for the Cluster analysis using a simple DBSCAN (Density-Based Spatial Clustering of Applications with Noise) Clustering algorithm including 2D and 3D cluster visualization of the Clusters along with the MinMaxScaler as a feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/DBSCAN/DBSCAN_MinMaxScaler.ipynb",
                        "keywords": "code template, cluster, simple, dbscan, densitybased, spatial, clustering, applications, noise, clustering,including, d, d, cluster, visualization, clusters, minmaxscaler, rescaling technique",
                        "display_url": "https://siberian.dev/clustering/dbscan/dbscan-with-minmaxscaler"
                    },
                    {
                        "name": "DBSCAN_Normalize.ipynb",
                        "title": "DBSCAN with Normalize",
                        "description": "This Code template is for the Cluster analysis using a simple DBSCAN (Density-Based Spatial Clustering of Applications with Noise) Clustering algorithm including 2D and 3D cluster visualization of the Clusters along with the Normalize as a feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/DBSCAN/DBSCAN_Normalize.ipynb",
                        "keywords": "code template, cluster, simple, dbscan, densitybased, spatial, clustering, applications, noise, clustering,including, d, d, cluster, visualization, clusters, normalize, rescaling technique",
                        "display_url": "https://siberian.dev/clustering/dbscan/dbscan-with-normalize"
                    },
                    {
                        "name": "DBSCAN_RobustScaler.ipynb",
                        "title": "DBSCAN with RobustScaler",
                        "description": "This Code template is for the Cluster analysis using a simple DBSCAN (Density-Based Spatial Clustering of Applications with Noise) Clustering algorithm including 2D and 3D cluster visualization of the Clusters along with the RobustScaler as a feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/DBSCAN/DBSCAN_RobustScaler.ipynb",
                        "keywords": "code template, cluster, simple, dbscan, densitybased, spatial, clustering, applications, noise, clustering,including, d, d, cluster, visualization, clusters, robustscaler, rescaling technique",
                        "display_url": "https://siberian.dev/clustering/dbscan/dbscan-with-robustscaler"
                    },
                    {
                        "name": "DBSCAN_Scale.ipynb",
                        "title": "DBSCAN with Scale",
                        "description": "This Code template is for the Cluster analysis using a simple DBSCAN (Density-Based Spatial Clustering of Applications with Noise) Clustering algorithm including 2D and 3D cluster visualization of the Clusters along with the Scale as a feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/DBSCAN/DBSCAN_Scale.ipynb",
                        "keywords": "code template, cluster, simple, dbscan, densitybased, spatial, clustering, applications, noise, clustering,including, d, d, cluster, visualization, clusters, scale, rescaling technique",
                        "display_url": "https://siberian.dev/clustering/dbscan/dbscan-with-scale"
                    },
                    {
                        "name": "DBSCAN_StandardScaler.ipynb",
                        "title": "DBSCAN with StandardScaler",
                        "description": "This Code template is for the Cluster analysis using a simple DBSCAN (Density-Based Spatial Clustering of Applications with Noise) Clustering algorithm including 2D and 3D cluster visualization of the Clusters along with the StandardScaler as a feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/DBSCAN/DBSCAN_StandardScaler.ipynb",
                        "keywords": "code template, cluster, simple, dbscan, densitybased, spatial, clustering, applications, noise, clustering,including, d, d, cluster, visualization, clusters, standardscaler, rescaling technique",
                        "display_url": "https://siberian.dev/clustering/dbscan/dbscan-with-standardscaler"
                    }
                ]
            },
            {
                "name": "KMeans",
                "models": [
                    {
                        "name": "KMeans.ipynb",
                        "title": "KMeans Clustering",
                        "description": "This Code template is for the Cluster analysis using a simple KMeans Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/KMeans/KMeans.ipynb",
                        "keywords": "code template, cluster, simple, kmeans, clustering,includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/kmeans/kmeans-clustering"
                    },
                    {
                        "name": "KMeans_MaxAbsScaler.ipynb",
                        "title": "KMeans Clustering with MaxAbsScaler",
                        "description": "This Code template is for the Cluster analysis using a KMeans Clustering algorithm along with the MaxAbsScaler feature rescaling technique. The template also includes visualization of 2D and 3D Clusters along with seaborn pairplot.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/KMeans/KMeans_MaxAbsScaler.ipynb",
                        "keywords": "code template, cluster, kmeans, clustering,maxabsscaler, rescaling technique, includes, visualization, d, d, clusters, seaborn, pairplot",
                        "display_url": "https://siberian.dev/clustering/kmeans/kmeans-clustering-with-maxabsscaler"
                    },
                    {
                        "name": "KMeans_MinMaxScaler.ipynb",
                        "title": "KMeans Clustering with MinMaxScaler",
                        "description": "This Code template is for the Cluster analysis using a KMeans Clustering algorithm along with the MinMaxScaler feature rescaling technique. The template also includes visualization of 2D and 3D Clusters along with seaborn pairplot.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/KMeans/KMeans_MinMaxScaler.ipynb",
                        "keywords": "code template, cluster, kmeans, clustering,minmaxscaler, rescaling technique, includes, visualization, d, d, clusters, seaborn, pairplot",
                        "display_url": "https://siberian.dev/clustering/kmeans/kmeans-clustering-with-minmaxscaler"
                    },
                    {
                        "name": "KMeans_Normalize.ipynb",
                        "title": "KMeans Clustering with Normalizer",
                        "description": "This Code template is for the Cluster analysis using a KMeans Clustering algorithm along with the Normalizer feature rescaling technique. The template also includes visualization of 2D and 3D Clusters along with seaborn pairplot.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/KMeans/KMeans_Normalize.ipynb",
                        "keywords": "code template, cluster, kmeans, clustering,normalizer, rescaling technique, includes, visualization, d, d, clusters, seaborn, pairplot",
                        "display_url": "https://siberian.dev/clustering/kmeans/kmeans-clustering-with-normalizer"
                    },
                    {
                        "name": "KMeans_RobustScaler.ipynb",
                        "title": "KMeans Clustering with RobustScaler",
                        "description": "This Code template is for the Cluster analysis using a KMeans Clustering algorithm along with the RobustScaler feature rescaling technique. The template also includes visualization of 2D and 3D Clusters along with seaborn pairplot.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/KMeans/KMeans_RobustScaler.ipynb",
                        "keywords": "code template, cluster, kmeans, clustering,robustscaler, rescaling technique, includes, visualization, d, d, clusters, seaborn, pairplot",
                        "display_url": "https://siberian.dev/clustering/kmeans/kmeans-clustering-with-robustscaler"
                    },
                    {
                        "name": "KMeans_Scale.ipynb",
                        "title": "KMeans Clustering with Scale",
                        "description": "This Code template is for the Cluster analysis using a KMeans Clustering algorithm along with the Normal Scaling feature rescaling technique. The template also includes visualization of 2D and 3D Clusters along with seaborn pairplot.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/KMeans/KMeans_Scale.ipynb",
                        "keywords": "code template, cluster, kmeans, clustering,normal, scaling, rescaling technique, includes, visualization, d, d, clusters, seaborn, pairplot",
                        "display_url": "https://siberian.dev/clustering/kmeans/kmeans-clustering-with-scale"
                    },
                    {
                        "name": "KMeans_StandardScaler.ipynb",
                        "title": "KMeans Clustering with StandardScaler",
                        "description": "This Code template is for the Cluster analysis using a KMeans Clustering algorithm along with the StandardScaler feature rescaling technique. The template also includes visualization of 2D and 3D Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/KMeans/KMeans_StandardScaler.ipynb",
                        "keywords": "code template, cluster, kmeans, clustering,standardscaler, rescaling technique, includes, visualization, d, d, clusters",
                        "display_url": "https://siberian.dev/clustering/kmeans/kmeans-clustering-with-standardscaler"
                    }
                ]
            },
            {
                "name": "MeanShift",
                "models": [
                    {
                        "name": "MeanShift.ipynb",
                        "title": "Mean Shift",
                        "description": "This Code template is for the Cluster analysis using a simple Mean Shift(Centroid-Based Clustering using a flat kernel) Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MeanShift/MeanShift.ipynb",
                        "keywords": "code template, cluster, simple, mean, shiftcentroidbased, clustering,flat, kernel, clustering,includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/meanshift/mean-shift"
                    },
                    {
                        "name": "MeanShift_MaxAbsScaler.ipynb",
                        "title": "Mean Shift using MaxAbsScaler",
                        "description": "This Code template is for the Cluster analysis using a simple Mean Shift(Centroid-Based Clustering using a flat kernel) Clustering algorithm along with feature scaling using MaxAbsScaler and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MeanShift/MeanShift_MaxAbsScaler.ipynb",
                        "keywords": "code template, cluster, simple, mean, shiftcentroidbased, clustering,flat, kernel, clustering,scaling,maxabsscaler, includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/meanshift/mean-shift-using-maxabsscaler"
                    },
                    {
                        "name": "MeanShift_MinMaxScaler.ipynb",
                        "title": "MeanShift with MinMaxScaler",
                        "description": "This Code template is for the Cluster analysis using a simple Mean Shift(Centroid-Based Clustering using a flat kernel) Clustering algorithm along with feature scaling using MinMaxScaler and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MeanShift/MeanShift_MinMaxScaler.ipynb",
                        "keywords": "code template, cluster, simple, mean, shiftcentroidbased, clustering,flat, kernel, clustering,scaling,minmaxscaler, includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/meanshift/meanshift-with-minmaxscaler"
                    },
                    {
                        "name": "MeanShift_Normalize.ipynb",
                        "title": "MeanShift with Normalize",
                        "description": "This Code template is for the Cluster analysis using a simple Mean Shift(Centroid-Based Clustering using a flat kernel) Clustering algorithm along with feature scaling using Normalize and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MeanShift/MeanShift_Normalize.ipynb",
                        "keywords": "code template, cluster, simple, mean, shiftcentroidbased, clustering,flat, kernel, clustering,scaling,normalize, includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/meanshift/meanshift-with-normalize"
                    },
                    {
                        "name": "MeanShift_RobustScaler.ipynb",
                        "title": "Mean Shift using Robust Scaler",
                        "description": "This Code template is for the Cluster analysis using a simple Mean Shift(Centroid-Based Clustering using a flat kernel) Clustering algorithm along with feature scaling using Robust Scaler and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MeanShift/MeanShift_RobustScaler.ipynb",
                        "keywords": "code template, cluster, simple, mean, shiftcentroidbased, clustering,flat, kernel, clustering,scaling,robust, scaler, includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/meanshift/mean-shift-using-robust-scaler"
                    },
                    {
                        "name": "MeanShift_Scale.ipynb",
                        "title": "Mean Shift clustering with Scale",
                        "description": "This Code template is for the Cluster analysis using a simple Mean Shift(Centroid-Based Clustering using a flat kernel) Clustering algorithm along with feature scaling using Scale and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MeanShift/MeanShift_Scale.ipynb",
                        "keywords": "code template, cluster, simple, mean, shiftcentroidbased, clustering,flat, kernel, clustering,scaling,scale, includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/meanshift/mean-shift-clustering-with-scale"
                    },
                    {
                        "name": "MeanShift_StandardScaler.ipynb",
                        "title": "Mean Shift using Standard Scaler",
                        "description": "This Code template is for the Cluster analysis using a simple Mean Shift(Centroid-Based Clustering using a flat kernel) Clustering algorithm along with feature scaling using Standard Scaler and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MeanShift/MeanShift_StandardScaler.ipynb",
                        "keywords": "code template, cluster, simple, mean, shiftcentroidbased, clustering,flat, kernel, clustering,scaling,standard, scaler, includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/meanshift/mean-shift-using-standard-scaler"
                    }
                ]
            },
            {
                "name": "MiniBatchKMeans",
                "models": [
                    {
                        "name": "MiniBatchKMeans.ipynb",
                        "title": "Simple MiniBatchKMeans",
                        "description": "This Code template is for clustering analysis using the Simple MiniBatchKMeans.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MiniBatchKMeans/MiniBatchKMeans.ipynb",
                        "keywords": "code template, clustering, simple, minibatchkmeans",
                        "display_url": "https://siberian.dev/clustering/minibatchkmeans/simple-minibatchkmeans"
                    },
                    {
                        "name": "MiniBatchKMeans_MinMaxScaler.ipynb",
                        "title": "MiniBatchKMeans with MinMaxScaler",
                        "description": "This Code template is for clustering analysis using the Simple MiniBatchKMeans where the scaling method used is MinMaxScaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MiniBatchKMeans/MiniBatchKMeans_MinMaxScaler.ipynb",
                        "keywords": "code template, clustering, simple, minibatchkmeans, scaling, method, minmaxscaler",
                        "display_url": "https://siberian.dev/clustering/minibatchkmeans/minibatchkmeans-with-minmaxscaler"
                    },
                    {
                        "name": "MiniBatchKMeans_RobustScaler.ipynb",
                        "title": "MiniBatchKMeans with RobustScaler",
                        "description": "This Code template is for clustering analysis using the Simple MiniBatchKMeans where the scaling method used is Robust Scaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MiniBatchKMeans/MiniBatchKMeans_RobustScaler.ipynb",
                        "keywords": "code template, clustering, simple, minibatchkmeans, scaling, method, robust, scaler",
                        "display_url": "https://siberian.dev/clustering/minibatchkmeans/minibatchkmeans-with-robustscaler"
                    },
                    {
                        "name": "MiniBatchKMeans_Scale.ipynb",
                        "title": "MiniBatchKMeans with Scale",
                        "description": "This Code template is for clustering analysis using the Simple MiniBatchKMeans along with feature scaling using Scale.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MiniBatchKMeans/MiniBatchKMeans_Scale.ipynb",
                        "keywords": "code template, clustering, simple, minibatchkmeans, scaling,scale",
                        "display_url": "https://siberian.dev/clustering/minibatchkmeans/minibatchkmeans-with-scale"
                    },
                    {
                        "name": "MiniBatchKMeans_StandardScaled.ipynb",
                        "title": "MiniBatchKMeans with StandardScaler",
                        "description": "This Code template is for clustering analysis using the Simple MiniBatchKMeans where the scaling method used is Standard Scaler.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/MiniBatchKMeans/MiniBatchKMeans_StandardScaled.ipynb",
                        "keywords": "code template, clustering, simple, minibatchkmeans, scaling, method, standard, scaler",
                        "display_url": "https://siberian.dev/clustering/minibatchkmeans/minibatchkmeans-with-standardscaler"
                    }
                ]
            },
            {
                "name": "OPTICS",
                "models": [
                    {
                        "name": "OPTICS.ipynb",
                        "title": "OPTICS",
                        "description": "This Code template is for the Cluster analysis using a simple OPTICS (Ordering Points To Identify Cluster Structure) Clustering algorithm.It draws inspiration from the DBSCAN clustering algorithm. The Code Template includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/OPTICS/OPTICS.ipynb",
                        "keywords": "code template, cluster, simple, optics, ordering, identify, cluster, structure, clustering, it, draws, inspiration, dbscan, clustering,code template, includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/optics/optics"
                    },
                    {
                        "name": "OPTICS_MaxAbsScaler.ipynb",
                        "title": "OPTICS with MaxAbsScaler",
                        "description": "This Code template is for the Cluster analysis using a simple OPTICS (Ordering Points To Identify Cluster Structure) Clustering algorithm and feature rescaling technique MaxAbsScaler.It draws inspiration from the DBSCAN clustering algorithm. The Code Template includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/OPTICS/OPTICS_MaxAbsScaler.ipynb",
                        "keywords": "code template, cluster, simple, optics, ordering, identify, cluster, structure, clustering,rescaling technique, maxabsscalerit, draws, inspiration, dbscan, clustering,code template, includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/optics/optics-with-maxabsscaler"
                    },
                    {
                        "name": "OPTICS_MinMaxScaler.ipynb",
                        "title": "OPTICS with MinMaxScaler",
                        "description": "This Code template is for the Cluster analysis using a simple OPTICS Clustering algorithm with the MinMaxScaler as a feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/OPTICS/OPTICS_MinMaxScaler.ipynb",
                        "keywords": "code template, cluster, simple, optics, clustering,minmaxscaler, rescaling technique",
                        "display_url": "https://siberian.dev/clustering/optics/optics-with-minmaxscaler"
                    },
                    {
                        "name": "OPTICS_Normalize.ipynb",
                        "title": "OPTICS with Normalizer",
                        "description": "This Code template is for the Cluster analysis using a simple OPTICS (Ordering Points To Identify Cluster Structure) Clustering algorithm and feature rescaling technique Normalizer.It draws inspiration from the DBSCAN clustering algorithm. The Code Template includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/OPTICS/OPTICS_Normalize.ipynb",
                        "keywords": "code template, cluster, simple, optics, ordering, identify, cluster, structure, clustering,rescaling technique, normalizerit, draws, inspiration, dbscan, clustering,code template, includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/optics/optics-with-normalizer"
                    },
                    {
                        "name": "OPTICS_RobustScaler.ipynb",
                        "title": "OPTICS with RobustScaler",
                        "description": "This Code template is for the Cluster analysis using a simple OPTICS Clustering algorithm with the RobustScaler as a feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/OPTICS/OPTICS_RobustScaler.ipynb",
                        "keywords": "code template, cluster, simple, optics, clustering,robustscaler, rescaling technique",
                        "display_url": "https://siberian.dev/clustering/optics/optics-with-robustscaler"
                    },
                    {
                        "name": "OPTICS_Scale.ipynb",
                        "title": "OPTICS with Scale",
                        "description": "This Code template is for the Cluster analysis using a simple OPTICS (Ordering Points To Identify Cluster Structure) Clustering algorithm and feature rescaling technique Scale.It draws inspiration from the DBSCAN clustering algorithm. The Code Template includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/OPTICS/OPTICS_Scale.ipynb",
                        "keywords": "code template, cluster, simple, optics, ordering, identify, cluster, structure, clustering,rescaling technique, scaleit, draws, inspiration, dbscan, clustering,code template, includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/optics/optics-with-scale"
                    },
                    {
                        "name": "OPTICS_StandardScaler.ipynb",
                        "title": "OPTICS with StandardScaler",
                        "description": "This Code template is for the Cluster analysis using a simple OPTICS Clustering algorithm with the StandardScaler as a feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/OPTICS/OPTICS_StandardScaler.ipynb",
                        "keywords": "code template, cluster, simple, optics, clustering,standardscaler, rescaling technique",
                        "display_url": "https://siberian.dev/clustering/optics/optics-with-standardscaler"
                    }
                ]
            },
            {
                "name": "Spectral_Clustering",
                "models": [
                    {
                        "name": "SpectralClustering.ipynb",
                        "title": "Spectral Clustering",
                        "description": "This Code template is for the Cluster analysis using a Spectral Clustering algorithm and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/Spectral_Clustering/SpectralClustering.ipynb",
                        "keywords": "code template, cluster, spectral, clustering,includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/spectral-clustering/spectral-clustering"
                    },
                    {
                        "name": "SpectralClustering_RobustScaler.ipynb",
                        "title": "Spectral Clustering with Robust Scaler",
                        "description": "This Code template is for the Cluster analysis using a Spectral Clustering algorithm with the RobustScaler feature rescaling technique and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/Spectral_Clustering/SpectralClustering_RobustScaler.ipynb",
                        "keywords": "code template, cluster, spectral, clustering,robustscaler, rescaling technique, includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/spectral-clustering/spectral-clustering-with-robust-scaler"
                    },
                    {
                        "name": "SpectralClustering_StandardScaler.ipynb",
                        "title": "Spectral Clustering with Standard Scaler",
                        "description": "This Code template is for the Cluster analysis using a Spectral Clustering algorithm with the StandardScaler feature rescaling technique and includes 2D and 3D cluster visualization of the Clusters.",
                        "URL": "https://cdn.siberian.dev/code/Clustering/Spectral_Clustering/SpectralClustering_StandardScaler.ipynb",
                        "keywords": "code template, cluster, spectral, clustering,standardscaler, rescaling technique, includes, d, d, cluster, visualization, clusters",
                        "display_url": "https://siberian.dev/clustering/spectral-clustering/spectral-clustering-with-standard-scaler"
                    }
                ]
            }
        ]
    },
    {
        "name": "Dimensionality_Reduction",
        "image": "https://cdn.siberian.dev/code-gen/dr_blue.png",
        "description": "Reduce input variables in a dataset by finding key contributors to output",
        "models": [
            {
                "name": "Isomaps",
                "models": [
                    {
                        "name": "Isomap.ipynb",
                        "title": "Simple Isomap",
                        "description": "This code template is for simple Isomap, which is used as a dimensionality reduction technique. Isomap is a nonlinear dimensionality reduction method.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/Isomaps/Isomap.ipynb",
                        "keywords": "code template, simple, isomap,dimensionality, reduction, techniqueisomap, nonlinear, dimensionality, reduction, method",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-standardscaler-&-polynomial-features"
                    },
                    {
                        "name": "Isomap_MinMaxScaler.ipynb",
                        "title": "Isomap with MinMaxScaler",
                        "description": "This code template is for the Isomap algorithm used for the dimensionality reduction technique along with the rescaling technique MinMaxScaler.  It is one of several widely used low-dimensional embedding methods. Isomap is used for computing a quasi-isometric, low-dimensional embedding of a set of high-dimensional data points.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/Isomaps/Isomap_MinMaxScaler.ipynb",
                        "keywords": "code template, isomap,dimensionality, reduction technique, rescaling technique, minmaxscaler, isomap, nonlinear,reduction method",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-standardscaler-&-power-transformer"
                    },
                    {
                        "name": "Isomap_RobustScaler.ipynb",
                        "title": "Isomap with RobustScaler",
                        "description": "This code template is for Isomap, used as a dimensionality reduction algorithm along with the rescaling technique RobustScaler. The algorithm provides a simple method for estimating the intrinsic geometry of a data manifold based on a rough estimate of each data point\u2019s neighbors on the manifold.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/Isomaps/Isomap_RobustScaler.ipynb",
                        "keywords": "code template, isomap,dimensionality, reduction technique, rescaling technique, robustscaler, isomap, nonlinear, dimensionality, reduction method",
                        "display_url": "https://siberian.dev/classification/linear-models/perceptron-with-standardscaler-&-quantile-transformer"
                    },
                    {
                        "name": "Isomap_StandardScaler.ipynb",
                        "title": "Isomap with StandardScaler",
                        "description": "This code template is for Isomap, which is used for the dimensionality reduction process. Isomap is one representative of isometric mapping methods and extends metric multidimensional scaling (MDS) by incorporating the geodesic distances imposed by a weighted graph. The template also utilizes StandardScaler for data rescaling.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/Isomaps/Isomap_StandardScaler.ipynb",
                        "keywords": "code template, isomap,dimensionality, reduction technique, rescaling technique, standardscaler, isomap, nonlinear, dimensionality, reduction method",
                        "display_url": "https://siberian.dev/classification/linear-models/simple-ridgeclassifier"
                    }
                ]
            },
            {
                "name": "LocallyLinearEmbedding",
                "models": [
                    {
                        "name": "LocallyLinearEmbedding.ipynb",
                        "title": "LocallyLinearEmbedding",
                        "description": "This code template is for LocallyLinearEmbedding in python for the dimensionality reduction technique. This can be thought of as a series of local Principal Component Analyses that are then compared spatially to find the best non-linear embedding.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/LocallyLinearEmbedding/LocallyLinearEmbedding.ipynb",
                        "keywords": "code template, locally linear embedding, python, dimensionality, reduction technique, series, local, principal, component, analyses, compared, spatially, nonlinear, embedding",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-maxabsscaler"
                    },
                    {
                        "name": "LocallyLinearEmbedding_MinMaxScaler.ipynb",
                        "title": "LocallyLinearEmbedding with MinMaxScaler",
                        "description": "This code template is for LocallyLinearEmbedding in python for the dimensionality reduction technique. The LLE algorithm is an unsupervised method for dimensionality reduction. It tries to reduce these n-Dimensions while trying to preserve the geometric features of the original non-linear feature structure. The MinMaxScaler is used for the feature rescaling technique to normalize data.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/LocallyLinearEmbedding/LocallyLinearEmbedding_MinMaxScaler.ipynb",
                        "keywords": "code template, locally linear embedding, python, reduction technique,spatially nonlinear, embedding, minmaxscaler, rescaling technique",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-maxabsscaler-&-polynomial-features"
                    },
                    {
                        "name": "LocallyLinearEmbedding_Normalize.ipynb",
                        "title": "LocallyLinearEmbedding with Normalize",
                        "description": "This code template is for LocallyLinearEmbedding in python for the dimensionality reduction technique. LLE first finds the k-nearest neighbors of the points. Then, it approximates each data vector as a weighted linear combination of its k-nearest neighbors. Finally, it computes the weights that best reconstruct the vectors from their neighbors and then produces the low-dimensional vectors best reconstructed by these weights. Normalize is utilized for the data rescaling process.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/LocallyLinearEmbedding/LocallyLinearEmbedding_Normalize.ipynb",
                        "keywords": "code template, locally linear embedding, python, dimensionality, reduction technique,spatially nonlinear, embedding, normalize, rescaling technique,LLE",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-maxabsscaler-&-quantiletransformer"
                    },
                    {
                        "name": "LocallyLinearEmbedding_RobustScaler.ipynb",
                        "title": "LocallyLinearEmbedding with RobustScaler",
                        "description": "This code template is for LocallyLinearEmbedding in python for the dimensionality reduction technique. LLE tends to accumulate sparse matrices. It is more efficient than the other algorithms in space and time complexity. This template also utilizes RobustScaler for data normalization to boost the speed of the model computational process.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/LocallyLinearEmbedding/LocallyLinearEmbedding_RobustScaler.ipynb",
                        "keywords": "code template, locally linear embedding, python, dimensionality, reduction technique,spatially nonlinear, embedding,robustscaler, rescaling technique, LLE",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-minmaxscaler-&-polynomialfeatures"
                    },
                    {
                        "name": "LocallyLinearEmbedding_StandardScaler.ipynb",
                        "title": "LocallyLinearEmbedding with StandardScaler",
                        "description": "This code template is for LocallyLinearEmbedding in python for the dimensionality reduction technique. The code also employs the StadardScaler as a data-rescaling technique from the sci-kit preprocessing library.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/LocallyLinearEmbedding/LocallyLinearEmbedding_StandardScaler.ipynb",
                        "keywords": "code template, locally linear embedding, python, dimensionality, reduction technique,spatially nonlinear, embedding, stadardscaler, rescaling technique",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-minmaxscaler-&-power-transformer"
                    }
                ]
            },
            {
                "name": "PCA",
                "models": [
                    {
                        "name": "IncrementalPCA.ipynb",
                        "title": "Incremental Principal component analysis",
                        "description": "This code template is for Incremental Principal Component Analysis(IncrementalPCA) in python for dimensionality reduction technique. It is used to decompose a multivariate dataset into a set of successive orthogonal components that explain a maximum amount of the variance, keeping only the most significant singular vectors to project the data to a lower dimensional space.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/IncrementalPCA.ipynb",
                        "keywords": "code template, incremental, principal, component, analysisincrementalpca, python, dimensionality, reduction technique, decompose, multivariate, dataset, set, successive, orthogonal components, explain, maximum, amount, variance, keeping, significant, singular, vectors, project, data, lower, dimensional, space",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-minmaxscaler-&-quantile-transformer"
                    },
                    {
                        "name": "IncrementalPCA_MaxAbsScaler.ipynb",
                        "title": "Incremental Principal component analysis with MaxAbsScaler",
                        "description": "This code template is for Incremental Principal Component Analysis(IncrementalPCA) along with feature scaling MaxAbsScaler in python for dimensionality reduction technique. Incremental principal component analysis (IPCA) is typically used as a replacement for principal component analysis (PCA) when the dataset is too large to fit in memory.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/IncrementalPCA_MaxAbsScaler.ipynb",
                        "keywords": "code template,analysis increment, alpca, scaling maxabsscaler, python,reduction technique,multivariate dataset,orthogonal components,",
                        "display_url": "https://siberian.dev/classification/linear-models/ridge-classifier-with-normalization"
                    },
                    {
                        "name": "IncrementalPCA_MinMaxScaler.ipynb",
                        "title": "Incremental Principal component analysis with MinMaxScaler",
                        "description": "This code template is for Incremental Principal Component Analysis(IncrementalPCA) along with feature rescaling MinMaxScaler in python for dimensionality reduction technique. IPCA builds a low-rank approximation for the input data using an amount of memory that is independent of the number of input data samples. It is still dependent on the input data features, but changing the batch size allows for control of memory usage.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/IncrementalPCA_MinMaxScaler.ipynb",
                        "keywords": "code template,analysis increment,alpca, rescaling, minmaxscaler, python,reduction technique,orthogonal component",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-normalize-&-polynomial-features"
                    },
                    {
                        "name": "IncrementalPCA_Normalize.ipynb",
                        "title": "Incremental Principal Component Analysis with Normalizer",
                        "description": "This code template is for Incremental Principal Component Analysis(IncrementalPCA) along with feature rescaling Normalizer in python for dimensionality reduction technique. It is used to decompose a multivariate dataset into a set of successive orthogonal components that explain a maximum amount of the variance, keeping only the most significant singular vectors to project the data to a lower dimensional space. Depending on the size of the input data, this algorithm can be much more memory efficient than a PCA and allows sparse input.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/IncrementalPCA_Normalize.ipynb",
                        "keywords": "code template,analysis increment, alpca, rescaling, normalizer, python, reduction technique,orthogonal components,singular vectors,",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-normalize-and-powertransformer"
                    },
                    {
                        "name": "IncrementalPCA_RobustScaler.ipynb",
                        "title": "Incremental Principal component analysis with RobustScaler",
                        "description": "This code template is for Dimensionality Reduction using Incremental Principal Component Analysis(IncrementalPCA) along data rescaling method RobustScaler in python. IPCA is used to decompose a multivariate dataset into a set of successive orthogonal components that explain a maximum amount of the variance, keeping only the most significant singular vectors to project the data to a lower dimensional space.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/IncrementalPCA_RobustScaler.ipynb",
                        "keywords": "code template,analysis increment, alpca, scaling robustscaler, python,reduction technique,orthogonal components,singular vectors,",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-normalize-&-quantile-transformer"
                    },
                    {
                        "name": "IncrementalPCA_Scale.ipynb",
                        "title": "Incremental Principal component analysis with Scale",
                        "description": "This code template is for Incremental Principal Component Analysis(IncrementalPCA) along with feature rescaling Scale in python for dimensionality reduction technique. It is used to decompose a multivariate dataset into a set of successive orthogonal components that explain a maximum amount of the variance, keeping only the most significant singular vectors to project the data to a lower dimensional space.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/IncrementalPCA_Scale.ipynb",
                        "keywords": "code template, incremental, principal, component, analysisincrementalpca, rescaling, scale, python, dimensionality, reduction technique, decompose, multivariate, dataset, set, successive, orthogonal components, explain, maximum, amount, variance, keeping, significant, singular, vectors, project, data, lower, dimensional, space",
                        "display_url": "https://siberian.dev/classification/linear-models/simple-ridgeclassifier-with-powertransformer"
                    },
                    {
                        "name": "IncrementalPCA_StandardScaler.ipynb",
                        "title": "Incremental Principal component analysis with StandardScaler",
                        "description": "The Code Template illustrates Dimensionality Reduction using Incremental Principal Component Analysis (IPCA). The pipeline includes StandScaler for data normalization for space and time complexity.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/IncrementalPCA_StandardScaler.ipynb",
                        "keywords": "code template,analysis increment, alpca, scaling standardscaler, python, dimensionality, reduction technique,orthogonal components,singular vectors,",
                        "display_url": "https://siberian.dev/classification/linear-models/simple-ridgeclassifier-with-quantiletransformer"
                    },
                    {
                        "name": "KernelPCA.ipynb",
                        "title": "Simple KernelPCA",
                        "description": "This code template of simple kernel principal component analysis(Kernel PCA) in python is a non-linear technique for dimensionality reduction through the use of Kernel.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/KernelPCA.ipynb",
                        "keywords": "code template, simple, kpcakernel, pca, python, nonlinear technique, dimensionality, reduction, kernel,kernel principal component analysis",
                        "display_url": "https://siberian.dev/classification/linear-models/ridge-classifier-with-robust-scaler-and-pipeline"
                    },
                    {
                        "name": "KernelPCA_MaxAbsScaler.ipynb",
                        "title": "KernelPCA with MaxAbsScaler",
                        "description": "This code template of KPCA(Kernel PCA) in python is a non-linear technique for dimensionality reduction through use of kernel. Kernel PCA is an extension of principal component analysis (PCA) using techniques of kernel methods. Using kernel, the original linear operations of PCA is performed in a reproducing kernel Hilbert space.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/KernelPCA_MaxAbsScaler.ipynb",
                        "keywords": "code template, kpcakernel, pca, python, nonlinear technique, reduction kernel, maxabsscaler, rescaling technique, kernel principal component analysis",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-robustscaler-&-polynomial-features"
                    },
                    {
                        "name": "KernelPCA_MinMaxScaler.ipynb",
                        "title": "KernelPCA with MinMaxScaler",
                        "description": "This code template of KPCA(Kernel PCA) in python is a non-linear technique for dimensionality reduction through the use of Kernel along with the MinMaxScaler as a feature rescaling technique. Kernel PCA has been demonstrated to be useful for novelty detection and image de-noising.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/KernelPCA_MinMaxScaler.ipynb",
                        "keywords": "code template, kpcakernel, pca, python, nonlinear technique, kernel, minmaxscaler, rescaling technique, kernel principal component analysis",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-robustscaler-&-power-transformer"
                    },
                    {
                        "name": "KernelPCA_RobustScaler.ipynb",
                        "title": "KernelPCA with RobustScaler",
                        "description": "This code template of KPCA(Kernel PCA) in python is a non-linear technique for dimensionality reduction through the use of Kernel along with the RobustScaler as a feature rescaling technique. The basic idea behind it is to project the linearly inseparable data onto a higher dimensional space where it becomes linearly separable.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/KernelPCA_RobustScaler.ipynb",
                        "keywords": "code template, kpcakernel, pca, python, nonlinear technique,kernel, robustscaler, rescaling technique, kernel principal component analysis",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-robustscaler-&-quantiletransformer"
                    },
                    {
                        "name": "KernelPCA_Scale.ipynb",
                        "title": "KernelPCA with Scale",
                        "description": "This code template of KPCA(Kernel PCA) in python is a non-linear technique for dimensionality reduction through the use of Kernel along with the Scale as a feature rescaling technique. Sometimes the structure of the data is nonlinear, and the principle components will not give us the optimal dimensionality reduction, so we use non-linear methods like KPCA.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/KernelPCA_Scale.ipynb",
                        "keywords": "code template, kpcakernel, pca, python, nonlinear technique,kernel, scale rescaling technique, kernel principal component analysis",
                        "display_url": "https://siberian.dev/classification/linear-models/ridge-classifier-with-scale"
                    },
                    {
                        "name": "KernelPCA_StandardScaler.ipynb",
                        "title": "KernelPCA with StandardScaler",
                        "description": "This code template of KPCA(Kernel PCA) in python is a non-linear technique for dimensionality reduction through the use of Kernel along with the StandardScaler as a feature rescaling technique. The idea of KPCA relies on the intuition that many datasets, which are not linearly separable in their space, can be made linearly separable by projecting them into a higher dimensional space.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/KernelPCA_StandardScaler.ipynb",
                        "keywords": "code template, kpcakernel, pca, python, nonlinear technique,kernel, standardscaler, rescaling technique, kernel principal component analysis",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-scale-and-polynomialfeatures"
                    },
                    {
                        "name": "MiniBatchSparsePCA.ipynb",
                        "title": "Simple MiniBatchSparsePCA",
                        "description": "This code template is for Mini-batch Sparse Principal Components Analysis in python for dimensionality reduction technique. It finds a set of sparse components that can optimally reconstruct the data. The amount of sparseness is controllable by the coefficient of the L1 penalty, given by the parameter alpha.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/MiniBatchSparsePCA.ipynb",
                        "keywords": "code template, mini batch sparse principal components,python, dimensionality, reduction technique, set, sparse, components, optimally, reconstruct, data, amount, sparseness, controllable, coefficient, l, penalty, parameter, alpha",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-scale-and-powertransformer"
                    },
                    {
                        "name": "MiniBatchSparsePCA_MaxAbsScaler.ipynb",
                        "title": "MiniBatchSparsePCA with MaxAbsScaler",
                        "description": "This code template is for Mini Batch Sparse Principal Component Analysis along with feature scaling MaxAbsScaler in python for dimensionality reduction technique.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/MiniBatchSparsePCA_MaxAbsScaler.ipynb",
                        "keywords": "code template, mini, batch, sparce, principal, component,scaling maxabsscaler, python, dimensionality, reduction technique",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-scale-&-quantile-transformer"
                    },
                    {
                        "name": "MiniBatchSparsePCA_MinMaxScaler.ipynb",
                        "title": "MiniBatchSparsePCA with MinMaxScaler",
                        "description": "This code template is for Mini-batch Sparse Principal Components Analysis in python for dimensionality reduction technique. Mini-batch sparse PCA  is a variant of SparsePCA that is faster but less accurate. The increased speed is reached by iterating over small chunks of the set of features, for a given number of iterations.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/MiniBatchSparsePCA_MinMaxScaler.ipynb",
                        "keywords": "code template, mini batch sparse principal components,reduction technique,sparse components, sparseness,alpha data, scaled,minmaxscaler",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-standardscaler"
                    },
                    {
                        "name": "MiniBatchSparsePCA_Normalizer.ipynb",
                        "title": "MiniBatchSparsePCA with  Normalizer",
                        "description": "This code template is for Mini-batch Sparse Principal Components Analysis in python for dimensionality reduction technique. It yields a more parsimonious, interpretable representation, clearly emphasizing which of the original features contribute to the differences between samples. The features are rescaled using sci-kit learns Normalizer.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/MiniBatchSparsePCA_Normalizer.ipynb",
                        "keywords": "code template, mini batch sparse principal components,python, dimensionality, reduction technique, sparse components,data scaled, normalizer",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-standardscaler-&-polynomial-features"
                    },
                    {
                        "name": "MiniBatchSparsePCA_RobustScaler.ipynb",
                        "title": "MiniBatchSparsePCA with RobustScaler",
                        "description": "This code template is for Mini-batch Sparse Principal Components Analysis in python for dimensionality reduction technique. It finds a set of sparse components that can optimally reconstruct the data. In the template, RobustScaler is utilized for data normalization.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/MiniBatchSparsePCA_RobustScaler.ipynb",
                        "keywords": "code template, mini batch sparse principal components,reduction technique,sparse components,reconstruct, sparseness,alpha data, scaled robustscaler",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-standardscaler-&-power-transformer"
                    },
                    {
                        "name": "MiniBatchSparsePCA_Scale.ipynb",
                        "title": "MiniBatchSparsePCA with Scale",
                        "description": "This code template is for Mini-batch Sparse Principal Components Analysis in python for dimensionality reduction technique along with data rescaling using sci-kit learns scale function from preprocessing class. The algorithm finds a set of sparse components that can optimally reconstruct the data.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/MiniBatchSparsePCA_Scale.ipynb",
                        "keywords": "code template, mini batch sparse principal components,reduction technique,sparse components,data scaled,",
                        "display_url": "https://siberian.dev/classification/linear-models/ridgeclassifier-with-standardscaler-&-quantile-transformer"
                    },
                    {
                        "name": "MiniBatchSparsePCA_StandardScaler.ipynb",
                        "title": "MiniBatchSparsePCA with  StandardScaler",
                        "description": "This code template demonstrates the Dimensionality Reduction problem using the MiniBatchSparsePCA algorithm, which is a variant of SparsePCA. The input data is normalized using StandardScaler from sci-kit learn preprocessing class.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/MiniBatchSparsePCA_StandardScaler.ipynb",
                        "keywords": "code template, mini batch sparse principal components,reduction technique,sparse components, reconstruct data,sparseness,alpha data, scaled, standardscaler",
                        "display_url": "https://siberian.dev/classification/linear-models/stochastic-gradient-descent-classifier"
                    },
                    {
                        "name": "PCA.ipynb",
                        "title": "Principal component analysis",
                        "description": "This code template is for simple Principal Component Analysis(PCA) in python for dimensionality reduction technique. It is used to decompose a multivariate dataset into a set of successive orthogonal components that explain a maximum amount of variance.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/PCA.ipynb",
                        "keywords": "code template, simple principal component, analysis pca, python, dimensionality, reduction technique, decompose, multivariate, dataset, set, successive, orthogonal components, explain, maximum, amount, variance",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-maxabsscaler"
                    },
                    {
                        "name": "PCA_MaxAbsScaler.ipynb",
                        "title": "PCA with MaxAbsScaler",
                        "description": "This code template is for Principal Component Analysis(PCA) along with feature scaling via MaxAbsScaler in python for dimensionality reduction technique. It is a common technique for analyzing large datasets containing a high number of features per observation. It increases the interpretability of data while preserving the maximum amount of information and enabling the visualization of multidimensional data.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/PCA_MaxAbsScaler.ipynb",
                        "keywords": "code template, simple principal component, analysis pca, scaling, maxabsscaler, python,reduction technique,successive orthogonal,",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-maxabsscaler-&-polynomialfeatures"
                    },
                    {
                        "name": "PCA_MinMaxScaler.ipynb",
                        "title": "Principal component analysis with MinMaxScaler",
                        "description": "This code template is for simple Principal Component Analysis(PCA) along with feature scaling MinMaxScaler in python for dimensionality reduction technique. Formally, PCA is a statistical technique for reducing the dimensionality of a dataset. This is accomplished by linearly transforming the data into a new coordinate system where (most of) the variation in the data can be described with fewer dimensions than the initial data.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/PCA_MinMaxScaler.ipynb",
                        "keywords": "code template, simple principal component, analysis pca, scaling minmaxscaler, reduction technique, successive, orthogonal components,",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-maxabsscaler-&-power-transformer"
                    },
                    {
                        "name": "PCA_Normalize.ipynb",
                        "title": "Principal component analysis with Normalize",
                        "description": "This code template is for simple Principal Component Analysis(PCA) along feature scaling Normalize in python for dimensionality reduction technique. PCA is used in exploratory data analysis and for making predictive models.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/PCA_Normalize.ipynb",
                        "keywords": "code template, simple principal component, analysis pca, scaling, normalize, python,reduction technique,orthogonal components,",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-maxabsscaler-&-quantile-transformer"
                    },
                    {
                        "name": "PCA_RobustScaler.ipynb",
                        "title": "Principal component analysis with RobustScaler",
                        "description": "This code template is for simple Principal Component Analysis(PCA) along with feature scaling RobustScaler in python for dimensionality reduction technique. It is commonly used for dimensionality reduction by projecting each data point onto only the first few principal components to obtain lower-dimensional data while preserving as much of the data's variation as possible.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/PCA_RobustScaler.ipynb",
                        "keywords": "code template, simple principal component, analysis pca, scaling robustscaler,reduction technique,orthogonal components,",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-minmaxscaler"
                    },
                    {
                        "name": "PCA_Scale.ipynb",
                        "title": "Principal component analysis with Scaler",
                        "description": "This code template is for simple Principal Component Analysis(PCA) along feature scaling via Scale in python for dimensionality reduction technique.   PCA is the simplest of the true eigenvector-based multivariate analyses and is closely related to factor analysis.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/PCA_Scale.ipynb",
                        "keywords": "code template, simple principal component, analysis pca, scaling,reduction technique,multivariate dataset,successive orthogonal,",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-minmaxscaler-&-polynomialfeatures"
                    },
                    {
                        "name": "PCA_StandardScaler.ipynb",
                        "title": "Principal component analysis with StandardScaler",
                        "description": "This code template is for simple Principal Component Analysis(PCA) along with feature scaling StandardScaler in python for dimensionality reduction technique. PCA rapidly transforms large amounts of data into smaller, easier-to-digest variables that can be more rapidly and readily analyzed.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/PCA_StandardScaler.ipynb",
                        "keywords": "code template, simple principal component, analysis pca, scaling standardscaler,reduction technique,set successive, orthogonal components,",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-minmaxscaler-&-powertransformer"
                    },
                    {
                        "name": "SparsePCA.ipynb",
                        "title": "Sparse PCA",
                        "description": "This code template is for Sparse Principal Component Analysis(SparsePCA) in python for dimensionality reduction technique. It is used to decompose a multivariate dataset into a set of successive orthogonal components that explain a maximum amount of the variance, keeping only the most significant singular vectors to project the data to a lower dimensional space.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/SparsePCA.ipynb",
                        "keywords": "code template, sparse principal component, analysis sparse pca, python, dimensionality, reduction, techniqueit, decompose, multivariate, dataset, set, successive, orthogonal components, explain, maximum, amount, variance, keeping, significant, singular, vectors, project, data, lower, dimensional, space",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-minmaxscaler-&-quantiletransformer"
                    },
                    {
                        "name": "SparsePCA_MaxAbsScaler.ipynb",
                        "title": "Sparse PCA with MaxAbsScaler",
                        "description": "This code template is for Sparse Principal Component Analysis(SparsePCA) along with MaxAbsScaler in python for dimensionality reduction technique and Data Rescaling. Sparse principal component analysis (sparse PCA) is a specialized technique used in statistical analysis and, in particular, in the analysis of multivariate data sets.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/SparsePCA_MaxAbsScaler.ipynb",
                        "keywords": "code template, sparse principal component, analysis sparse pca, maxabsscaler, python,reduction technique,data rescaling, decompose, multivariate dataset, set successive, orthogonal components, singular vectors,",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-normalize"
                    },
                    {
                        "name": "SparsePCA_MinMaxScaler.ipynb",
                        "title": "SparsePCA with MinMaxScaler",
                        "description": "This code template is for Sparse Principal Component Analysis(SparsePCA) along with MinMax Scaler in python for dimensionality reduction technique and Data Rescaling. It extends the classic method of principal component analysis (PCA) for the reduction of dimensionality of data by introducing sparsity structures to the input variables.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/SparsePCA_MinMaxScaler.ipynb",
                        "keywords": "code template, sparse principal component, analysis sparse pca, minmax, scaler, python,reduction technique,data rescaling,multivariate dataset, set successive, orthogonal components, ",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-normalize-and-polynomialfeatures"
                    },
                    {
                        "name": "SparsePCA_Normalize.ipynb",
                        "title": "Sparse PCA with Normalize",
                        "description": "This code template is for Sparse Principal Component Analysis(SparsePCA) along with Standard Scaler in python for dimensionality reduction technique and Data Rescaling using Normalize.  Sparse PCA overcomes this disadvantage of original PCA by finding linear combinations that contain just a few input variables.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/SparsePCA_Normalize.ipynb",
                        "keywords": "code template, sparse principal component, analysis sparse pca, standard scaler,reduction technique,data rescaling,normalize,multivariate,orthogonal components, ",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-normalize-and-powertransformer"
                    },
                    {
                        "name": "SparsePCA_RobustScaler.ipynb",
                        "title": "Sparse PCA with RobustScaler",
                        "description": "This code template is for Sparse Principal Component Analysis(SparsePCA) along with Robust Scaler in python for dimensionality reduction technique and Data Rescaling. SparsePCA is a variant of PCA, that intends to extract the set of sparse components that best reconstruct the data.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/SparsePCA_RobustScaler.ipynb",
                        "keywords": "code template, sparse principal component, analysis sparse pca, robust scaler,reduction technique,data rescaling,orthogonal components,",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-polynomial-features"
                    },
                    {
                        "name": "SparsePCA_Scale.ipynb",
                        "title": "Sparse PCA with Scale",
                        "description": "This code template is for Sparse Principal Component Analysis(SparsePCA). It is used to decompose a multivariate dataset into a set of successive orthogonal components that explain a maximum amount of the variance, keeping only the most significant singular vectors to project the data to a lower dimensional space. And Scale is utilized in the template for data normalization.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/SparsePCA_Scale.ipynb",
                        "keywords": "code template, sparse principal component, analysis sparse pca, scale,reduction technique,data rescaling, orthogonal components,",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-powertransformer"
                    },
                    {
                        "name": "SparsePCA_StandardScaler.ipynb",
                        "title": "Sparse PCA with StandardScaler",
                        "description": "This code template is for Sparse Principal Component Analysis(SparsePCA) along with Standard Scaler in python for dimensionality reduction technique and Data Rescaling. It is used to decompose a multivariate dataset into a set of successive orthogonal components that explain a maximum amount of the variance, keeping only the most significant singular vectors to project the data to a lower dimensional space.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/PCA/SparsePCA_StandardScaler.ipynb",
                        "keywords": "code template, sparse principal component, analysis sparse pca, standard, scaler, python, dimensionality, reduction technique,data rescaling, decompose, multivariate, dataset, set, successive, orthogonal components, explain, maximum, amount, variance, keeping, significant, singular, vectors, project, data, lower, dimensional, space",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-quantiletransformer"
                    }
                ]
            },
            {
                "name": "Spectral_Embedding",
                "models": [
                    {
                        "name": "SpectralEmbedding.ipynb",
                        "title": "Simple SpectralEmbedding",
                        "description": "This code template of simple SpectralEmbedding in python is a non-linear technique for dimensionality reduction that is particularly well suited for the visualization of high-dimensional datasets.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/Spectral_Embedding/SpectralEmbedding.ipynb",
                        "keywords": "code template, simple spectral embedding, python, nonlinear technique, dimensionality, reduction, particularly, suited, visualization, highdimensional, datasets",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-robustscaler"
                    },
                    {
                        "name": "SpectralEmbedding_MinMaxScaler.ipynb",
                        "title": "SpectralEmbedding with MinMaxScaler",
                        "description": "This code template of simple SpectralEmbedding in python is a non-linear technique for dimensionality reduction that is particularly well suited for the visualization of high-dimensional datasets.  Under its hood, the algorithm in action is Laplacian Eigenmaps. Laplacian Eigenmaps are considerably similar to Isometric Feature Mapping. This template utilizes the data rescaling technique MinMaxScaler from sklearn.preprocessing class.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/Spectral_Embedding/SpectralEmbedding_MinMaxScaler.ipynb",
                        "keywords": "code template, simple spectral embedding, python, nonlinear technique,spectral embedding,data rescaling technique, minmaxscaler",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-robustscaler-&-polynomialfeatures"
                    },
                    {
                        "name": "SpectralEmbedding_RobustScaler.ipynb",
                        "title": "SpectralEmbedding with RobustScaler",
                        "description": "This code template of simple SpectralEmbedding in python is a non-linear technique for dimensionality reduction. This technique relies on the basic assumption that the data lies in a low-dimensional manifold in a high-dimensional space.  This template utilizes SpectralEmbedding implementation along with feature scaling using RobustScaler.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/Spectral_Embedding/SpectralEmbedding_RobustScaler.ipynb",
                        "keywords": "code template, simple spectral embedding, python, nonlinear technique,spectral embedding,scaling, robustscaler",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-robustscaler-&-power-transformer"
                    },
                    {
                        "name": "SpectralEmbedding_StandardScaler.ipynb",
                        "title": "SpectralEmbedding with StandardScaler",
                        "description": "This code template of  SpectralEmbedding is a non-linear technique for dimensionality reduction. The Spectral Embedding (Laplacian Eigenmaps) algorithm consists of three: stages constructing the Adjacency Graph, Choosing the Weights, and Obtaining the Eigenmaps. The demonstration also utilizes StandScaler as the data normalization technique.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/Spectral_Embedding/SpectralEmbedding_StandardScaler.ipynb",
                        "keywords": "code template, simple spectral embedding, nonlinear technique,highdimensional, datasets, spectral embedding,scaling, standardscaler",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-robustscaler-&-quantile-transformer"
                    }
                ]
            },
            {
                "name": "SVD",
                "models": [
                    {
                        "name": "TruncatedSVD.ipynb",
                        "title": "TruncatedSVD",
                        "description": "This code template is for simple TruncatedSVD in python for dimensionality reduction technique. It is used to decompose a multivariate dataset into a set of successive orthogonal components that explain a maximum amount of variance.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/SVD/TruncatedSVD.ipynb",
                        "keywords": "code template, simple truncated svd, python, dimensionality, reduction technique, decompose, multivariate, dataset, set, successive, orthogonal components, explain, maximum, amount, variance",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-scale"
                    },
                    {
                        "name": "TruncatedSVD_MaxAbsScaler.ipynb",
                        "title": "TruncatedSVD with MaxAbsScaler",
                        "description": "This code template is for simple TruncatedSVD in python for dimensionality reduction technique with MaxAbsScaler feature scaling. Contrary to PCA, this estimator does not center the data before computing the singular value decomposition.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/SVD/TruncatedSVD_MaxAbsScaler.ipynb",
                        "keywords": "code template, simple truncated svd, python,reduction technique, maxabsscaler, scaling,successive orthogonal,",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-scale-and-powertransformer"
                    },
                    {
                        "name": "TruncatedSVD_MinMaxScaler.ipynb",
                        "title": "TruncatedSVD with MinMax Scaler",
                        "description": "This code template is for simple TruncatedSVD in python for dimensionality reduction technique with MinMax Scaler feature scaling. Truncated Singular Value Decomposition (SVD) is a matrix factorization technique that factors a matrix M into the three matrices.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/SVD/TruncatedSVD_MinMaxScaler.ipynb",
                        "keywords": "code template, simple truncated svd,reduction technique, minmax scaler, scaling,orthogonal components,",
                        "display_url": "https://siberian.dev/classification/linear-models/stochastic-gradient-descent-classifier-with-standardscaler"
                    },
                    {
                        "name": "TruncatedSVD_Normalize.ipynb",
                        "title": "TruncatedSVD with Normalizer",
                        "description": "This code template is for simple TruncatedSVD in python for dimensionality reduction technique with Normalizer feature scaling. The sci-kit learn estimator supports two algorithms: a fast randomized SVD solver, and a \u201cnaive\u201d algorithm that uses ARPACK as an eigensolver on X * X.T or X.T * X, whichever is more efficient.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/SVD/TruncatedSVD_Normalize.ipynb",
                        "keywords": "code template, simple truncated svd, python, dimensionality, reduction technique,orthogonal components,",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-standardscaler-and-polynomialfeatures"
                    },
                    {
                        "name": "TruncatedSVD_RobustScaler.ipynb",
                        "title": "TruncatedSVD with Robust Scaler",
                        "description": "This code template is for simple TruncatedSVD in python for dimensionality reduction technique with Robust Scaler feature scaling. This is very similar to PCA, except that the factorization for SVD is done on the data matrix, whereas for PCA, the factorization is done on the covariance matrix.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/SVD/TruncatedSVD_RobustScaler.ipynb",
                        "keywords": "code template, simple truncated svd, reduction technique, robust scaler,orthogonal components, ",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-standardscaler-and-powertransformer"
                    },
                    {
                        "name": "TruncatedSVD_Scale.ipynb",
                        "title": "TruncatedSVD with Scale",
                        "description": "This code template is for simple TruncatedSVD in python for dimensionality reduction technique with Scale feature scaling. Truncated SVD is different from regular SVDs in that it produces a factorization where the number of columns is equal to the specified truncation.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/SVD/TruncatedSVD_Scale.ipynb",
                        "keywords": "code template, simple truncated svd,reduction technique,orthogonal components,",
                        "display_url": "https://siberian.dev/classification/linear-models/sgdclassifier-with-standardscaler-and-quantiletransformer"
                    },
                    {
                        "name": "TruncatedSVD_StandardScaler.ipynb",
                        "title": "TruncatedSVD with Standard Scaler",
                        "description": "This code template is for Dimensionality Reduction using TruncatedSVD or Truncated Singular Value Decomposition. The demonstration also utilizes the data rescaling technique Scale.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/SVD/TruncatedSVD_StandardScaler.ipynb",
                        "keywords": "code template, simple truncated svd,reduction technique, standard scaler,orthogonal components, ",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoulli-naive-bayes-classifier"
                    }
                ]
            },
            {
                "name": "TSNE",
                "models": [
                    {
                        "name": "TSNE.ipynb",
                        "title": "Simple TSNE",
                        "description": "This code template of simple TSNE(t-distributed stochastic neighbor embedding) in python is a non-linear technique for dimensionality reduction that is particularly well suited for the visualization of high-dimensional datasets.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/TSNE/TSNE.ipynb",
                        "keywords": "code template, simple tsnet distributed, stochastic, neighbor embedding python, nonlinear technique,visualization, t-distributed stochastic neighbor embedding",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoulli-naive-bayes-classifier-with-maxabsscaler"
                    },
                    {
                        "name": "TSNE_MinMaxScaler.ipynb",
                        "title": "TSNE with MinMaxScaler",
                        "description": "This code template of simple TSNE(t-distributed stochastic neighbor embedding) for dimensionality reduction along with the MinMaxScaler as a feature rescaling technique. T-distributed stochastic neighbor embedding (t-SNE) is a statistical method for visualizing high-dimensional data by giving each data point a location in a two or three-dimensional map.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/TSNE/TSNE_MinMaxScaler.ipynb",
                        "keywords": "code template, simple tsnet distributed, stochastic, neighbor embedding python, nonlinear technique, minmaxscaler, rescaling technique, t-distributed stochastic neighbor embedding",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoullinb-with-maxabsscaler-and-polynomialfeatures"
                    },
                    {
                        "name": "TSNE_Normalize.ipynb",
                        "title": "TSNE with Normalize",
                        "description": "This code template of simple TSNE(t-distributed stochastic neighbor embedding) for Dimensionality reduction. It is a nonlinear dimensionality reduction technique well-suited for embedding high-dimensional data for visualization in a low-dimensional space of two or three dimensions. Normalize from sci-kit learn is utilized for data normalization.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/TSNE/TSNE_Normalize.ipynb",
                        "keywords": "code template, simple tsnet distributed, stochastic, neighbor embedding python, nonlinear technique,datasets, normalize, rescaling technique, t-distributed stochastic neighbor embedding",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoullinb-with-maxabsscaler-and-powertransformer"
                    },
                    {
                        "name": "TSNE_RobustScaler.ipynb",
                        "title": "TSNE with RobustScaler",
                        "description": "This code template of simple TSNE(t-distributed stochastic neighbor embedding) in python is a non-linear technique for dimensionality reduction that is particularly well suited for the visualization of high-dimensional datasets along with the RobustScaler as a feature rescaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/TSNE/TSNE_RobustScaler.ipynb",
                        "keywords": "code template, simple tsnet distributed, stochastic, neighbor embedding python, nonlinear technique, dimensionality, reduction, particularly, suited, visualization, high dimensional, datasets, robustscaler, rescaling technique, t-distributed stochastic neighbor embedding",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoulli-naive-bayes-classifier-with-minmaxscaler"
                    },
                    {
                        "name": "TSNE_StandardScaler.ipynb",
                        "title": "TSNE with StandardScaler",
                        "description": "This code template of simple TSNE(t-distributed stochastic neighbor embedding) for dimensionality reduction. t-SNE has been used for visualization in a wide range of applications, including genomics, computer security research, natural language processing, music analysis, cancer research, bioinformatics, geological domain interpretation, and biomedical signal processing.",
                        "URL": "https://cdn.siberian.dev/code/Dimensionality_Reduction/TSNE/TSNE_StandardScaler.ipynb",
                        "keywords": "code template, simple tsnet distributed, stochastic, neighbor embedding python, nonlinear technique,datasets, standardscaler, rescaling technique, t-distributed stochastic neighbor embedding",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoulli-naive-bayes-classifier-with-normalize"
                    }
                ]
            }
        ]
    },
    {
        "name": "EDA",
        "image": "https://cdn.siberian.dev/code-gen/EDA_blue.png",
        "description": "EDA is an approach of analyzing data to summarize their characteristics.",
        "models": [
            {
                "name": "Auto_Visualization",
                "models": [
                    {
                        "name": "AutoViz.ipynb",
                        "title": "Auto Visualization using AutoViz",
                        "description": "This Code template is for the Exploratory Data Analysis using AutoViz. AutoViz performs automatic visualization of any dataset with one line. Give any input file (CSV, text, or JSON), and AutoViz will visualize it.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Auto_Visualization/AutoViz.ipynb",
                        "keywords": "code template, exploratory, data, autoviz, autoviz, performs, automatic, visualization, dataset, line, input, file, csv, text, json, autoviz, visualize, it",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoulli-naive-bayes-classifier-with-polynomial-features"
                    },
                    {
                        "name": "DataPrep.ipynb",
                        "title": "Auto Visualization using Dataprep",
                        "description": "This Code template is for the Exploratory Data Analysis using the DataPrep. It is the fastest and easiest EDA (Exploratory Data Analysis) library. It allows you to understand a Pandas DataFrame with a few lines of code.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Auto_Visualization/DataPrep.ipynb",
                        "keywords": "code template, exploratory, data, dataprep,fastest, easiest, eda, exploratory, data,allows, understand, pandas, dataframe, lines, code",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoulli-naive-bayes-classifier-with-power-transformer"
                    },
                    {
                        "name": "PandasVisualAnalysis.ipynb",
                        "title": "Auto Visualization using pandas_visual_analysis",
                        "description": "This Code template is for the Exploratory Data Analysis using the PandasVisualAnalysis. It is a package provided by python for interactive visual analysis in a Jupyter notebook. It generates an interactive visual analysis widget to analyze pandas' Data Frame.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Auto_Visualization/PandasVisualAnalysis.ipynb",
                        "keywords": "code template, exploratory, data, pandasvisualanalysis, package, provided, python, interactive, visual,jupyter, notebook, generates, interactive, visual,widget, analyze, pandas, data, frame",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoullinb-with-quantile-transformer"
                    },
                    {
                        "name": "Pandas_Profiling.ipynb",
                        "title": "Auto Visualization using Pandas-Profiling",
                        "description": "This Code template is for the Exploratory Data Analysis using Pandas profiling. Pandas profiling is an open-source library with which we can do an exploratory data analysis with just a few lines of code.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Auto_Visualization/Pandas_Profiling.ipynb",
                        "keywords": "code template, exploratory, data, pandas, profiling,pandas, profiling, opensource, with, quickly, exploratory, data,lines, code",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoulli-naive-bayes-classifier-with-robustscaler"
                    },
                    {
                        "name": "SweetViz.ipynb",
                        "title": "Auto Visualization using SweetViz",
                        "description": "This Code template is for the Exploratory Data Analysis using the SweetViz. It is an open-source library that generates beautiful, high-density visualizations. Output is a fully self-contained HTML application.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Auto_Visualization/SweetViz.ipynb",
                        "keywords": "code template, exploratory, data, sweetviz, opensource, generates, beautiful, highdensity, visualizations, output, selfcontained, html, application",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoulli-naive-bayes-classifier-with-scale"
                    }
                ]
            },
            {
                "name": "Basic_Visualization",
                "models": [
                    {
                        "name": "CorrelationPlot.ipynb",
                        "title": "Visualization using Correlation Plot",
                        "description": "This Code template is for the Exploratory Data Analysis using a Correlation Plot which plots a 2D correlation matrix between two discrete dimensions, using colored cells to represent data from usually a monochromatic scale.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Basic_Visualization/CorrelationPlot.ipynb",
                        "keywords": "code template, exploratory, data, correlation, plot, plots, d, correlation, matrix, discrete, dimensions,colored, cells, represent, data, usually, monochromatic, scale",
                        "display_url": "https://siberian.dev/classification/naive-bayes/bernoulli-naive-bayes-classifier-with-standardscaler"
                    },
                    {
                        "name": "Histogram.ipynb",
                        "title": "Visualization using Histogram",
                        "description": "This Code template is for the Exploratory Data Analysis using Histogram. A histogram represents the distribution of a variable by creating bins (intervals) along the range of values and showing vertical bars to indicate the number of observations in each bin.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Basic_Visualization/Histogram.ipynb",
                        "keywords": "code template, exploratory, data, histogram, histogram, represents, distribution, variable, creating, bins, interval, range, values, vertical, bars, indicate, observations, bin",
                        "display_url": "https://siberian.dev/classification/naive-bayes/categorical-naive-bayes-classifier"
                    },
                    {
                        "name": "PairwisePlot.ipynb",
                        "title": "Auto Visualization using PairwisePlot",
                        "description": "This Code template is for the Exploratory Data Analysis using the Pairwise. It is an open-source library that generates beautiful, high-density visualizations. Output is a fully self-contained HTML application.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Basic_Visualization/PairwisePlot.ipynb",
                        "keywords": "code template, exploratory, data, pairwise, opensource, generates, beautiful, highdensity, visualizations, output, selfcontained, html, application",
                        "display_url": "https://siberian.dev/classification/naive-bayes/categorical-naive-bayes-classifier-with-minmaxscaler"
                    },
                    {
                        "name": "ScatterPlot.ipynb",
                        "title": "Visualization using Scatter Plot",
                        "description": "This Code template is for the Exploratory Data Analysis using a Scatter Plot, which plots numeric data with the possibility of several semantic groupings.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Basic_Visualization/ScatterPlot.ipynb",
                        "keywords": "code template, exploratory, data, scatter, plot, plots, numeric, data, possibility, semantic, groupings",
                        "display_url": "https://siberian.dev/classification/naive-bayes/categorical-naive-bayes-classifier-with-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "ViolenPlot.ipynb",
                        "title": "Visualization using Violen Plot",
                        "description": "This Code template is for the Exploratory Data Analysis using Violen Plot. A violen plot plots numeric data with a rotated kernel density plot on each side showing the full distribution of the data.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Basic_Visualization/ViolenPlot.ipynb",
                        "keywords": "code template, exploratory, data, violen, plot, violen, plot, plots, numeric, data, rotated, kernel, density, plot, distribution, data",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussian-naive-bayes-classifier"
                    },
                    {
                        "name": "WordCloud.ipynb",
                        "title": "Visualization Using WordCloud",
                        "description": "This Code template is to summarize vast pieces of information visually. It is created using WordCloud from the wordcloud package.",
                        "URL": "https://cdn.siberian.dev/code/EDA/Basic_Visualization/WordCloud.ipynb",
                        "keywords": "code template, summarize, vast, pieces, information, visually, created,wordcloud, wordcloud, package",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussiannb-with-maxabsscaler"
                    }
                ]
            }
        ]
    },
    {
        "name": "Natural_Language_Processing",
        "image": "https://cdn.siberian.dev/code-gen/nlp_blue.png",
        "description": "Give computers an ability to understand human dialect.",
        "models": [
            {
                "name": "NLP",
                "models": [
                    {
                        "name": "FillMaskBERT_Cased.ipynb",
                        "title": "Fill-Mask using BERT base model (cased)",
                        "description": "This Code Template is to perform a Mask filling operation in python using the HuggingFace library. In this template, BERT Model has been demonstrated. BERT is a transformers model pre-trained on a large corpus of English data in a self-supervised fashion. BERT has originally been released in base and large variations for cased and uncased input text",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/FillMaskBERT_Cased.ipynb",
                        "keywords": "code template,python,huggingface, bert model,bert, transformers model, pretrained, corpus, ",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussian-naive-bayes-classifier-with-maxabsscaler-and-polynomialfeatures"
                    },
                    {
                        "name": "FillMaskBERT_Uncased.ipynb",
                        "title": "Fill-Mask using BERT base model (uncased)",
                        "description": "This Code Template is to perform a Mask filling operation in python using the HuggingFace library. In this template, BERT Model is utilized. BERT is a transformers model pretrained on a large corpus of English data in a self-supervised fashion. The uncased BERT models also strip out accent markers.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/FillMaskBERT_Uncased.ipynb",
                        "keywords": "code template,python, huggingface, bert model, bert, transformers, model, pretrained, corpus,",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussiannb-with-maxabsscaler-and-powertransformer"
                    },
                    {
                        "name": "FillMaskRoBERTa_Base.ipynb",
                        "title": "Fill-Mask using RoBERTa Base model",
                        "description": "This Code Template is to perform a Mask filling operation in python using the HuggingFace library. In this template, RoBERTa Model is utilized.RoBERTa is a transformers model pretrained on a large corpus of English data in a self-supervised fashion.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/FillMaskRoBERTa_Base.ipynb",
                        "keywords": "code template, perform, mask, filling, operation, python,huggingface, roberta, model, utilizedroberta, transformers, model, pretrained, corpus, english, data, selfsupervised, fashion",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussiannb-with-maxabsscaler-and-quantiletransformer"
                    },
                    {
                        "name": "FillMaskRoBERTa_Large.ipynb",
                        "title": "Fill-Mask using RoBERTa large model",
                        "description": "This Code Template is to perform a Mask filling operation in python using the HuggingFace library. In this template, RoBERTa Model is utilized.RoBERTa is a transformers model pretrained on a large corpus of English data in a self-supervised fashion. Masked language modeling is the task of masking some of the words in a sentence and predicting which words should replace those masks.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/FillMaskRoBERTa_Large.ipynb",
                        "keywords": "code template, huggingface, roberta model, utilizedroberta, transformers, model, pretrained, corpus, ",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussian-naive-bayes-classifier-with-minmaxscaler"
                    },
                    {
                        "name": "QuestionAnswer_BERT.ipynb",
                        "title": "Question Answer Application using BRET",
                        "description": "This Code Template is for Question Answer Application using BRET which stands for Bidirectional Encoder Representations from Transformers.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/QuestionAnswer_BERT.ipynb",
                        "keywords": "code template,question, answer, application,bret, stands, bidirectional, encoder, representations, transformers",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussian-naive-bayes-classifier-with-normalizer"
                    },
                    {
                        "name": "QuestionAnswer_Roberta_base.ipynb",
                        "title": "Question Answer Application using Roberta-base",
                        "description": "This Code Template is for Question Answer Application using Roberta-base, which stands for Robustly Optimized Bidirectional Encoder Representations from Transformers.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/QuestionAnswer_Roberta_base.ipynb",
                        "keywords": "code template,question, answer, application,robertabase, stands, robustly, optimized, bidirectional, encoder, representations, transformers",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussian-naive-bayes-classifier-with-polynomial-features"
                    },
                    {
                        "name": "TextClassificationBERT.ipynb",
                        "title": "Text Classification using BERT",
                        "description": "This Code Template is for the Text Classification task using  Bidirectional Encoder Representations from Transformers(BERT). BERT makes use of a Transformer, an attention mechanism that learns contextual relations between words (or sub-words) in a text.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextClassificationBERT.ipynb",
                        "keywords": "code template, text classification,transformer, model, bert Bidirectional Encoder Representations ",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussian-naive-bayes-classifier-with-power-transformer"
                    },
                    {
                        "name": "TextClassification_BernoulliNB_TfidfVectorizer.ipynb",
                        "title": "Text Classification using BernoulliNB and TfidfVectorizer",
                        "description": "This Code Template is for Text Classification using the BernoulliNB algorithm along with the Text Feature technique TfidfVectorizer from Scikit-learn in python.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextClassification_BernoulliNB_TfidfVectorizer.ipynb",
                        "keywords": "code template, text classification,bernoullinb,text, technique, tfidfvectorizer, scikitlearn, python",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussian-naive-bayes-classifier-with-quantile-transformer"
                    },
                    {
                        "name": "TextClassification_CNN.ipynb",
                        "title": "Text Classification using CNN",
                        "description": "This Code Template is for Text Classification using Convolutional Neural Networks (CNN or ConvNet). A Convolutional Neural Network (ConvNet/CNN) is a Deep Learning algorithm that can take in an input, assign importance (learnable weights and biases) to various aspects/objects in the image, and be able to differentiate one from the other.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextClassification_CNN.ipynb",
                        "keywords": "code template, text classification, convolutional, neural network, cnn, ",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussian-naive-bayes-classifier-with-robust-scaler"
                    },
                    {
                        "name": "TextClassification_GradientBoostingClassifier_CountVectorizer.ipynb",
                        "title": "Text Classification using GradientBoostingClassifier and CountVectorizer",
                        "description": "This Code Template is for Text Classification using GradientBoostingClassifier based on the Gradient Boosting Ensemble Learning Technique along with the Text Feature technique CountVectorizer from Scikit-learn in python. Scikit-learn\u2019s CountVectorizer is used to convert a collection of text documents to a vector of term/token counts.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextClassification_GradientBoostingClassifier_CountVectorizer.ipynb",
                        "keywords": "code template, text classification,gradient boosting classifier,gradient boosting, countvectorizer, scikitlearn, python",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussian-naive-bayes-classifier-with-scale"
                    },
                    {
                        "name": "TextClassification_GradientBoosting_TfidfVectorizer.ipynb",
                        "title": "Text Classification using Gradient Boosting Classifier and TfidfVectorizer",
                        "description": "This Code Template is for Text Classification using Gradient Boosting Classifier along with the Text Feature technique TfidfVectorizer from Scikit-learn in python. TF-IDF is used to reduce the weight of tokens that appear frequently compared to tokens that appear rarely.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextClassification_GradientBoosting_TfidfVectorizer.ipynb",
                        "keywords": "code template, text classification,gradient boositng, classifier text,tfidfvectorizer, scikitlearn, python",
                        "display_url": "https://siberian.dev/classification/naive-bayes/gaussian-naive-bayes-classifier-with-standard-scaler"
                    },
                    {
                        "name": "TextClassification_LinearSVC_CountVectorizer.ipynb",
                        "title": "Text Classification using LinearSVC and CountVectorizer",
                        "description": "This Code Template is for Text Classification using LinearSVC based on the Support Vector Machine Algorithm along with the Text Feature technique CountVectorizer from Scikit-learn in python. CountVectorizer creates a matrix in which each unique word is represented by a column of the matrix, and each text sample from the document is a row in the matrix.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextClassification_LinearSVC_CountVectorizer.ipynb",
                        "keywords": "code template, text classification,linearsvc,support vector machine,text technique, countvectorizer, scikitlearn, python",
                        "display_url": "https://siberian.dev/classification/naive-bayes/multinomial-naive-bayes-classifier"
                    },
                    {
                        "name": "TextClassification_LinearSVC_TfidfVectorizer.ipynb",
                        "title": "Text Classification using LinearSVC and TfidfVectorizer",
                        "description": "This Code Template is for Text Classification using LinearSVC based on the Support Vector Machine Algorithm along with the Text Feature technique TfidfVectorizer from Scikit-learn in python. One can import the TfidfVectorizer function from preprocessing class.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextClassification_LinearSVC_TfidfVectorizer.ipynb",
                        "keywords": "code template, text classification,linearsvc,support vector machine,tfidfvectorizer, scikitlearn, python",
                        "display_url": "https://siberian.dev/classification/naive-bayes/multinomial-naive-bayes-classifier-with-minmaxscaler"
                    },
                    {
                        "name": "TextClassification_LSTM.ipynb",
                        "title": "Text Classification using LSTM",
                        "description": "This Code Template is for Text Classification using Long short-term memory in python. LSTMs are explicitly designed to avoid the long-term dependency problem. Remembering information for long periods is practically their default behavior, not something they struggle to learn.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextClassification_LSTM.ipynb",
                        "keywords": "code template, text classification,shortterm memory, python",
                        "display_url": "https://siberian.dev/classification/naive-bayes/multinomial-naive-bayes-classifier-with-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "TextClassification_MultinomialNB_CountVectorizer.ipynb",
                        "title": "Text Classification using MultinomialNB and CountVectorizer",
                        "description": "This Code Template is for Text Classification using MultinomialNB based on the Naive Bayes algorithm for multinomially distributed data along with the Text Feature technique CountVectorizer from Scikit-learn in python. CountVectorizer creates a matrix in which each unique word is represented by a column of the matrix, and each text sample from the document is a row in the matrix.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextClassification_MultinomialNB_CountVectorizer.ipynb",
                        "keywords": "code template, text classification,multinomialnb,naive bayes,multinomially,countvectorizer, scikitlearn, python",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/simple-nearest-centroid-classification"
                    },
                    {
                        "name": "TextClassification_MultinomialNB_TfidfVectorizer.ipynb",
                        "title": "Text Classification using MultinomialNB and TfidfVectorizer",
                        "description": "This Code Template is for Text Classification using the MultinomialNB algorithm along with the Text Feature technique TfidfVectorizer from Scikit-learn in python.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextClassification_MultinomialNB_TfidfVectorizer.ipynb",
                        "keywords": "code template, text classification,multinomialnb,text, technique, tfidfvectorizer, scikitlearn, python",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-maxabsscaler"
                    },
                    {
                        "name": "TextClassification_RandomForestClassifier_CountVectorizer.ipynb",
                        "title": "Text Classification using RandomForestClassifier and CountVectorizer",
                        "description": "This Code Template is for Text Classification using RandomForestClassifier and CountVectorizer from Scikit-learn in python. Scikit-learn\u2019s CountVectorizer is used to convert a collection of text documents to a vector of term/token counts.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextClassification_RandomForestClassifier_CountVectorizer.ipynb",
                        "keywords": "code template, text classification,random forest classifier, countvectorizer, scikitlearn, python",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearestcentroid-with-maxabsscaler-and-powertransformer"
                    },
                    {
                        "name": "TextClassification_RandomForestClassifier_TfidfVectorizer.ipynb",
                        "title": "Text Classification using Random Forest Classifier and TfidfVectorizer",
                        "description": "This Code Template is for Text Classification using Random Forest Classifier along with the Text Feature technique TfidfVectorizer from Scikit-learn in python.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextClassification_RandomForestClassifier_TfidfVectorizer.ipynb",
                        "keywords": "code template, text classification,random, forest, classifier, text, technique, tfidfvectorizer, scikitlearn, python",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearestcentroid-with-maxabsscaler-and-quantiletransformer"
                    },
                    {
                        "name": "TextClassification_SVC_CountVectorizer.ipynb",
                        "title": "Text Classification using SVC and CountVectorizer",
                        "description": "This Code Template is for Text Classification using SVC based on the Support Vector Machine Algorithm along with the Text Feature technique CountVectorizer from Scikit-learn in python. Countvectorizer makes it easy for text data to be used directly in machine learning and deep learning models such as text classification.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextClassification_SVC_CountVectorizer.ipynb",
                        "keywords": "code template, text classification,svc,support vector machine,text technique, countvectorizer, scikitlearn, python",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-minmaxscaler"
                    },
                    {
                        "name": "TextClassification_SVC_TfidfVectorizer.ipynb",
                        "title": "Text Classification using SVC and TfidfVectorizer",
                        "description": "This Code Template is for Text Classification using SVC based on the Support Vector Machine Algorithm along with the Text Feature technique TfidfVectorizer from Scikit-learn in python. TF-IDF  method is a widely used technique in Information Retrieval and Text Mining.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextClassification_SVC_TfidfVectorizer.ipynb",
                        "keywords": "code template, text classification,svc,support vector machine,text technique, tfidfvectorizer, scikitlearn, python",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-minmaxscaler-and-polynomial-features"
                    },
                    {
                        "name": "TextClassification_XGBoost_CountVectorizer.ipynb",
                        "title": "Text Classification using XGBoost and CountVectorizer",
                        "description": "This Code Template is for Text Classification using XGBoost along with the Text Feature technique CountVectorizer from Scikit-learn in python. CountVectorizer is used to transform a given text into a vector based on the frequency (count) of each word that occurs in the entire text.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextClassification_XGBoost_CountVectorizer.ipynb",
                        "keywords": "code template, text classification,xgboost, text technique, countvectorizer, scikitlearn, python",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-minmaxscaler-&-powertransformer"
                    },
                    {
                        "name": "TextClassification_XGBoost_TfidfVectorizer.ipynb",
                        "title": "Text Classification using XGBoost and TfidfVectorizer",
                        "description": "This Code Template is for Text Classification using XGBoost along with the Text Feature technique TfidfVectorizer from Scikit-learn in python. TF-IDF stands for Term Frequency \u2014 Inverse Document Frequency. It is a technique to quantify words in a set of documents.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextClassification_XGBoost_TfidfVectorizer.ipynb",
                        "keywords": "code template, text classification,xgboost, text technique, tfidfvectorizer, scikitlearn, python",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearestcentroid-with-minmaxscaler-&-quantile-transformer"
                    },
                    {
                        "name": "TextEmotionDetection _text2emotion.ipynb",
                        "title": "Text Emotion Detection using text2emotion",
                        "description": "This Code Template is for Text Emotion Detection using the text2emotion technique.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextEmotionDetection _text2emotion.ipynb",
                        "keywords": "code template, text, emotion, detection,textemotion, technique",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-normalizer"
                    },
                    {
                        "name": "TextGenerationGPT2.ipynb",
                        "title": "Text Generation using GPT2",
                        "description": "This Code Template is for the Text Generation task, which is a problem associated with NLG(Natural Language Generation). In this Project, GPT-2 is utilized for Text Generation. GPT-2 is a transformers model pre-trained on a very large corpus of English data in a self-supervised fashion. GPT-2 is an acronym for Generative Pretrained Transformer 2.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextGenerationGPT2.ipynb",
                        "keywords": "code template, text generation, nlgnatural language,gpt, text generationgpt,model pretrained,corpus, Generative Pretrained Transformer",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-normalize-&-polynomial-features"
                    },
                    {
                        "name": "TextGenerationGPTNEO125M.ipynb",
                        "title": "Text Generation using GPT Neo 125M",
                        "description": "This Code Template is for the Text Generation task, which is a problem associated with NLG(Natural Language Generation). In this Project, GPT Neo 125M is utilized for Text Generation. GPT-Neo 125M is a transformer model designed using EleutherAI's replication of the GPT-3 architecture.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextGenerationGPTNEO125M.ipynb",
                        "keywords": "code template, text, generation, associated, nlgnatural, language, generation, project, gpt, neo, m, utilized, text, generationgptneo, m, transformer, model, designed,eleutherais, replication, gpt, architecture",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearestcentroid-with-normalize-&--power-transformer"
                    },
                    {
                        "name": "TextGenerationGPTNEO1_3B.ipynb",
                        "title": "Text Generation using GPT Neo 2.7B",
                        "description": "This Code Template is for the Text Generation task which is a problem associated with NLG(Natural Language Generation). In this Project, GPT Neo 2.7B is utilized for Text Generation. The model is based on OpenAI's GPT-3 model.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextGenerationGPTNEO1_3B.ipynb",
                        "keywords": "code template, text generation,nlgnatural language,gpt, neo,text generationgptneo, transformer model,eleutherais, replication, gpt architecture",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearestcentroid-with-normalize-&--quantile-transformer"
                    },
                    {
                        "name": "TextSummarizationDistilBART.ipynb",
                        "title": "Text Summarization using DistilBART",
                        "description": "This Code Template is for the Text Summarization task, one of the problems associated with NLP(Natural Language Processing). In this Code template, DistilBART pre-trained model is utilized, which is a transformer-based model.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextSummarizationDistilBART.ipynb",
                        "keywords": "code template, text, summarization, associated, nlpnatural, language, processing, code template, distilbart, utilized, transformer,model",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-polynomial-features"
                    },
                    {
                        "name": "TextSummarizationPegasus.ipynb",
                        "title": "Text Summarization using Pegasus",
                        "description": "This Code template is for text summarization using the Transformer based model Pegasus from the HugginFace library. PEGASUS uses an encoder-decoder model for sequence-to-sequence learning.",
                        "URL": "https://cdn.siberian.dev/code/Natural_Language_Processing/NLP/TextSummarizationPegasus.ipynb",
                        "keywords": "code template, text summarization,transformer model, pegasus, hugginface,",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-powertransformer"
                    }
                ]
            }
        ]
    },
    {
        "name": "Regression",
        "image": "https://cdn.siberian.dev/code-gen/regression_blue.png",
        "description": "Establish a correlation of data to a real or continious target variable.",
        "models": [
            {
                "name": "Adaptive_Boosting",
                "models": [
                    {
                        "name": "AdaBoostRegressor.ipynb",
                        "title": "Simple AdaBoost Regression",
                        "description": "This Code template is for regression analysis using a simple AdaBoostRegressor based on the Boosting Ensemble Learning technique.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Adaptive_Boosting/AdaBoostRegressor.ipynb",
                        "keywords": "code template, regression, simple, adaboostregressor,boosting, ensemble,learning technique",
                        "display_url": "https://siberian.dev/regression/adaptive-boosting/simple-adaboost-regression"
                    },
                    {
                        "name": "AdaBoostRegressor_MinMaxScaler.ipynb",
                        "title": "AdaBoostRegressor with MinMaxScaler",
                        "description": "This Code template is for regression analysis using a simple AdaBoostRegressor based on the Boosting Ensemble Learning technique and feature rescaling technique called MinMaxScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Adaptive_Boosting/AdaBoostRegressor_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, simple, adaboostregressor,boosting, ensemble,learning technique, rescaling technique,minmaxscaler",
                        "display_url": "https://siberian.dev/regression/adaptive-boosting/adaboostregressor-with-minmaxscaler"
                    },
                    {
                        "name": "AdaBoostRegressor_Normalize.ipynb",
                        "title": "AdaBoostRegressor with Normalize",
                        "description": "This Code template is for regression analysis using a simple AdaBoostRegressor based on the Boosting Ensemble Learning technique and feature rescaling technique called Normalize",
                        "URL": "https://cdn.siberian.dev/code/Regression/Adaptive_Boosting/AdaBoostRegressor_Normalize.ipynb",
                        "keywords": "code template, regression, simple, adaboostregressor,boosting, ensemble,learning technique, rescaling technique,normalize",
                        "display_url": "https://siberian.dev/regression/adaptive-boosting/adaboostregressor-with-normalize"
                    },
                    {
                        "name": "AdaBoostRegressor_RobustScaler.ipynb",
                        "title": "AdaBoostRegressor with RobustScaler",
                        "description": "This Code template is for regression analysis using a simple AdaBoostRegressor based on the Boosting Ensemble Learning technique and feature rescaling technique called RobustScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Adaptive_Boosting/AdaBoostRegressor_RobustScaler.ipynb",
                        "keywords": "code template, regression, simple, adaboostregressor,boosting, ensemble,learning technique, rescaling technique,robustscaler",
                        "display_url": "https://siberian.dev/regression/adaptive-boosting/adaboostregressor-with-robustscaler"
                    },
                    {
                        "name": "AdaBoostRegressor_Scale.ipynb",
                        "title": "AdaBoostRegressor with Scale",
                        "description": "This Code template is for regression analysis using a simple AdaBoostRegressor based on the Boosting Ensemble Learning technique and feature rescaling technique called Scale",
                        "URL": "https://cdn.siberian.dev/code/Regression/Adaptive_Boosting/AdaBoostRegressor_Scale.ipynb",
                        "keywords": "code template, regression, simple, adaboostregressor,boosting, ensemble,learning technique, rescaling technique,scale",
                        "display_url": "https://siberian.dev/regression/adaptive-boosting/adaboostregressor-with-scale"
                    },
                    {
                        "name": "AdaBoostRegressor_StandardScaler.ipynb",
                        "title": "AdaBoost Regression with StandardScaler",
                        "description": "This Code template is for regression analysis using a simple AdaBoostRegressor based on the Boosting Ensemble Learning technique and feature rescaling technique called StandardScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Adaptive_Boosting/AdaBoostRegressor_StandardScaler.ipynb",
                        "keywords": "code template, regression, simple, adaboostregressor,boosting, ensemble,learning technique, rescaling technique,standardscaler",
                        "display_url": "https://siberian.dev/regression/adaptive-boosting/adaboost-regression-with-standardscaler"
                    }
                ]
            },
            {
                "name": "CatBoost",
                "models": [
                    {
                        "name": "CatBoostRegressor.ipynb",
                        "title": "Simple CatBoostRegressor",
                        "description": "This Code template is for regression analysis using CatBoostRegressor. CatBoost is an algorithm for gradient boosting on decision trees.",
                        "URL": "https://cdn.siberian.dev/code/Regression/CatBoost/CatBoostRegressor.ipynb",
                        "keywords": "code template, regression, catboostregressor, catboost,gradient boosting, decision, trees",
                        "display_url": "https://siberian.dev/regression/catboost/simple-catboostregressor"
                    },
                    {
                        "name": "CatBoostRegressor_Pool.ipynb",
                        "title": "CatBoost Regression using Pool",
                        "description": "This Code template is for regression analysis using CatBoostRegressor and data loading using Pool. CatBoost is an algorithm for gradient boosting on decision trees.",
                        "URL": "https://cdn.siberian.dev/code/Regression/CatBoost/CatBoostRegressor_Pool.ipynb",
                        "keywords": "code template, regression, catboostregressor, data, loading,pool, catboost,gradient boosting, decision, trees",
                        "display_url": "https://siberian.dev/regression/catboost/catboost-regression-using-pool"
                    },
                    {
                        "name": "CatBoostRegressor_RobustScaler.ipynb",
                        "title": "CatBoostRegressor with RobustScaler",
                        "description": "This Code template is for regression analysis using CatBoostRegressor and Robust Scaler Feature Scaling technique. CatBoost is an algorithm for gradient boosting on decision trees.",
                        "URL": "https://cdn.siberian.dev/code/Regression/CatBoost/CatBoostRegressor_RobustScaler.ipynb",
                        "keywords": "code template, regression, catboostregressor, robust, scaler, scaling technique, catboost,gradient boosting, decision, trees",
                        "display_url": "https://siberian.dev/regression/catboost/catboostregressor-with-robustscaler"
                    },
                    {
                        "name": "CatBoostRegressor_Scale.ipynb",
                        "title": "CatBoostRegressor with Scale",
                        "description": "This Code template is for regression analysis using CatBoostRegressor with data rescaling technique scale. CatBoost is an algorithm for gradient boosting on decision trees.",
                        "URL": "https://cdn.siberian.dev/code/Regression/CatBoost/CatBoostRegressor_Scale.ipynb",
                        "keywords": "code template, regression, catboostregressor, data rescaling technique, scale, catboost,gradient boosting, decision, trees",
                        "display_url": "https://siberian.dev/regression/catboost/catboostregressor-with-scale"
                    }
                ]
            },
            {
                "name": "Decision_Tree",
                "models": [
                    {
                        "name": "DecisionTreeRegressor.ipynb",
                        "title": "Decision Tree Regression",
                        "description": "This Code template is for regression analysis using simple DecisionTreeRegressor based on the Classification and Regression Trees algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Decision_Tree/DecisionTreeRegressor.ipynb",
                        "keywords": "code template, regression, simple, decisiontreeregressor,classification, regression, trees,",
                        "display_url": "https://siberian.dev/regression/decision-tree/decision-tree-regression"
                    },
                    {
                        "name": "DecisionTreeRegressor_MinMaxScaler.ipynb",
                        "title": "DecisionTreeRegressor with MinMaxScaler",
                        "description": "This Code template is for regression analysis using simple DecisionTreeRegressor based on the Classification and Regression Trees algorithm along with MinMaxScaler Feature Scaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Decision_Tree/DecisionTreeRegressor_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, simple, decisiontreeregressor,classification, regression, trees,minmaxscaler, scaling technique",
                        "display_url": "https://siberian.dev/regression/decision-tree/decisiontreeregressor-with-minmaxscaler"
                    },
                    {
                        "name": "DecisionTreeRegressor_Normalize.ipynb",
                        "title": "DecisionTreeRegressor with Normalize",
                        "description": "This Code template is for regression analysis using simple DecisionTreeRegressor based on the Classification and Regression Trees algorithm along with Normalize Feature Scaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Decision_Tree/DecisionTreeRegressor_Normalize.ipynb",
                        "keywords": "code template, regression, simple, decisiontreeregressor,classification, regression, trees,normalize, scaling technique",
                        "display_url": "https://siberian.dev/regression/decision-tree/decisiontreeregressor-with-normalize"
                    },
                    {
                        "name": "DecisionTreeRegressor_RobustScaler.ipynb",
                        "title": "DecisionTreeRegressor with RobustScaler",
                        "description": "This Code template is for regression analysis using simple DecisionTreeRegressor based on the Classification and Regression Trees algorithm along with RobustScaler Feature Scaling technique.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Decision_Tree/DecisionTreeRegressor_RobustScaler.ipynb",
                        "keywords": "code template, regression, simple, decisiontreeregressor,classification, regression, trees,robustscaler, scaling technique",
                        "display_url": "https://siberian.dev/regression/decision-tree/decisiontreeregressor-with-robustscaler"
                    },
                    {
                        "name": "DecisionTreeRegressor_Scale.ipynb",
                        "title": "DecisionTreeRegressor with Scale",
                        "description": "This Code template is for the regression analysis using DecisionTree Regressor and feature scaling technique scale without a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Decision_Tree/DecisionTreeRegressor_Scale.ipynb",
                        "keywords": "code template, regression, decisiontree, regressor, scaling technique, scale, pipeline",
                        "display_url": "https://siberian.dev/regression/decision-tree/decisiontreeregressor-with-scale"
                    },
                    {
                        "name": "DecisionTreeRegressor_StandardScaler.ipynb",
                        "title": "DecisionTreeRegressor with StandardScaler",
                        "description": "This Code template is for regression analysis using simple DecisionTreeRegressor with data rescaling via StandardScaler.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Decision_Tree/DecisionTreeRegressor_StandardScaler.ipynb",
                        "keywords": "code template, regression, simple, decisiontreeregressor,data rescaling,standardscaler",
                        "display_url": "https://siberian.dev/regression/decision-tree/decisiontreeregressor-with-standardscaler"
                    }
                ]
            },
            {
                "name": "Extra_Trees",
                "models": [
                    {
                        "name": "ExtraTreesRegressor.ipynb",
                        "title": "ExtraTrees Regression",
                        "description": "This Code template is for regression analysis using a simple ExtraTreesRegressor based on the Extremely randomized trees algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Extra_Trees/ExtraTreesRegressor.ipynb",
                        "keywords": "code template, regression, simple, extratreesregressor,extremely randomized trees,",
                        "display_url": "https://siberian.dev/regression/extra-trees/extratrees-regression"
                    },
                    {
                        "name": "ExtraTreesRegressor_MinMaxScaler.ipynb",
                        "title": "ExtraTrees Regression with MinMaxScaler",
                        "description": "This Code template is for regression analysis using a simple ExtraTreesRegressor based on the Extremely randomized trees algorithm using feature scaling via MinMaxScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Extra_Trees/ExtraTreesRegressor_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, simple, extratreesregressor,extremely randomized trees,scaling,minmaxscaler",
                        "display_url": "https://siberian.dev/regression/extra-trees/extratrees-regression-with-minmaxscaler"
                    },
                    {
                        "name": "ExtraTreesRegressor_Normalize.ipynb",
                        "title": "ExtraTrees Regression with Normalize",
                        "description": "This Code template is for regression analysis using a simple ExtraTreesRegressor based on the Extremely randomized trees algorithm using feature scaling via Normalize",
                        "URL": "https://cdn.siberian.dev/code/Regression/Extra_Trees/ExtraTreesRegressor_Normalize.ipynb",
                        "keywords": "code template, regression, simple, extratreesregressor,extremely randomized trees,scaling,normalize",
                        "display_url": "https://siberian.dev/regression/extra-trees/extratrees-regression-with-normalize"
                    },
                    {
                        "name": "ExtraTreesRegressor_RobustScaler.ipynb",
                        "title": "ExtraTrees Regression with RobustScaler",
                        "description": "This Code template is for regression analysis using a simple ExtraTreesRegressor based on the Extremely randomized trees algorithm using feature scaling via RobustScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Extra_Trees/ExtraTreesRegressor_RobustScaler.ipynb",
                        "keywords": "code template, regression, simple, extratreesregressor,extremely randomized trees,scaling,robustscaler",
                        "display_url": "https://siberian.dev/regression/extra-trees/extratrees-regression-with-robustscaler"
                    },
                    {
                        "name": "ExtraTreesRegressor_Scale.ipynb",
                        "title": "ExtraTrees Regression with Scale",
                        "description": "This Code template is for regression analysis using a simple ExtraTreesRegressor based on the Extremely randomized trees algorithm using feature scaling via Scale",
                        "URL": "https://cdn.siberian.dev/code/Regression/Extra_Trees/ExtraTreesRegressor_Scale.ipynb",
                        "keywords": "code template, regression, simple, extratreesregressor,extremely randomized trees,scaling,scale",
                        "display_url": "https://siberian.dev/regression/extra-trees/extratrees-regression-with-scale"
                    },
                    {
                        "name": "ExtraTreesRegressor_StandardScaler.ipynb",
                        "title": "ExtraTrees Regression with StandardScaler",
                        "description": "This Code template is for regression analysis using a simple ExtraTreesRegressor based on the Extremely randomized trees algorithm using feature scaling via StandardScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Extra_Trees/ExtraTreesRegressor_StandardScaler.ipynb",
                        "keywords": "code template, regression, simple, extratreesregressor,extremely randomized trees,scaling,standardscaler",
                        "display_url": "https://siberian.dev/regression/extra-trees/extratrees-regression-with-standardscaler"
                    }
                ]
            },
            {
                "name": "Gradient_Boosting_Machine",
                "models": [
                    {
                        "name": "GradientBoostingRegressor.ipynb",
                        "title": "Gradient Boosting Regressor",
                        "description": "This Code template is for regression analysis using a simple GradientBoostingRegressor based on the Gradient Boosting Ensemble Learning Technique.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Gradient_Boosting_Machine/GradientBoostingRegressor.ipynb",
                        "keywords": "code template, regression, simple, gradientboostingregressor,gradient boosting, ensemble,learning technique",
                        "display_url": "https://siberian.dev/regression/gradient-boosting-machine/gradient-boosting-regressor"
                    },
                    {
                        "name": "GradientBoostingRegressor_MinMaxScaler.ipynb",
                        "title": "GradientBoostingRegressor with MinMaxScaler",
                        "description": "This Code template is for regression analysis using a simple GradientBoostingRegressor based on the Gradient Boosting Ensemble Learning Technique using MinMaxScalerfor Feature Rescaling.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Gradient_Boosting_Machine/GradientBoostingRegressor_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, simple, gradientboostingregressor,gradient boosting, ensemble,learning technique,minmaxscalerfor, rescaling",
                        "display_url": "https://siberian.dev/regression/gradient-boosting-machine/gradientboostingregressor-with-minmaxscaler"
                    },
                    {
                        "name": "GradientBoostingRegressor_Normalize.ipynb",
                        "title": "GradientBoostingRegressor with Normalize",
                        "description": "This Code template is for regression analysis using a simple GradientBoostingRegressor based on the Gradient Boosting Ensemble Learning Technique using Normalize for Feature Rescaling.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Gradient_Boosting_Machine/GradientBoostingRegressor_Normalize.ipynb",
                        "keywords": "code template, regression, simple, gradientboostingregressor,gradient boosting, ensemble,learning technique,normalize, rescaling",
                        "display_url": "https://siberian.dev/regression/gradient-boosting-machine/gradientboostingregressor-with-normalize"
                    },
                    {
                        "name": "GradientBoostingRegressor_RobustScaler.ipynb",
                        "title": "GradientBoostingRegressor with RobustScaler",
                        "description": "This Code template is for regression analysis using a simple GradientBoostingRegressor based on the Gradient Boosting Ensemble Learning Technique using RobustScaler for Feature Rescaling.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Gradient_Boosting_Machine/GradientBoostingRegressor_RobustScaler.ipynb",
                        "keywords": "code template, regression, simple, gradientboostingregressor,gradient boosting, ensemble,learning technique,robustscaler, rescaling",
                        "display_url": "https://siberian.dev/regression/gradient-boosting-machine/gradientboostingregressor-with-robustscaler"
                    },
                    {
                        "name": "GradientBoostingRegressor_Scale.ipynb",
                        "title": "GradientBoostingRegressor with Scale",
                        "description": "This Code template is for regression analysis using a simple GradientBoostingRegressor based on the Gradient Boosting Ensemble Learning Technique using Scale for Feature Rescaling.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Gradient_Boosting_Machine/GradientBoostingRegressor_Scale.ipynb",
                        "keywords": "code template, regression, simple, gradientboostingregressor,gradient boosting, ensemble,learning technique,scale, rescaling",
                        "display_url": "https://siberian.dev/regression/gradient-boosting-machine/gradientboostingregressor-with-scale"
                    },
                    {
                        "name": "GradientBoostingRegressor_StandardScaler.ipynb",
                        "title": "Gradient Boosting Regressor with StandardScaler",
                        "description": "This Code template is for regression analysis using a simple GradientBoostingRegressor based on the Gradient Boosting Ensemble Learning Technique using StandardScaler for Feature Rescaling.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Gradient_Boosting_Machine/GradientBoostingRegressor_StandardScaler.ipynb",
                        "keywords": "code template, regression, simple, gradientboostingregressor,gradient boosting, ensemble,learning technique,standardscaler, rescaling",
                        "display_url": "https://siberian.dev/regression/gradient-boosting-machine/gradient-boosting-regressor-with-standardscaler"
                    }
                ]
            },
            {
                "name": "Histogram_Based_Gradient_Boosting_Trees",
                "models": [
                    {
                        "name": "HistGradientBoostingRegressor.ipynb",
                        "title": "Histogram based Gradient Boosting Regression",
                        "description": "This Code template is for the regression analysis using a simple Histogram based Gradient Boosting Trees Regressor. This estimator is much faster than GradientBoostingRegressor for big datasets.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingRegressor.ipynb",
                        "keywords": "code template, regression, simple, histogram,gradient boosting, trees, regressor, estimator, faster, gradientboostingregressor, datasets",
                        "display_url": "https://siberian.dev/regression/histogram-based-gradient-boosting-trees/histogram-based-gradient-boosting-regression"
                    },
                    {
                        "name": "HistGradientBoostingRegressor_MinMaxScaler.ipynb",
                        "title": "Histogram based Gradient Boosting Regression with MinMaxScaler",
                        "description": "This Code template is for the regression analysis using a simple Histogram based Gradient Boosting Trees Regressor and the feature rescaling technique MinMaxScaler .",
                        "URL": "https://cdn.siberian.dev/code/Regression/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingRegressor_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, simple, histogram,gradient boosting, trees, regressor, rescaling technique, minmaxscaler,",
                        "display_url": "https://siberian.dev/regression/histogram-based-gradient-boosting-trees/histogram-based-gradient-boosting-regression-with-minmaxscaler"
                    },
                    {
                        "name": "HistGradientBoostingRegressor_Normalize.ipynb",
                        "title": "Histogram based Gradient Boosting Regression with Normalize",
                        "description": "This Code template is for the regression analysis using a simple Histogram based Gradient Boosting Trees Regressor and the feature rescaling technique Normalizer .",
                        "URL": "https://cdn.siberian.dev/code/Regression/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingRegressor_Normalize.ipynb",
                        "keywords": "code template, regression, simple, histogram,gradient boosting, trees, regressor, rescaling technique, normalizer,",
                        "display_url": "https://siberian.dev/regression/histogram-based-gradient-boosting-trees/histogram-based-gradient-boosting-regression-with-normalize"
                    },
                    {
                        "name": "HistGradientBoostingRegressor_RobustScaler.ipynb",
                        "title": "Histogram based Gradient Boosting Regression with RobustScaler",
                        "description": "This Code template is for the regression analysis using a simple Histogram based Gradient Boosting Trees Regressor and the feature rescaling technique RobustScaler .",
                        "URL": "https://cdn.siberian.dev/code/Regression/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingRegressor_RobustScaler.ipynb",
                        "keywords": "code template, regression, simple, histogram,gradient boosting, trees, regressor, rescaling technique, robustscaler,",
                        "display_url": "https://siberian.dev/regression/histogram-based-gradient-boosting-trees/histogram-based-gradient-boosting-regression-with-robustscaler"
                    },
                    {
                        "name": "HistGradientBoostingRegressor_Scale.ipynb",
                        "title": "Histogram based Gradient Boosting Regression with Scale",
                        "description": "This Code template is for the regression analysis using a simple Histogram based Gradient Boosting Trees Regressor and the feature rescaling technique Scale.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingRegressor_Scale.ipynb",
                        "keywords": "code template, regression, simple, histogram,gradient boosting, trees, regressor, rescaling technique, scale",
                        "display_url": "https://siberian.dev/regression/histogram-based-gradient-boosting-trees/histogram-based-gradient-boosting-regression-with-scale"
                    },
                    {
                        "name": "HistGradientBoostingRegressor_StandardScaler.ipynb",
                        "title": "Histogram based Gradient Boosting Regression with StandardScaler",
                        "description": "This Code template is for the regression analysis using a simple Histogram based Gradient Boosting Trees Regressor and the feature rescaling technique StandardScaler .",
                        "URL": "https://cdn.siberian.dev/code/Regression/Histogram_Based_Gradient_Boosting_Trees/HistGradientBoostingRegressor_StandardScaler.ipynb",
                        "keywords": "code template, regression, simple, histogram,gradient boosting, trees, regressor, rescaling technique, standardscaler,",
                        "display_url": "https://siberian.dev/regression/histogram-based-gradient-boosting-trees/histogram-based-gradient-boosting-regression-with-standardscaler"
                    }
                ]
            },
            {
                "name": "k-Nearest_Neighbor",
                "models": [
                    {
                        "name": "KNeighborsRegressor.ipynb",
                        "title": "K-Nearest Neighbor Regressor",
                        "description": "This Code template is for the regression analysis using a simple KNeighborsRegressor based on the K-Nearest Neighbors algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor.ipynb",
                        "keywords": "code template, regression, simple, kneighborsregressor,knearest neighbors,",
                        "display_url": "https://siberian.dev/regression/k-nearest-neighbor/k-nearest-neighbor-regressor"
                    },
                    {
                        "name": "KNeighborsRegressor_MinMaxScaler.ipynb",
                        "title": "K-Nearest Neighbor Regressor with MinMax Scaler",
                        "description": "This Code template is for the regression analysis using a simple KNeighborsRegressor based on the K-Nearest Neighbors algorithm and feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, simple, kneighborsregressor,knearest neighbors,rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/k-nearest-neighbor/k-nearest-neighbor-regressor-with-minmax-scaler"
                    },
                    {
                        "name": "KNeighborsRegressor_Normalize.ipynb",
                        "title": "K-Nearest Neighbor Regressor with Normalize",
                        "description": "This Code template is for the regression analysis using a simple KNeighborsRegressor based on the K-Nearest Neighbors algorithm using feature scaling via Normalizer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_Normalize.ipynb",
                        "keywords": "code template, regression, simple, kneighborsregressor,knearest neighbors,scaling,normalizer",
                        "display_url": "https://siberian.dev/regression/k-nearest-neighbor/k-nearest-neighbor-regressor-with-normalize"
                    },
                    {
                        "name": "KNeighborsRegressor_Normalize_PolynomialFeatures.ipynb",
                        "title": "KNeighborsRegressor with Normalize & PolynomialFeatures",
                        "description": "This Code template is for the regression analysis using a simple KNeighborsRegressor where separate rescaling is done using Normalize and feature transformation is done using PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, simple, kneighborsregressor, rescaling,normalize, data tranformation,polynomials, pipeline",
                        "display_url": "https://siberian.dev/regression/k-nearest-neighbor/kneighborsregressor-with-normalize-&-polynomialfeatures"
                    },
                    {
                        "name": "KNeighborsRegressor_Normalize_PowerTransformer.ipynb",
                        "title": "KNeighborsRegressor with Normalize and PowerTransformer",
                        "description": "This Code template is for the regression analysis using a simple KNeighborsRegressor where separate rescaling is done using Normalize and feature transformation is done using PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_Normalize_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, kneighborsregressor, rescaling,normalize, data tranformation,powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/k-nearest-neighbor/kneighborsregressor-with-normalize-and-powertransformer"
                    },
                    {
                        "name": "KNeighborsRegressor_Normalize_QuantileTransformer.ipynb",
                        "title": "K-Nearest Neighbor Regressor with Normalize and QuantileTransformer",
                        "description": "This Code template is for the regression analysis using a simple KNeighborsRegressor where separate rescaling is done using Normalize and feature transformation is done using QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_Normalize_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, simple, kneighborsregressor, rescaling,normalize, data tranformation,quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/k-nearest-neighbor/k-nearest-neighbor-regressor-with-normalize-and-quantiletransformer"
                    },
                    {
                        "name": "KNeighborsRegressor_PolynomialFeatures.ipynb",
                        "title": "K-Nearest Neighbor Regressor with Polynomial Features",
                        "description": "This Code template is for the regression analysis using a simple KNeighborsRegressor where feature transformation is done using Polynomial features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, simple, kneighborsregressor, data tranformation,polynomial, s, pipeline",
                        "display_url": "https://siberian.dev/regression/k-nearest-neighbor/k-nearest-neighbor-regressor-with-polynomial-features"
                    },
                    {
                        "name": "KNeighborsRegressor_PowerTransformer.ipynb",
                        "title": "K-Nearest Neighbor Regressor with Power Transformer",
                        "description": "This Code template is for the regression analysis using a simple KNeighborsRegressor where feature transformation is done using PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, kneighborsregressor, data tranformation,powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/k-nearest-neighbor/k-nearest-neighbor-regressor-with-power-transformer"
                    },
                    {
                        "name": "KNeighborsRegressor_QuantileTransformer.ipynb",
                        "title": "K-Nearest Neighbor Regressor with Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a simple KNeighborsRegressor where feature transformation is done using Quantile Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, simple, kneighborsregressor, data tranformation,quantile transformer, pipeline",
                        "display_url": "https://siberian.dev/regression/k-nearest-neighbor/k-nearest-neighbor-regressor-with-quantile-transformer"
                    },
                    {
                        "name": "KNeighborsRegressor_RobustScaler.ipynb",
                        "title": "K-Nearest Neighbor Regressor with Robust Scaler",
                        "description": "This Code template is for the regression analysis using a simple KNeighborsRegressor based on the K-Nearest Neighbors algorithm and feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_RobustScaler.ipynb",
                        "keywords": "code template, regression, simple, kneighborsregressor,knearest neighbors,rescaling technique, robustscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/k-nearest-neighbor/k-nearest-neighbor-regressor-with-robust-scaler"
                    },
                    {
                        "name": "KNeighborsRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "title": "KNeighborsRegressor with RobustScaler & QuantileTransformer",
                        "description": "This Code template is for the regression analysis using a simple KNeighborsRegressor where rescaling method used is RobustScaler and feature transformation is done using Quantile Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, simple, kneighborsregressor, rescaling, method, robustscaler, data tranformation,quantile transformer, pipeline",
                        "display_url": "https://siberian.dev/regression/k-nearest-neighbor/kneighborsregressor-with-robustscaler-&-quantiletransformer"
                    },
                    {
                        "name": "KNeighborsRegressor_Scale.ipynb",
                        "title": "K-Nearest Neighbor Regressor with Scale",
                        "description": "This Code template is for the regression analysis using a simple KNeighborsRegressor based on the K-Nearest Neighbors algorithm using feature scaling via Scale.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_Scale.ipynb",
                        "keywords": "code template, regression, simple, kneighborsregressor,knearest neighbors,scaling,scale",
                        "display_url": "https://siberian.dev/regression/k-nearest-neighbor/k-nearest-neighbor-regressor-with-scale"
                    },
                    {
                        "name": "KNeighborsRegressor_Scale_PolynomialFeatures.ipynb",
                        "title": "KNeighborsRegressor with Scale & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a simple KNeighborsRegressor with PolynomialFeatures as Feature Transformation Technique, rescaling technique Scaling in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_Scale_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, simple, kneighborsregressor, polynomials, data tranformation technique, rescaling technique, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/k-nearest-neighbor/kneighborsregressor-with-scale-&-polynomial-features"
                    },
                    {
                        "name": "KNeighborsRegressor_Scale_PowerTransformer.ipynb",
                        "title": "KNeighborsRegressor with Scale & Power Transformer",
                        "description": "This Code template is for the regression analysis using a simple KNeighborsRegressor with Power Transformer as Feature Transformation Technique, rescaling technique Scaling in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, kneighborsregressor, power, transformer, data tranformation technique, rescaling technique, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/k-nearest-neighbor/kneighborsregressor-with-scale-&-power-transformer"
                    },
                    {
                        "name": "KNeighborsRegressor_StandardScaler.ipynb",
                        "title": "K-Nearest Neighbor Regressor with StandardScaler",
                        "description": "This Code template is for the regression analysis using a simple KNeighborsRegressor based on the K-Nearest Neighbors algorithm and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_StandardScaler.ipynb",
                        "keywords": "code template, regression, simple, kneighborsregressor,knearest neighbors,rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/k-nearest-neighbor/k-nearest-neighbor-regressor-with-standardscaler"
                    },
                    {
                        "name": "KNeighborsRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "KNeighborsRegressor with StandardScaler & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a simple KNeighborsRegressor where rescaling method used is StandardScaler and feature transformation is done using Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, simple, kneighborsregressor, rescaling, method, standardscaler, data tranformation,polynomial, s, pipeline",
                        "display_url": "https://siberian.dev/regression/k-nearest-neighbor/kneighborsregressor-with-standardscaler-&-polynomial-features"
                    },
                    {
                        "name": "KNeighborsRegressor_StandardScaler_PowerTransformer.ipynb",
                        "title": "KNeighborsRegressor with StandardScaler & Power Transformer",
                        "description": "This Code template is for the regression analysis using a simple KNeighborsRegressor where rescaling method used is StandardScaler and feature transformation is done using Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, kneighborsregressor, rescaling, method, standardscaler, data tranformation,power, transformer, pipeline",
                        "display_url": "https://siberian.dev/regression/k-nearest-neighbor/kneighborsregressor-with-standardscaler-&-power-transformer"
                    },
                    {
                        "name": "KNeighborsRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "title": "KNeighborsRegressor with StandardScaler & QuantileTransformer",
                        "description": "This Code template is for the regression analysis using a simple KNeighborsRegressor where rescaling method used is StandardScaler and feature transformation is done using Quantile Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/k-Nearest_Neighbor/KNeighborsRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, simple, kneighborsregressor, rescaling, method, standardscaler, data tranformation,quantile transformer, pipeline",
                        "display_url": "https://siberian.dev/regression/k-nearest-neighbor/kneighborsregressor-with-standardscaler-&-quantiletransformer"
                    }
                ]
            },
            {
                "name": "LightGBM",
                "models": [
                    {
                        "name": "LGBMRegressor.ipynb",
                        "title": "Simple LGBMRegressor",
                        "description": "This Code template is for the regression analysis using a simple LGBMRegressor without any scaling techniques or pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/LightGBM/LGBMRegressor.ipynb",
                        "keywords": "code template, regression, simple, lgbmregressor, scaling, techniques, pipeline",
                        "display_url": "https://siberian.dev/regression/lightgbm/simple-lgbmregressor"
                    },
                    {
                        "name": "LGBMRegressor_Dataset.ipynb",
                        "title": "LGBM Regression using Dataset",
                        "description": "This Code template is for regression analysis using LGBM along with Dataset.Dataset is an internal data structure that is used by the LGBM framework. It is optimized for both memory efficiency and training speed.",
                        "URL": "https://cdn.siberian.dev/code/Regression/LightGBM/LGBMRegressor_Dataset.ipynb",
                        "keywords": "code template, regression, lgbm, datasetdataset, internal, data, structure, lgbm, framework, optimized, memory, efficiency, training, speed",
                        "display_url": "https://siberian.dev/regression/lightgbm/lgbm-regression-using-dataset"
                    },
                    {
                        "name": "LGBMRegressor_MinMaxScaler.ipynb",
                        "title": "LGBMRegressor with MinMaxScaler",
                        "description": "This Code template is for the regression analysis using a simple LGBMRegressor with scaling technique MinMaxScaler.",
                        "URL": "https://cdn.siberian.dev/code/Regression/LightGBM/LGBMRegressor_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, simple, lgbmregressor, scaling technique, minmaxscaler",
                        "display_url": "https://siberian.dev/regression/lightgbm/lgbmregressor-with-minmaxscaler"
                    },
                    {
                        "name": "LGBMRegressor_Normalize.ipynb",
                        "title": "LGBMRegressor with Normalize",
                        "description": "This Code template is for regression analysis using the LGBMRegressor where rescaling method used is Normalizer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/LightGBM/LGBMRegressor_Normalize.ipynb",
                        "keywords": "code template, regression, lgbmregressor, rescaling, method, normalizer",
                        "display_url": "https://siberian.dev/regression/lightgbm/lgbmregressor-with-normalize"
                    },
                    {
                        "name": "LGBMRegressor_RobustScaler.ipynb",
                        "title": "LGBMRegressor with RobustScaler",
                        "description": "This Code template is for regression analysis using the LGBMRegressor where rescaling method used is RobustScaler.",
                        "URL": "https://cdn.siberian.dev/code/Regression/LightGBM/LGBMRegressor_RobustScaler.ipynb",
                        "keywords": "code template, regression, lgbmregressor, rescaling, method, robustscaler",
                        "display_url": "https://siberian.dev/regression/lightgbm/lgbmregressor-with-robustscaler"
                    }
                ]
            },
            {
                "name": "Linear_Models",
                "models": [
                    {
                        "name": "ARDRegressor.ipynb",
                        "title": "Simple ARDRegressor",
                        "description": "This Code template is for regression analysis using the ARDRegressor.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor.ipynb",
                        "keywords": "code template, regression, ardregressor",
                        "display_url": "https://siberian.dev/regression/linear-models/simple-ardregressor"
                    },
                    {
                        "name": "ARDRegressor_MinMaxScaler.ipynb",
                        "title": "ARDRegressor with MinMaxScaler",
                        "description": "This Code template is for regression analysis using the ARDRegressor where rescaling method used is MinMaxScaler.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, ardregressor, rescaling, method, minmaxscaler",
                        "display_url": "https://siberian.dev/regression/linear-models/ardregressor-with-minmaxscaler"
                    },
                    {
                        "name": "ARDRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "ARDRegressor with MinMaxScaler & Polynomial Features",
                        "description": "This Code template is for regression analysis using ARDRegressor algorithm with MinMaxScaler and feature transformation technique Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, ardregressor,minmaxscaler, data tranformation technique, polynomial, s, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/ardregressor-with-minmaxscaler-&-polynomial-features"
                    },
                    {
                        "name": "ARDRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "ARDRegressor with MinMaxScaler & Power Transformer",
                        "description": "This Code template is for regression analysis using ARDRegressor algorithm with MinMaxScaler and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, ardregressor,minmaxscaler, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/ardregressor-with-minmaxscaler-&-power-transformer"
                    },
                    {
                        "name": "ARDRegressor_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "ARDRegressor with MinMaxScaler & Quantile Transformer",
                        "description": "This Code template is for regression analysis using ARDRegressor algorithm with MinMaxScaler and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, ardregressor,minmaxscaler, data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/ardregressor-with-minmaxscaler-&-quantile-transformer"
                    },
                    {
                        "name": "ARDRegressor_Normalize.ipynb",
                        "title": "ARDRegressor with Normalize",
                        "description": "This Code template is for regression analysis using the ARDRegressor where rescaling method used is Normalize.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_Normalize.ipynb",
                        "keywords": "code template, regression, ardregressor, rescaling, method, normalize",
                        "display_url": "https://siberian.dev/regression/linear-models/ardregressor-with-normalize"
                    },
                    {
                        "name": "ARDRegressor_Normalize_PolynomialFeatures.ipynb",
                        "title": "ARDRegressor with Normalize & Polynomial Features",
                        "description": "This Code template is for regression analysis using ARDRegressor algorithm with rescaling technique Normalize and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, ardregressor,rescaling technique, normalize, data tranformation technique, polynomials, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/ardregressor-with-normalize-&-polynomial-features"
                    },
                    {
                        "name": "ARDRegressor_Normalize_PowerTransformer.ipynb",
                        "title": "ARDRegressor with Normalize & Power Transformer",
                        "description": "This Code template is for regression analysis using ARDRegressor algorithm with rescaling technique Normalize and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_Normalize_PowerTransformer.ipynb",
                        "keywords": "code template, regression, ardregressor,rescaling technique, normalize, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/ardregressor-with-normalize-&-power-transformer"
                    },
                    {
                        "name": "ARDRegressor_PolynomialFeatures.ipynb",
                        "title": "ARDRegressor with PolynomialFeatures",
                        "description": "This Code template is for regression analysis using the ARDRegressor with Feature Transformation technique PolynomialFeatures.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, ardregressor, data tranformation technique, polynomials",
                        "display_url": "https://siberian.dev/regression/linear-models/ardregressor-with-polynomialfeatures"
                    },
                    {
                        "name": "ARDRegressor_PowerTransformer.ipynb",
                        "title": "ARDRegressor with PowerTransformer",
                        "description": "This Code template is for regression analysis using the ARDRegressor with Feature Transformation technique PowerTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_PowerTransformer.ipynb",
                        "keywords": "code template, regression, ardregressor, data tranformation technique, powertransformer",
                        "display_url": "https://siberian.dev/regression/linear-models/ardregressor-with-powertransformer"
                    },
                    {
                        "name": "ARDRegressor_QuantileTransformer.ipynb",
                        "title": "ARDRegressor with PowerTransformer",
                        "description": "This Code template is for regression analysis using the ARDRegressor with Feature Transformation technique QuantileTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, ardregressor, data tranformation technique, quantiletransformer",
                        "display_url": "https://siberian.dev/regression/linear-models/ardregressor-with-powertransformer"
                    },
                    {
                        "name": "ARDRegressor_RobustScaler.ipynb",
                        "title": "ARDRegressor with RobustScaler",
                        "description": "This Code template is for regression analysis using the ARDRegressor where rescaling method used is RobustScaler.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_RobustScaler.ipynb",
                        "keywords": "code template, regression, ardregressor, rescaling, method, robustscaler",
                        "display_url": "https://siberian.dev/regression/linear-models/ardregressor-with-robustscaler"
                    },
                    {
                        "name": "ARDRegressor_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "ARDRegressor with RobustScaler & Polynomial Features",
                        "description": "This Code template is for regression analysis using ARDRegressor algorithm with RobustScaler and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, ardregressor,robustscaler, data tranformation technique, polynomials, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/ardregressor-with-robustscaler-&-polynomial-features"
                    },
                    {
                        "name": "ARDRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "title": "ARDRegressor with RobustScaler & Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a ARDRegressor with feature transformation technique Quantile Transformer and feature rescaling technique RobustScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, ardregressor, data tranformation technique, quantile transformer, rescaling technique, robustscaler",
                        "display_url": "https://siberian.dev/regression/linear-models/ardregressor-with-robustscaler-&-quantile-transformer"
                    },
                    {
                        "name": "ARDRegressor_Scale.ipynb",
                        "title": "ARDRegressor with Scale",
                        "description": "This Code template is for Regression tasks using a ARDRegressor and feature rescaling technique is Scale.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_Scale.ipynb",
                        "keywords": "code template, regression,ardregressor, rescaling technique, scale",
                        "display_url": "https://siberian.dev/regression/linear-models/ardregressor-with-scale"
                    },
                    {
                        "name": "ARDRegressor_Scale_PolynomialFeatures.ipynb",
                        "title": "ARDRegressor with Scale & Polynomial Features",
                        "description": "This Code template is for regression analysis using the ARDRegressor with data rescaling technique Scale separately and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_Scale_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, ardregressor, data rescaling technique, scale, separately, data tranformation technique, polynomials, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/ardregressor-with-scale-&-polynomial-features"
                    },
                    {
                        "name": "ARDRegressor_StandardScaler.ipynb",
                        "title": "ARDRegressor with StandardScaler",
                        "description": "This Code template is for regression analysis using the ARDRegressor where rescaling method used is StandardScaler.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_StandardScaler.ipynb",
                        "keywords": "code template, regression, ardregressor, rescaling, method, standardscaler",
                        "display_url": "https://siberian.dev/regression/linear-models/ardregressor-with-standardscaler"
                    },
                    {
                        "name": "ARDRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "ARDRegressor with StandardScaler & Polynomial Features",
                        "description": "This Code template is for regression analysis using ARDRegressor algorithm with StandardScaler and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, ardregressor,standardscaler, data tranformation technique, polynomials, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/ardregressor-with-standardscaler-&-polynomial-features"
                    },
                    {
                        "name": "ARDRegressor_StandardScaler_PowerTransformer.ipynb",
                        "title": "ARDRegressor with StandardScaler & PowerTransformer",
                        "description": "This Code template is for regression analysis using ARDRegressor algorithm with StandardScaler and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, ardregressor,standardscaler, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/ardregressor-with-standardscaler-&-powertransformer"
                    },
                    {
                        "name": "ARDRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "title": "ARDRegressor with StandardScaler & Quantile Transformer",
                        "description": "This Code template is for regression analysis using ARDRegressor algorithm with StandardScaler and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ARDRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, ardregressor,standardscaler, data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/ardregressor-with-standardscaler-&-quantile-transformer"
                    },
                    {
                        "name": "BayesianRidgeRegression.ipynb",
                        "title": "Bayesian Ridge Regression",
                        "description": "This Code template is for the regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression.ipynb",
                        "keywords": "code template, regression, simple, bayesian, ridge, regression,bayesian, regression, approach",
                        "display_url": "https://siberian.dev/regression/linear-models/bayesian-ridge-regression"
                    },
                    {
                        "name": "BayesianRidgeRegression_MinMaxScaler.ipynb",
                        "title": "BayesianRidgeRegression with MinMaxScaler",
                        "description": "This Code template is for the regression analysis using a Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, bayesian, ridge, regression,bayesian, regression, approach, rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/bayesianridgeregression-with-minmaxscaler"
                    },
                    {
                        "name": "BayesianRidgeRegression_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "BayesianRidgeRegression with MinMaxScaler & Polynomial Featuress",
                        "description": "This Code template is for the regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique MinMaxScaler and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, simple, bayesian, ridge, regression,bayesian, regression, approach, rescaling technique, minmaxscaler, data tranformation technique, polynomials, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/bayesianridgeregression-with-minmaxscaler-&-polynomial-featuress"
                    },
                    {
                        "name": "BayesianRidgeRegression_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "BayesianRidgeRegression with MinMaxScaler & Power Transformer",
                        "description": "This Code template is for the regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique MinMaxScaler and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, bayesian, ridge, regression,bayesian, regression, approach, rescaling technique, minmaxscaler, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/bayesianridgeregression-with-minmaxscaler-&-power-transformer"
                    },
                    {
                        "name": "BayesianRidgeRegression_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "BayesianRidgeRegression with MinMaxScaler & QuantileTransformer",
                        "description": "This Code template is for the regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique MinMaxScaler and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, simple, bayesian, ridge, regression,bayesian, regression, approach, rescaling technique, minmaxscaler, data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/bayesianridgeregression-with-minmaxscaler-&-quantiletransformer"
                    },
                    {
                        "name": "BayesianRidgeRegression_Normalize.ipynb",
                        "title": "BayesianRidgeRegression with Normalize",
                        "description": "This Code template is for the regression analysis using a Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique Normalize.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_Normalize.ipynb",
                        "keywords": "code template, regression, bayesian, ridge, regression,bayesian, regression, approach, rescaling technique, normalize",
                        "display_url": "https://siberian.dev/regression/linear-models/bayesianridgeregression-with-normalize"
                    },
                    {
                        "name": "BayesianRidgeRegression_Normalize_PolynomialFeatures.ipynb",
                        "title": "BayesianRidgeRegression with Normalize & Polynomial Features",
                        "description": "This code template can be used for the regression analysis using BayesianRidgeRegression Algorithm along with Normalize for data Rescaling separately and Polynomial features for Feature Transformation in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, bayesianridgeregression,normalize,data rescaling, separately, polynomial, s, data tranformation, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/bayesianridgeregression-with-normalize-&-polynomial-features"
                    },
                    {
                        "name": "BayesianRidgeRegression_PolynomialFeatures.ipynb",
                        "title": "BayesianRidgeRegression with Polynomial Features",
                        "description": "This Code template is for the regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, simple, bayesian, ridge, regression,bayesian, regression, approach, data tranformation technique, polynomials, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/bayesianridgeregression-with-polynomial-features"
                    },
                    {
                        "name": "BayesianRidgeRegression_PowerTransformer.ipynb",
                        "title": "BayesianRidgeRegression with Power Transformer",
                        "description": "This Code template is for the regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach and feature transformation technique Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, bayesian, ridge, regression,bayesian, regression, approach, data tranformation technique, power, transformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/bayesianridgeregression-with-power-transformer"
                    },
                    {
                        "name": "BayesianRidgeRegression_QuantileTransformer.ipynb",
                        "title": "BayesianRidgeRegression with Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach and feature transformation technique Quantile Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, simple, bayesian, ridge, regression,bayesian, regression, approach, data tranformation technique, quantile transformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/bayesianridgeregression-with-quantile-transformer"
                    },
                    {
                        "name": "BayesianRidgeRegression_RobustScaler.ipynb",
                        "title": "Bayesian Ridge Regression with RobustScaler",
                        "description": "This Code template is for the regression analysis using a Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_RobustScaler.ipynb",
                        "keywords": "code template, regression, bayesian, ridge, regression,bayesian, regression, approach, rescaling technique, robustscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/bayesian-ridge-regression-with-robustscaler"
                    },
                    {
                        "name": "BayesianRidgeRegression_RobustScaler_PowerTransformer.ipynb",
                        "title": "BayesianRidgeRegression with RobustScaler & Power Transformer",
                        "description": "This Code template is for the regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach with feature rescaling technique RobustScaler and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, bayesian, ridge, regression,bayesian, regression, approach, rescaling technique, robustscaler, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/bayesianridgeregression-with-robustscaler-&-power-transformer"
                    },
                    {
                        "name": "BayesianRidgeRegression_RobustScaler_QuantileTransformer.ipynb",
                        "title": "BayesianRidgeRegression with RobustScaler & QuantileTransformer",
                        "description": "This code template can be used for the regression analysis using BayesianRidgeRegression Algorithm with data Rescaling and Feature Transformation techniques RobustScaler and QuantileTransformer respectively.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, bayesianridgeregression, data rescaling, data tranformation, techniques, robustscaler, quantiletransformer, respectively",
                        "display_url": "https://siberian.dev/regression/linear-models/bayesianridgeregression-with-robustscaler-&-quantiletransformer"
                    },
                    {
                        "name": "BayesianRidgeRegression_Scale.ipynb",
                        "title": "BayesianRidgeRegression with Scale",
                        "description": "This Code template is for the regression analysis using a Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique Scale.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_Scale.ipynb",
                        "keywords": "code template, regression, bayesian, ridge, regression,bayesian, regression, approach, rescaling technique, scale",
                        "display_url": "https://siberian.dev/regression/linear-models/bayesianridgeregression-with-scale"
                    },
                    {
                        "name": "BayesianRidgeRegression_Scale_PolynomialFeatures.ipynb",
                        "title": "BayesianRidgeRegression with Scale & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a BayesianRidge Regressor and the feature rescaling technique Scale & feature transform Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_Scale_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, bayesianridge, regressor, rescaling technique, scale,transform, polynomial, s, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/bayesianridgeregression-with-scale-&-polynomial-features"
                    },
                    {
                        "name": "BayesianRidgeRegression_Scale_PowerTransformer.ipynb",
                        "title": "BayesianRidgeRegression with Scale & Power Transformer",
                        "description": "This Code template is for the regression analysis using a BayesianRidge Regressor and the feature rescaling technique Scale & feature transform Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, regression, bayesianridge, regressor, rescaling technique, scale,transform, power, transformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/bayesianridgeregression-with-scale-&-power-transformer"
                    },
                    {
                        "name": "BayesianRidgeRegression_StandardScaler.ipynb",
                        "title": "Bayesian Ridge Regression with StandardScaler",
                        "description": "This Code template is for the regression analysis using a Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique StandardScaler.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_StandardScaler.ipynb",
                        "keywords": "code template, regression, bayesian, ridge, regression,bayesian, regression, approach, rescaling technique, standardscaler",
                        "display_url": "https://siberian.dev/regression/linear-models/bayesian-ridge-regression-with-standardscaler"
                    },
                    {
                        "name": "BayesianRidgeRegression_StandardScaler_PowerTransformer.ipynb",
                        "title": "BayesianRidgeRegression with StandardScaler & PowerTransformer",
                        "description": "This Code template is for the regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique StandardScaler and feature transformation technique Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, bayesian, ridge, regression,bayesian, regression, approach, rescaling technique, standardscaler, data tranformation technique, power, transformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/bayesianridgeregression-with-standardscaler-&-powertransformer"
                    },
                    {
                        "name": "BayesianRidgeRegression_StandardScaler_QuantileTransformer.ipynb",
                        "title": "BayesianRidgeRegression with StandardScaler & QuantileTransformer",
                        "description": "This Code template is for the regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique StandardScaler and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/BayesianRidgeRegression_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, simple, bayesian, ridge, regression,bayesian, regression, approach, rescaling technique, standardscaler, data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/bayesianridgeregression-with-standardscaler-&-quantiletransformer"
                    },
                    {
                        "name": "ElasticNet.ipynb",
                        "title": "Simple ElasticNet",
                        "description": "This Code template is for Regression tasks using a ElasticNet based on the Regression linear model Technique.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet.ipynb",
                        "keywords": "code template, regression,elasticnet,regression, linear, model, technique",
                        "display_url": "https://siberian.dev/regression/linear-models/simple-elasticnet"
                    },
                    {
                        "name": "ElasticNet_MinMaxScaler.ipynb",
                        "title": "ElasticNet with MinMaxScaler",
                        "description": "This Code template is for the regression analysis using a ElasticNet Regression and the feature rescaling technique MinMaxScaler in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, elasticnet, regression, rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with-minmaxscaler"
                    },
                    {
                        "name": "ElasticNet_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "ElasticNet with MinMaxScaler & Polynomial Features",
                        "description": "This Code template is for Regression tasks using a ElasticNet based on the Regression linear model Technique with MinMaxScaler and feature transformation technique Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression,elasticnet,regression, linear, model, technique, minmaxscaler, data tranformation technique, polynomial, s, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with-minmaxscaler-&-polynomial-features"
                    },
                    {
                        "name": "ElasticNet_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "ElasticNet with MinMaxScaler & Power Transformer",
                        "description": "This Code template is for Regression tasks using a ElasticNet based on the Regression linear model Technique with MinMaxScaler and feature transformation technique PowerTransformer in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression,elasticnet,regression, linear, model, technique, minmaxscaler, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with-minmaxscaler-&-power-transformer"
                    },
                    {
                        "name": "ElasticNet_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "ElasticNet with MinMaxScaler & Quantile Transformer",
                        "description": "This Code template is for Regression tasks using a ElasticNet based on the Regression linear model Technique with MinMaxScaler and feature transformation technique Quantile Transformer in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression,elasticnet,regression, linear, model, technique, minmaxscaler, data tranformation technique, quantile transformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with-minmaxscaler-&-quantile-transformer"
                    },
                    {
                        "name": "ElasticNet_Normalize.ipynb",
                        "title": "ElasticNet with Normalize",
                        "description": "This Code template is for Regression tasks using a ElasticNet based on the Regression linear model Technique and feature rescaling technique Normalize",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_Normalize.ipynb",
                        "keywords": "code template, regression,elasticnet,regression, linear, model, technique, rescaling technique, normalize",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with-normalize"
                    },
                    {
                        "name": "ElasticNet_Normalize_PolynomialFeatures.ipynb",
                        "title": "ElasticNet with Normalize & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a ElasticNet with feature transformation technique Polynomial Features and feature rescaling technique Normalize",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, elasticnet, data tranformation technique, polynomial, s, rescaling technique, normalize",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with-normalize-&-polynomial-features"
                    },
                    {
                        "name": "ElasticNet_Normalize_PowerTransformer.ipynb",
                        "title": "ElasticNet with Normalize & Power Transformer",
                        "description": "This Code template is for the regression analysis using a ElasticNet with feature transformation technique Power Transformer and feature rescaling technique Normalize",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_Normalize_PowerTransformer.ipynb",
                        "keywords": "code template, regression, elasticnet, data tranformation technique, power, transformer, rescaling technique, normalize",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with-normalize-&-power-transformer"
                    },
                    {
                        "name": "ElasticNet_Normalize_QuantileTransformer.ipynb",
                        "title": "ElasticNet with Normalize & Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a ElasticNet with feature transformation technique Quantile Transformer and feature rescaling technique Normalize",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_Normalize_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, elasticnet, data tranformation technique, quantile transformer, rescaling technique, normalize",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with-normalize-&-quantile-transformer"
                    },
                    {
                        "name": "ElasticNet_PolynomialFeatures.ipynb",
                        "title": "ElasticNet with Polynomial Features",
                        "description": "This Code template is for the regression analysis using a ElasticNet Regression and the feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, elasticnet, regression, data tranformation technique, polynomials, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with-polynomial-features"
                    },
                    {
                        "name": "ElasticNet_PowerTransformer.ipynb",
                        "title": "ElasticNet with Power Transformer",
                        "description": "This Code template is for the regression analysis using a ElasticNet and feature transformation technique Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_PowerTransformer.ipynb",
                        "keywords": "code template, regression, elasticnet, data tranformation technique, power, transformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with-power-transformer"
                    },
                    {
                        "name": "ElasticNet_QuantileTransformer.ipynb",
                        "title": "ElasticNet with Quantile Transformer",
                        "description": "This Code template is for Regression tasks using a ElasticNet based on the Regression linear model Technique with feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_QuantileTransformer.ipynb",
                        "keywords": "code template, regression,elasticnet,regression, linear, model, technique, data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with-quantile-transformer"
                    },
                    {
                        "name": "ElasticNet_RobustScaler.ipynb",
                        "title": "ElasticNet with RobustScaler",
                        "description": "This Code template is for the regression analysis using a ElasticNet Regression and the feature rescaling technique RobustScaler in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_RobustScaler.ipynb",
                        "keywords": "code template, regression, elasticnet, regression, rescaling technique, robustscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with-robustscaler"
                    },
                    {
                        "name": "ElasticNet_RobustScaler_PowerTransformer.ipynb",
                        "title": "ElasticNet with RobustScaler & Power Transformer",
                        "description": "This Code template is for regression analysis using the ElasticNet regressor where rescaling method used is RobustScaler and feature transformation is done via Power Transformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, elasticnet, regressor, rescaling, method, robustscaler, data tranformation,power, transformer",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with-robustscaler-&-power-transformer"
                    },
                    {
                        "name": "ElasticNet_RobustScaler_QuantileTransformer.ipynb",
                        "title": "ElasticNet with RobustScaler & Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a ElasticNet with feature transformation technique Quantile Transformer and feature rescaling technique RobustScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, elasticnet, data tranformation technique, quantile transformer, rescaling technique, robustscaler",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with-robustscaler-&-quantile-transformer"
                    },
                    {
                        "name": "ElasticNet_Scale.ipynb",
                        "title": "ElasticNet with Scale",
                        "description": "This Code template is for the regression analysis using a ElasticNet Regression and the feature rescaling technique Scale",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_Scale.ipynb",
                        "keywords": "code template, regression, elasticnet, regression, rescaling technique, scale",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with-scale"
                    },
                    {
                        "name": "ElasticNet_Scale_PolynomialFeatures.ipynb",
                        "title": "ElasticNet with Scale & PolynomialFeatures",
                        "description": "This Code template is for the regression analysis using a ElasticNet with feature transformation technique and feature PolynomialFeatures rescaling technique Scale",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_Scale_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, elasticnet, data tranformation technique,polynomials, rescaling technique, scale",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with-scale-&-polynomialfeatures"
                    },
                    {
                        "name": "ElasticNet_Scale_PowerTransformer.ipynb",
                        "title": "ElasticNet with Scale & PowerTransformer",
                        "description": "This Code template is for the regression analysis using a ElasticNet with feature transformation technique and feature PowerTransformer rescaling technique Scale",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, regression, elasticnet, data tranformation technique,powertransformer, rescaling technique, scale",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with-scale-&-powertransformer"
                    },
                    {
                        "name": "ElasticNet_StandardScaler.ipynb",
                        "title": "ElasticNet with StandardScaler",
                        "description": "This Code template is for the regression analysis using a ElasticNet Regression and the feature rescaling technique StandardScaler in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_StandardScaler.ipynb",
                        "keywords": "code template, regression, elasticnet, regression, rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with-standardscaler"
                    },
                    {
                        "name": "ElasticNet_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "ElasticNet with  StandardScaler and PolynomialFeatures",
                        "description": "This Code template is for Regression tasks using a ElasticNet based on the Regression linear model Technique with feature transformation technique PolynomialFeatures and Data rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression,elasticnet,regression, linear, model, technique, data tranformation technique, polynomials, data rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with--standardscaler-and-polynomialfeatures"
                    },
                    {
                        "name": "ElasticNet_StandardScaler_PowerTransformer.ipynb",
                        "title": "ElasticNet with Standard Scaler & Power Transformer",
                        "description": "This Code template is for Regression tasks using a ElasticNet based on the Regression linear model Technique with StandardScaler and feature transformation technique PowerTransformer in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression,elasticnet,regression, linear, model, technique, standardscaler, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with-standard-scaler-&-power-transformer"
                    },
                    {
                        "name": "ElasticNet_StandardScaler_QuantileTransformer.ipynb",
                        "title": "ElasticNet with RobustScaler & Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a ElasticNet with feature transformation technique Quantile Transformer and feature rescaling technique Standard Scaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/ElasticNet_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, elasticnet, data tranformation technique, quantile transformer, rescaling technique, standard, scaler",
                        "display_url": "https://siberian.dev/regression/linear-models/elasticnet-with-robustscaler-&-quantile-transformer"
                    },
                    {
                        "name": "GammaRegressor.ipynb",
                        "title": "GammaRegressor",
                        "description": "This code template is for the regression analysis using Gamma Regression",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor.ipynb",
                        "keywords": "code template, regression, gamma, regression",
                        "display_url": "https://siberian.dev/regression/linear-models/gammaregressor"
                    },
                    {
                        "name": "GammaRegressor_MinMaxScalar.ipynb",
                        "title": "GammaRegressor with MinMaxScalar",
                        "description": "This code template is for the regression analysis using Gamma Regression via data scaling technique MinMax Scalar",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_MinMaxScalar.ipynb",
                        "keywords": "code template, regression, gamma, regression,data, scaling technique, minmax, scalar",
                        "display_url": "https://siberian.dev/regression/linear-models/gammaregressor-with-minmaxscalar"
                    },
                    {
                        "name": "GammaRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "GammaRegressor with MinMaxScaler & Polynomial Features",
                        "description": "This code template is for the regression analysis using Gamma Regression with MinMaxScaler as Feature Rescaling techinque and PolynomialFeatures as feature transformation technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, gamma, regression, minmaxscaler, rescaling, techinque, polynomials, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/gammaregressor-with-minmaxscaler-&-polynomial-features"
                    },
                    {
                        "name": "GammaRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "GammaRegressor with MinMaxScaler & PowerTransformer",
                        "description": "This code template is for the regression analysis using Gamma Regression with MinMaxScaler as Feature Rescaling techinque and PowerTransformer as feature transformation technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, gamma, regression, minmaxscaler, rescaling, techinque, powertransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/gammaregressor-with-minmaxscaler-&-powertransformer"
                    },
                    {
                        "name": "GammaRegressor_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "GammaRegressor with MinMaxScaler & Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a GammaRegressor with feature transformation technique Quantile Transformer and feature rescaling technique MinMaxScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, gammaregressor, data tranformation technique, quantile transformer, rescaling technique, minmaxscaler",
                        "display_url": "https://siberian.dev/regression/linear-models/gammaregressor-with-minmaxscaler-&-quantile-transformer"
                    },
                    {
                        "name": "GammaRegressor_Normalize.ipynb",
                        "title": "GammaRegressor with Normalize",
                        "description": "This code template is for the regression analysis using Gamma Regression via data scaling technique Normalize",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_Normalize.ipynb",
                        "keywords": "code template, regression, gamma, regression,data, scaling technique, normalize",
                        "display_url": "https://siberian.dev/regression/linear-models/gammaregressor-with-normalize"
                    },
                    {
                        "name": "GammaRegressor_Normalize_QuantileTransformer.ipynb",
                        "title": "GammaRegressor with Normalize & Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a GammaRegressor with feature transformation technique Quantile Transformer and feature rescaling technique Normalize",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_Normalize_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, gammaregressor, data tranformation technique, quantile transformer, rescaling technique, normalize",
                        "display_url": "https://siberian.dev/regression/linear-models/gammaregressor-with-normalize-&-quantile-transformer"
                    },
                    {
                        "name": "GammaRegressor_PolynomialFeatures.ipynb",
                        "title": "GammaRegressor with PolynomialFeatures",
                        "description": "This code template is for the regression analysis using Gamma Regression via feature transformation technique PolynomialFeatures.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, gamma, regression,data tranformation technique, polynomials",
                        "display_url": "https://siberian.dev/regression/linear-models/gammaregressor-with-polynomialfeatures"
                    },
                    {
                        "name": "GammaRegressor_PowerTransformer.ipynb",
                        "title": "GammaRegressor with PowerTransformer",
                        "description": "This code template is for the regression analysis using Gamma Regression with feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_PowerTransformer.ipynb",
                        "keywords": "code template, regression, gamma, regression, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/gammaregressor-with-powertransformer"
                    },
                    {
                        "name": "GammaRegressor_QuantileTransformer.ipynb",
                        "title": "GammaRegressor with QuantileTransformer",
                        "description": "This code template is for the regression analysis using Gamma Regression with feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, gamma, regression, data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/gammaregressor-with-quantiletransformer"
                    },
                    {
                        "name": "GammaRegressor_RobustScalar.ipynb",
                        "title": "GammaRegressor with RobustScalar",
                        "description": "This code template is for the regression analysis using Gamma Regression via data scaling technique RobustScalar",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_RobustScalar.ipynb",
                        "keywords": "code template, regression, gamma, regression,data, scaling technique, robustscalar",
                        "display_url": "https://siberian.dev/regression/linear-models/gammaregressor-with-robustscalar"
                    },
                    {
                        "name": "GammaRegressor_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "GammaRegressor with RobustScaler & Polynomial Features",
                        "description": "This code template is for the regression analysis using Gamma Regression with RobustScaler as Feature Rescaling techinque and Polynomial Features as feature transformation technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, gamma, regression, robustscaler, rescaling, techinque, polynomial, s, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/gammaregressor-with-robustscaler-&-polynomial-features"
                    },
                    {
                        "name": "GammaRegressor_RobustScaler_PowerTransformer.ipynb",
                        "title": "GammaRegressor with RobustScaler & PowerTransformer",
                        "description": "This code template is for the regression analysis using Gamma Regression with RobustScaler as Feature Rescaling techinque and PowerTransformer as feature transformation technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, gamma, regression, robustscaler, rescaling, techinque, powertransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/gammaregressor-with-robustscaler-&-powertransformer"
                    },
                    {
                        "name": "GammaRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "title": "GammaRegressor with RobustScaler & Quantile Transformer",
                        "description": "This code template is for the regression analysis using Gamma Regression with RobustScaler as Feature Rescaling techinque and QuantileTransformer as feature transformation technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, gamma, regression, robustscaler, rescaling, techinque, quantiletransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/gammaregressor-with-robustscaler-&-quantile-transformer"
                    },
                    {
                        "name": "GammaRegressor_Scale.ipynb",
                        "title": "GammaRegressor with Scale",
                        "description": "This Code template is for Regression tasks using a Gamma Regressor and feature rescaling technique is Scale",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_Scale.ipynb",
                        "keywords": "code template, regression,gamma, regressor, rescaling technique, scale",
                        "display_url": "https://siberian.dev/regression/linear-models/gammaregressor-with-scale"
                    },
                    {
                        "name": "GammaRegressor_StandardScalar.ipynb",
                        "title": "GammaRegressor with StandardScalar",
                        "description": "This code template is for the regression analysis using Gamma Regression via data scaling technique Standard Scalar",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_StandardScalar.ipynb",
                        "keywords": "code template, regression, gamma, regression,data, scaling technique, standard, scalar",
                        "display_url": "https://siberian.dev/regression/linear-models/gammaregressor-with-standardscalar"
                    },
                    {
                        "name": "GammaRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "GammaRegressor with StandardScaler and PolynomialFeatures",
                        "description": "This code template is for the regression analysis using Gamma Regression via data rescaling technique StandardScaler and feature transformation technique PolynomialFeatures.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, gamma, regression,data rescaling technique, standardscaler, data tranformation technique, polynomials",
                        "display_url": "https://siberian.dev/regression/linear-models/gammaregressor-with-standardscaler-and-polynomialfeatures"
                    },
                    {
                        "name": "GammaRegressor_StandardScaler_PowerTransformer.ipynb",
                        "title": "GammaRegressor with StandardScaler & Power Transformer",
                        "description": "This Code template is for regression analysis using the GammaRegressor where rescaling method used is StandardScaler and feature transformation is done using PowerTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, gammaregressor, rescaling, method, standardscaler, data tranformation,powertransformer",
                        "display_url": "https://siberian.dev/regression/linear-models/gammaregressor-with-standardscaler-&-power-transformer"
                    },
                    {
                        "name": "GammaRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "title": "GammaRegressor with StandardScaler & Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a GammaRegressor with feature transformation technique Quantile Transformer and feature rescaling technique StandardScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/GammaRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, gammaregressor, data tranformation technique, quantile transformer, rescaling technique, standardscaler",
                        "display_url": "https://siberian.dev/regression/linear-models/gammaregressor-with-standardscaler-&-quantile-transformer"
                    },
                    {
                        "name": "HuberRegressor.ipynb",
                        "title": "HuberRegressor",
                        "description": "This Code template is for the regression analysis using a simple Huber Regressor.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor.ipynb",
                        "keywords": "code template, regression, simple, huber, regressor",
                        "display_url": "https://siberian.dev/regression/linear-models/huberregressor"
                    },
                    {
                        "name": "HuberRegressor_MinMaxScaler.ipynb",
                        "title": "HuberRegressor with MinMaxScaler",
                        "description": "This Code template is for the regression analysis using a Huber Regression and the feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, huber, regression, rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/huberregressor-with-minmaxscaler"
                    },
                    {
                        "name": "HuberRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "HuberRegressor with MinMaxScaler & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a HuberRegressor with feature transformation technique PolynomialFeatures and feature rescaling technique MinMaxScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, huberregressor, data tranformation technique, polynomials, rescaling technique, minmaxscaler",
                        "display_url": "https://siberian.dev/regression/linear-models/huberregressor-with-minmaxscaler-&-polynomial-features"
                    },
                    {
                        "name": "HuberRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "HuberRegressor with MinMaxScaler & Power Transformer",
                        "description": "This Code template is for regression analysis using HuberRegressor algorithm with MinMaxScaler and PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, huberregressor,minmaxscaler, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/huberregressor-with-minmaxscaler-&-power-transformer"
                    },
                    {
                        "name": "HuberRegressor_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "HuberRegressor with MinMaxScaler & Quantile Transformer",
                        "description": "This Code template is for regression analysis using HuberRegressor algorithm with MinMaxScaler for data rescaling and QuantileTransformer for feature transformation in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, huberregressor,minmaxscaler,data rescaling, quantiletransformer, data tranformation, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/huberregressor-with-minmaxscaler-&-quantile-transformer"
                    },
                    {
                        "name": "HuberRegressor_Normalize.ipynb",
                        "title": "HuberRegressor with Normalize",
                        "description": "This Code template is for the regression analysis using a Huber Regression and the feature rescaling technique called Normalization separately.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_Normalize.ipynb",
                        "keywords": "code template, regression, huber, regression, rescaling technique,normalization, separately",
                        "display_url": "https://siberian.dev/regression/linear-models/huberregressor-with-normalize"
                    },
                    {
                        "name": "HuberRegressor_Normalize_PowerTransformer.ipynb",
                        "title": "HuberRegressor with Normalize & Power Transformer",
                        "description": "This Code template is for the regression analysis using a simple Huber Regressor with data rescaling technique Normalize separately and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_Normalize_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, huber, regressor, data rescaling technique, normalize, separately, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/huberregressor-with-normalize-&-power-transformer"
                    },
                    {
                        "name": "HuberRegressor_Normalize_QuantileTransformer.ipynb",
                        "title": "HuberRegressor with Normalize & QuantileTransformer",
                        "description": "This Code template is for the regression analysis using a HuberRegressor with feature transformation technique QuantileTransformer and feature rescaling technique Normalize",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_Normalize_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, huberregressor, data tranformation technique, quantiletransformer, rescaling technique, normalize",
                        "display_url": "https://siberian.dev/regression/linear-models/huberregressor-with-normalize-&-quantiletransformer"
                    },
                    {
                        "name": "HuberRegressor_PolynomialFeatures.ipynb",
                        "title": "HuberRegressor with PolynomialFeatures",
                        "description": "This Code template is for the regression analysis using a simple Huber Regressor with Feature Transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, simple, huber, regressor, data tranformation technique, polynomials, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/huberregressor-with-polynomialfeatures"
                    },
                    {
                        "name": "HuberRegressor_QuantileTransformer.ipynb",
                        "title": "HuberRegressor with Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a simple Huber Regressor with Feature Transformation technique Quantile Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, simple, huber, regressor, data tranformation technique, quantile transformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/huberregressor-with-quantile-transformer"
                    },
                    {
                        "name": "HuberRegressor_RobustScaler.ipynb",
                        "title": "HuberRegressor with RobustScaler",
                        "description": "This Code template is for the regression analysis using a Huber Regression and the feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_RobustScaler.ipynb",
                        "keywords": "code template, regression, huber, regression, rescaling technique, robustscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/huberregressor-with-robustscaler"
                    },
                    {
                        "name": "HuberRegressor_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "HuberRegressor with RobustScaler & Polynomial Features",
                        "description": "This Code template is for regression analysis using HuberRegressor algorithm with RobustScaler and PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, huberregressor,robustscaler, polynomials, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/huberregressor-with-robustscaler-&-polynomial-features"
                    },
                    {
                        "name": "HuberRegressor_RobustScaler_PowerTransformer.ipynb",
                        "title": "HuberRegressor with RobustScaler & Power Transformer",
                        "description": "This Code template is for regression analysis using HuberRegressor algorithm with RobustScaler and PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, huberregressor,robustscaler, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/huberregressor-with-robustscaler-&-power-transformer"
                    },
                    {
                        "name": "HuberRegressor_Scale.ipynb",
                        "title": "HuberRegressor with Scale",
                        "description": "This Code template is for the regression analysis using a Huber Regression and the feature rescaling technique Scale",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_Scale.ipynb",
                        "keywords": "code template, regression, huber, regression, rescaling technique, scale",
                        "display_url": "https://siberian.dev/regression/linear-models/huberregressor-with-scale"
                    },
                    {
                        "name": "HuberRegressor_StandardScaler.ipynb",
                        "title": "HuberRegressorw with StandardScaler",
                        "description": "This Code template is for the regression analysis using a Huber Regression and the feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_StandardScaler.ipynb",
                        "keywords": "code template, regression, huber, regression, rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/huberregressorw-with-standardscaler"
                    },
                    {
                        "name": "HuberRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "HuberRegressor with StandardScaler & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a HuberRegressor with feature transformation technique PolynomialFeatures and feature rescaling technique StandardScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, huberregressor, data tranformation technique, polynomials, rescaling technique, standardscaler",
                        "display_url": "https://siberian.dev/regression/linear-models/huberregressor-with-standardscaler-&-polynomial-features"
                    },
                    {
                        "name": "HuberRegressor_StandardScaler_PowerTransformer.ipynb",
                        "title": "HuberRegressor with StandardScaler & Power Transformer",
                        "description": "This Code template is for regression analysis using the HuberRegressor where rescaling method used is StandardScaler and feature transformation is done using PowerTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, huberregressor, rescaling, method, standardscaler, data tranformation,powertransformer",
                        "display_url": "https://siberian.dev/regression/linear-models/huberregressor-with-standardscaler-&-power-transformer"
                    },
                    {
                        "name": "HuberRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "title": "HuberRegressor with StandardScaler & QuantileTransformer",
                        "description": "This Code template is for the regression analysis using a HuberRegressor with feature transformation technique QuantileTransformer and feature rescaling technique StandardScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/HuberRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, huberregressor, data tranformation technique, quantiletransformer, rescaling technique, standardscaler",
                        "display_url": "https://siberian.dev/regression/linear-models/huberregressor-with-standardscaler-&-quantiletransformer"
                    },
                    {
                        "name": "Lars.ipynb",
                        "title": "Least Angle Regression",
                        "description": "This Code template is for the regression analysis using a simple Lars, also known as the Least Angle Regression model. Lars is a regression algorithm for high-dimensional data.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars.ipynb",
                        "keywords": "code template, regression, simple, lars, angle, regression, model, lars, regression,highdimensional, data",
                        "display_url": "https://siberian.dev/regression/linear-models/least-angle-regression"
                    },
                    {
                        "name": "Lars_MinMaxScaler.ipynb",
                        "title": "Least Angle Regression with MinMaxScaler",
                        "description": "This Code template is for the regression analysis using a simple Lars and MinMax scaler. Lars, also known as the Least Angle Regression model. Lars is a regression algorithm for high-dimensional data.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, simple, lars, minmax, scaler, lars, angle, regression, model, lars, regression,highdimensional, data",
                        "display_url": "https://siberian.dev/regression/linear-models/least-angle-regression-with-minmaxscaler"
                    },
                    {
                        "name": "Lars_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Lars with MinMaxScaler & Power Transformer",
                        "description": "This Code template is for the regression analysis using a LassoLars Regression and the feature rescaling technique MinMaxScaler along with Power Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, lassolars, regression, rescaling technique, minmaxscaler, power, transformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lars-with-minmaxscaler-&-power-transformer"
                    },
                    {
                        "name": "Lars_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Least Angle Regression with MinMaxScaler and Quantile Transformer",
                        "description": "This Code template is for the regression analysis using LARS Regressor and the feature transformation technique Quantile Transformer and MinMax Scaling rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, lars, regressor, data tranformation technique, quantile transformer, minmax, scaling, rescaling technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/least-angle-regression-with-minmaxscaler-and-quantile-transformer"
                    },
                    {
                        "name": "Lars_Normalize.ipynb",
                        "title": "Least Angle Regression with Normalize",
                        "description": "This Code template is for the regression analysis using a simple Lars and Normalize. Lars, also known as the Least Angle Regression model. Lars is a regression algorithm for high-dimensional data.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_Normalize.ipynb",
                        "keywords": "code template, regression, simple, lars, normalize, lars, angle, regression, model, lars, regression,highdimensional, data",
                        "display_url": "https://siberian.dev/regression/linear-models/least-angle-regression-with-normalize"
                    },
                    {
                        "name": "Lars_Normalize_PolynomialFeatures.ipynb",
                        "title": "Lars with Scale & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a Lars Regressor and the feature rescaling technique Normalize along with PolynomialFeatures as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, lars, regressor, rescaling technique, normalize, polynomials, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lars-with-scale-&-polynomial-features"
                    },
                    {
                        "name": "Lars_Normalize_PowerTransformer.ipynb",
                        "title": "Lars with Normalize & Power Transformer",
                        "description": "This Code template is for the regression analysis using a Lars Regressor and the feature rescaling technique normalize along with Power Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_Normalize_PowerTransformer.ipynb",
                        "keywords": "code template, regression, lars, regressor, rescaling technique, normalize, power, transformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lars-with-normalize-&-power-transformer"
                    },
                    {
                        "name": "Lars_Normalize_QuantileTransformer.ipynb",
                        "title": "Lars with Normalize & Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a Lars Regressor and the feature rescaling technique normalize along with Quantile Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_Normalize_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, lars, regressor, rescaling technique, normalize, quantile transformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lars-with-normalize-&-quantile-transformer"
                    },
                    {
                        "name": "Lars_PolynomialFeatures.ipynb",
                        "title": "Least Angle Regression with Polynomial Features",
                        "description": "This Code template is for the regression analysis using a simple Lars and Polynomial Features Feature Transformation. Lars, also known as the Least Angle Regression model. Lars is a regression algorithm for high-dimensional data.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, simple, lars, polynomial, s, data tranformation, lars, angle, regression, model, lars, regression,highdimensional, data",
                        "display_url": "https://siberian.dev/regression/linear-models/least-angle-regression-with-polynomial-features"
                    },
                    {
                        "name": "Lars_PowerTransformer.ipynb",
                        "title": "Least Angle Regression with Power Transformer",
                        "description": "This Code template is for the regression analysis using a simple Lars and Poower Transformer Feature Transformation. Lars, also known as the Least Angle Regression model. Lars is a regression algorithm for high-dimensional data.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, lars, poower, transformer, data tranformation, lars, angle, regression, model, lars, regression,highdimensional, data",
                        "display_url": "https://siberian.dev/regression/linear-models/least-angle-regression-with-power-transformer"
                    },
                    {
                        "name": "Lars_QuantileTransformer.ipynb",
                        "title": "Least Angle Regression with Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a simple Lars and Quantile Transformer Feature Transformation. Lars, also known as the Least Angle Regression model. Lars is a regression algorithm for high-dimensional data.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, simple, lars, quantile transformer, data tranformation, lars, angle, regression, model, lars, regression,highdimensional, data",
                        "display_url": "https://siberian.dev/regression/linear-models/least-angle-regression-with-quantile-transformer"
                    },
                    {
                        "name": "Lars_RobustScaler.ipynb",
                        "title": "Least Angle Regression with RobustScaler",
                        "description": "This Code template is for the regression analysis using a simple Lars and Robust scaler. Lars, also known as the Least Angle Regression model. Lars is a regression algorithm for high-dimensional data.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_RobustScaler.ipynb",
                        "keywords": "code template, regression, simple, lars, robust, scaler, lars, angle, regression, model, lars, regression,highdimensional, data",
                        "display_url": "https://siberian.dev/regression/linear-models/least-angle-regression-with-robustscaler"
                    },
                    {
                        "name": "Lars_RobustScaler_PowerTransformer.ipynb",
                        "title": "Least Angle Regression with RobustScaler and Power Transformer",
                        "description": "This Code template is for the regression analysis using LARS Regressor and the feature transformation technique Power Transformer and Robust Scaler rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, lars, regressor, data tranformation technique, power, transformer, robust, scaler, rescaling technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/least-angle-regression-with-robustscaler-and-power-transformer"
                    },
                    {
                        "name": "Lars_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Least Angle Regression with RobustScaler and Quantile Transformer",
                        "description": "This Code template is for the regression analysis using LARS Regressor and the feature transformation technique Quantile Transformer and Robust Scaler rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, lars, regressor, data tranformation technique, quantile transformer, robust, scaler, rescaling technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/least-angle-regression-with-robustscaler-and-quantile-transformer"
                    },
                    {
                        "name": "Lars_Scale.ipynb",
                        "title": "Least Angle Regression with Scale",
                        "description": "This Code template is for the regression analysis using a simple Lars and Scale. Lars, also known as the Least Angle Regression model. Lars is a regression algorithm for high-dimensional data.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_Scale.ipynb",
                        "keywords": "code template, regression, simple, lars, scale, lars, angle, regression, model, lars, regression,highdimensional, data",
                        "display_url": "https://siberian.dev/regression/linear-models/least-angle-regression-with-scale"
                    },
                    {
                        "name": "Lars_Scale_PolynomialFeatures.ipynb",
                        "title": "Lars with Scale & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a Lars Regressor and the feature rescaling technique scale along with PolynomialFeatures as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_Scale_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, lars, regressor, rescaling technique, scale, polynomials, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lars-with-scale-&-polynomial-features"
                    },
                    {
                        "name": "Lars_Scale_QuantileTransformer.ipynb",
                        "title": "Lars with Scale & Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a Lars Regressor and the feature rescaling technique scale along with QuantileTransformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_Scale_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, lars, regressor, rescaling technique, scale, quantiletransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lars-with-scale-&-quantile-transformer"
                    },
                    {
                        "name": "Lars_StandardScaler.ipynb",
                        "title": "Least Angle Regression with StandardScaler",
                        "description": "This Code template is for the regression analysis using a simple Lars and standard scaler. Lars, also known as the Least Angle Regression model. Lars is a regression algorithm for high-dimensional data.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_StandardScaler.ipynb",
                        "keywords": "code template, regression, simple, lars, standard, scaler, lars, angle, regression, model, lars, regression,highdimensional, data",
                        "display_url": "https://siberian.dev/regression/linear-models/least-angle-regression-with-standardscaler"
                    },
                    {
                        "name": "Lars_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Least Angle Regression with StandardScaler and Polynomial Features",
                        "description": "This Code template is for the regression analysis using LARS Regressor and the feature rescaling technique Polynomial Features and Standard Scaling rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, lars, regressor, rescaling technique, polynomial, s, standard, scaling, rescaling technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/least-angle-regression-with-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "Lars_StandardScaler_PowerTransformer.ipynb",
                        "title": "Least Angle Regression with StandardScaler and Power Transformer",
                        "description": "This Code template is for the regression analysis using LARS Regressor and the feature rescaling technique Power Transformer and Standard Scaling rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, lars, regressor, rescaling technique, power, transformer, standard, scaling, rescaling technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/least-angle-regression-with-standardscaler-and-power-transformer"
                    },
                    {
                        "name": "Lars_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Least Angle Regression with StandardScaler and Quantile Transformer",
                        "description": "This Code template is for the regression analysis using LARS Regressor and the feature transformation technique Quantile Transformer and Standard Scaling rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/Lars_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, lars, regressor, data tranformation technique, quantile transformer, standard, scaling, rescaling technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/least-angle-regression-with-standardscaler-and-quantile-transformer"
                    },
                    {
                        "name": "LassoLars.ipynb",
                        "title": "LassoLars Regression",
                        "description": "This Code template is for the regression analysis using a simple LassoLars Regression. It is a lasso model implemented using the LARS algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars.ipynb",
                        "keywords": "code template, regression, simple, lassolars, regression, lasso, model,lars,",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-regression"
                    },
                    {
                        "name": "LassoLars_MinMaxScaler.ipynb",
                        "title": "LassoLars Regression with MinMax Scaler",
                        "description": "This Code template is for the regression analysis using a simple LassoLars Regression. It is a lasso model implemented using the LARS algorithm and feature scaling using MinMax Scaler in a Pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, simple, lassolars, regression, lasso, model,lars,scaling,minmax, scaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-regression-with-minmax-scaler"
                    },
                    {
                        "name": "LassoLars_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "LassoLars with MinMaxScaler & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a LassoLars Regression and the feature rescaling technique MinMaxScaler along with Polynomial Features as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, lassolars, regression, rescaling technique, minmaxscaler, polynomial, s, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-with-minmaxscaler-&-polynomial-features"
                    },
                    {
                        "name": "LassoLars_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "LassoLars with MinMaxScaler and PowerTransformer",
                        "description": "This Code template is for the regression analysis using a LassoLars Regression and the feature rescaling technique MinMaxScaler along with PowerTransformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, lassolars, regression, rescaling technique, minmaxscaler, powertransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-with-minmaxscaler-and-powertransformer"
                    },
                    {
                        "name": "LassoLars_Normalize.ipynb",
                        "title": "LassoLars Regression with Normalization",
                        "description": "This Code template is for the regression analysis using a simple LassoLars Regression. It is a lasso model implemented using the LARS algorithm and feature scaling using Normalization.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_Normalize.ipynb",
                        "keywords": "code template, regression, simple, lassolars, regression, lasso, model,lars,scaling,normalization",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-regression-with-normalization"
                    },
                    {
                        "name": "LassoLars_Normalize_PolynomialFeatures.ipynb",
                        "title": "LassoLars with Normalize & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a simple LassoLars Regression. It is a lasso model implemented using the LARS algorithm with rescaling technique as Normalization and feature transformation technique as Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, simple, lassolars, regression, lasso, model,lars,rescaling technique, normalization, data tranformation technique, polynomial, s, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-with-normalize-&-polynomial-features"
                    },
                    {
                        "name": "LassoLars_Normalize_PowerTransformer.ipynb",
                        "title": "LassoLars with Normalize & Power Transformer",
                        "description": "This Code template is for the regression analysis using a simple LassoLars Regression. It is a lasso model implemented using the LARS algorithm with rescaling technique as Normalization and feature transformation technique as PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_Normalize_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, lassolars, regression, lasso, model,lars,rescaling technique, normalization, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-with-normalize-&-power-transformer"
                    },
                    {
                        "name": "LassoLars_PolynomialFeatures.ipynb",
                        "title": "LassoLars with Polynomial Features",
                        "description": "This Code template is for the LassoLars Regression analysis which is implemented using LARS algorithm along with PolynomialFeatures as a feature transformation technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_PolynomialFeatures.ipynb",
                        "keywords": "code template, lassolars, regression,lars,polynomials, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-with-polynomial-features"
                    },
                    {
                        "name": "LassoLars_PowerTransformer.ipynb",
                        "title": "LassoLars Regression with PowerTransformer",
                        "description": "This Code template is for the regression analysis using a simple LassoLars Regression with Feature Transformation technique PowerTransformer in a pipeline. It is a lasso model implemented using the LARS algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, lassolars, regression, data tranformation technique, powertransformer, pipeline, lasso, model,lars,",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-regression-with-powertransformer"
                    },
                    {
                        "name": "LassoLars_QuantileTransformer.ipynb",
                        "title": "LassoLars with Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a simple LassoLars Regression with Feature Transformation technique QuantileTransformer in a pipeline. It is a lasso model implemented using the LARS algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, simple, lassolars, regression, data tranformation technique, quantiletransformer, pipeline, lasso, model,lars,",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-with-quantile-transformer"
                    },
                    {
                        "name": "LassoLars_RobustScaler.ipynb",
                        "title": "LassoLars Regression with Robust Scaler",
                        "description": "This Code template is for the regression analysis using a simple LassoLars Regression. It is a lasso model implemented using the LARS algorithm and feature scaling using Robust Scaler in a Pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_RobustScaler.ipynb",
                        "keywords": "code template, regression, simple, lassolars, regression, lasso, model,lars,scaling,robust, scaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-regression-with-robust-scaler"
                    },
                    {
                        "name": "LassoLars_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "LassoLars with RobustScaler & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a simple LassoLars Regression. It is a lasso model implemented using the LARS algorithm and feature scaling using Robust Scaler with transfomation technique used as Polynomial Features in a Pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, simple, lassolars, regression, lasso, model,lars,scaling,robust, scaler, transfomation, technique, polynomial, s, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-with-robustscaler-&-polynomial-features"
                    },
                    {
                        "name": "LassoLars_RobustScaler_PowerTransformer.ipynb",
                        "title": "LassoLars with RobustScaler & Power Transformer",
                        "description": "This Code template is for the regression analysis using a simple LassoLars Regression. It is a lasso model implemented using the LARS algorithm and feature scaling using Robust Scaler with transfomation technique used as Power Transformer in a Pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, lassolars, regression, lasso, model,lars,scaling,robust, scaler, transfomation, technique, power, transformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-with-robustscaler-&-power-transformer"
                    },
                    {
                        "name": "LassoLars_RobustScaler_QuantileTransformer.ipynb",
                        "title": "LassoLars with RobustScaler & Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a simple LassoLars Regression. It is a lasso model implemented using the LARS algorithm and feature scaling using Robust Scaler with transfomation technique used as Quantile Transformer in a Pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, simple, lassolars, regression, lasso, model,lars,scaling,robust, scaler, transfomation, technique, quantile transformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-with-robustscaler-&-quantile-transformer"
                    },
                    {
                        "name": "LassoLars_Scale.ipynb",
                        "title": "LassoLars Regression with Scale",
                        "description": "This Code template is for the regression analysis using a simple LassoLars Regression. It is a lasso model implemented using the LARS algorithm and feature scaling.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_Scale.ipynb",
                        "keywords": "code template, regression, simple, lassolars, regression, lasso, model,lars,scaling",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-regression-with-scale"
                    },
                    {
                        "name": "LassoLars_Scale_PowerTransformer.ipynb",
                        "title": "LassoLars with Scale & Power Transformer",
                        "description": "This Code template is for the regression analysis using a simple LassoLars Regression. It is a lasso model implemented using the LARS algorithm with rescaling technique as Scale and feature transformation technique as PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, lassolars, regression, lasso, model,lars,rescaling technique, scale, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-with-scale-&-power-transformer"
                    },
                    {
                        "name": "LassoLars_Scale_QuantileTransformer.ipynb",
                        "title": "LassoLars with Scale & Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a simple LassoLars Regression. It is a lasso model implemented using the LARS algorithm and feature scaling using Scale with transfomation technique used as Quantile Transformer in a Pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_Scale_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, simple, lassolars, regression, lasso, model,lars,scaling,scale, transfomation, technique, quantile transformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-with-scale-&-quantile-transformer"
                    },
                    {
                        "name": "LassoLars_StandardScaler.ipynb",
                        "title": "LassoLars Regression",
                        "description": "This Code template is for the regression analysis using a simple LassoLars Regression. It is a lasso model implemented using the LARS algorithm and feature scaling using Standard Scaler in a Pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_StandardScaler.ipynb",
                        "keywords": "code template, regression, simple, lassolars, regression, lasso, model,lars,scaling,standard, scaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-regression"
                    },
                    {
                        "name": "LassoLars_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "LassoLars with StandardScaler & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a LassoLars Regression and the feature rescaling technique StandardScaler along with Polynomial Features as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, lassolars, regression, rescaling technique, standardscaler, polynomial, s, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-with-standardscaler-&-polynomial-features"
                    },
                    {
                        "name": "LassoLars_StandardScaler_PowerTransformer.ipynb",
                        "title": "LassoLars with StandardScaler & Power Transformer",
                        "description": "This Code template is for the regression analysis using a LassoLars Regression and the feature rescaling technique StandardScaler along with Power Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, lassolars, regression, rescaling technique, standardscaler, power, transformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-with-standardscaler-&-power-transformer"
                    },
                    {
                        "name": "LassoLars_StandardScaler_QuantileTransformer.ipynb",
                        "title": "LassoLars with StandardScaler & Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a LassoLars Regression and the feature rescaling technique StandardScaler along with Quantile Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoLars_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, lassolars, regression, rescaling technique, standardscaler, quantile transformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lassolars-with-standardscaler-&-quantile-transformer"
                    },
                    {
                        "name": "LassoRegression.ipynb",
                        "title": "Lasso Regression",
                        "description": "This Code template is for the regression analysis using a simple Lasso Regression. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression.ipynb",
                        "keywords": "code template, regression, simple, lasso, regression, lasso, stands, absolute, shrinkage, selection, operator, type, linear, regression, shrinkage",
                        "display_url": "https://siberian.dev/regression/linear-models/lasso-regression"
                    },
                    {
                        "name": "LassoRegression_MinMaxScaler.ipynb",
                        "title": "Lasso Regression with MinMaxScaler",
                        "description": "This Code template is for the regression analysis using a Lasso Regression and the feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, lasso, regression, rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lasso-regression-with-minmaxscaler"
                    },
                    {
                        "name": "LassoRegression_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "LassoRegresion with MinMax Scaler & Polynomial Features",
                        "description": "This Code template is for regression analysis using the Lasso Regressor where rescaling method used is MinMaxScaler and feature transformation is done via Polynomial Features.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, lasso, regressor, rescaling, method, minmaxscaler, data tranformation,polynomial, s",
                        "display_url": "https://siberian.dev/regression/linear-models/lassoregresion-with-minmax-scaler-&-polynomial-features"
                    },
                    {
                        "name": "LassoRegression_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "LassoRegresion with MinMax Scaler & Power Transformer",
                        "description": "This Code template is for regression analysis using the Lasso Regressor where rescaling method used is MinMaxScaler and feature transformation is done via PowerTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, lasso, regressor, rescaling, method, minmaxscaler, data tranformation,powertransformer",
                        "display_url": "https://siberian.dev/regression/linear-models/lassoregresion-with-minmax-scaler-&-power-transformer"
                    },
                    {
                        "name": "LassoRegression_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "LassoRegresion with MinMaxScaler & QuantileTransformer",
                        "description": "This Code template is for regression analysis using LassoRegresion with MinMaxScaler and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, lassoregresion, minmaxscaler, data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lassoregresion-with-minmaxscaler-&-quantiletransformer"
                    },
                    {
                        "name": "LassoRegression_Normalize.ipynb",
                        "title": "Lasso Regression with Normalize",
                        "description": "This Code template is for the regression analysis using a Lasso Regression and the feature rescaling technique called Normalization separately.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_Normalize.ipynb",
                        "keywords": "code template, regression, lasso, regression, rescaling technique,normalization, separately",
                        "display_url": "https://siberian.dev/regression/linear-models/lasso-regression-with-normalize"
                    },
                    {
                        "name": "LassoRegression_Normalize_PolynomialFeatures.ipynb",
                        "title": "LassoRegresion with Normalize & Polynomial Features",
                        "description": "This Code template is for the regression analysis using Lasso Regression and the feature transformation technique Polynomial Features rescaling technique Normalize in a pipeline. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, lasso, regression, data tranformation technique, polynomial, s, rescaling technique, normalize, pipeline, lasso, stands, absolute, shrinkage, selection, operator, type, linear, regression, shrinkage",
                        "display_url": "https://siberian.dev/regression/linear-models/lassoregresion-with-normalize-&-polynomial-features"
                    },
                    {
                        "name": "LassoRegression_Normalize_PowerTransformer.ipynb",
                        "title": "LassoRegression with Normalize & Power Transformer",
                        "description": "This Code template is for the regression analysis using Lasso Regression and the feature transformation technique Power Transformer in a pipeline Normalize separately. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_Normalize_PowerTransformer.ipynb",
                        "keywords": "code template, regression, lasso, regression, data tranformation technique, power, transformer, pipeline, normalize, separately, lasso, stands, absolute, shrinkage, selection, operator, type, linear, regression, shrinkage",
                        "display_url": "https://siberian.dev/regression/linear-models/lassoregression-with-normalize-&-power-transformer"
                    },
                    {
                        "name": "LassoRegression_PolynomialFeatures.ipynb",
                        "title": "LassoRegresion with Polynomial Features",
                        "description": "This Code template is for the regression analysis using Lasso Regression and the feature rescaling technique Polynomial Features in a pipeline. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, lasso, regression, rescaling technique, polynomial, s, pipeline, lasso, stands, absolute, shrinkage, selection, operator, type, linear, regression, shrinkage",
                        "display_url": "https://siberian.dev/regression/linear-models/lassoregresion-with-polynomial-features"
                    },
                    {
                        "name": "LassoRegression_PowerTransformer.ipynb",
                        "title": "LassoRegresion with Power Transformer",
                        "description": "This Code template is for the regression analysis using Lasso Regression and the feature transformation technique PowerTransformer in a pipeline. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_PowerTransformer.ipynb",
                        "keywords": "code template, regression, lasso, regression, data tranformation technique, powertransformer, pipeline, lasso, stands, absolute, shrinkage, selection, operator, type, linear, regression, shrinkage",
                        "display_url": "https://siberian.dev/regression/linear-models/lassoregresion-with-power-transformer"
                    },
                    {
                        "name": "LassoRegression_QuantileTransformer.ipynb",
                        "title": "LassoRegression_QuantileTransformer",
                        "description": "This Code template is for the regression analysis using Lasso Regression and the feature transformation technique QuantileTransformer in a pipeline. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, lasso, regression, data tranformation technique, quantiletransformer, pipeline, lasso, stands, absolute, shrinkage, selection, operator, type, linear, regression, shrinkage",
                        "display_url": "https://siberian.dev/regression/linear-models/lassoregression_quantiletransformer"
                    },
                    {
                        "name": "LassoRegression_RobustScaler.ipynb",
                        "title": "Lasso Regression with RobustScaler",
                        "description": "This Code template is for the regression analysis using a Lasso Regression and the feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_RobustScaler.ipynb",
                        "keywords": "code template, regression, lasso, regression, rescaling technique, robustscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lasso-regression-with-robustscaler"
                    },
                    {
                        "name": "LassoRegression_RobustScaler_PowerTransformer.ipynb",
                        "title": "LassoRegresion with Robust Scaler & Power Transformer",
                        "description": "This Code template is for regression analysis using the Lasso Regressor where rescaling method used is RobustScaler and feature transformation is done via PowerTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, lasso, regressor, rescaling, method, robustscaler, data tranformation,powertransformer",
                        "display_url": "https://siberian.dev/regression/linear-models/lassoregresion-with-robust-scaler-&-power-transformer"
                    },
                    {
                        "name": "LassoRegression_RobustScaler_QuantileTransformer.ipynb",
                        "title": "LassoRegresion with Robust Scaler & Quantile Transformer",
                        "description": "This Code template is for regression analysis using the Lasso Regressor where RobustScaler is used for feature rescaling technique and Quantile Transformer for feature transformation technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, lasso, regressor, robustscaler, rescaling technique, quantile transformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lassoregresion-with-robust-scaler-&-quantile-transformer"
                    },
                    {
                        "name": "LassoRegression_Scale.ipynb",
                        "title": "Lasso Regression with Scale",
                        "description": "This Code template is for the regression analysis using a Lasso Regression and the feature rescaling technique called Scale separately.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_Scale.ipynb",
                        "keywords": "code template, regression, lasso, regression, rescaling technique,scale, separately",
                        "display_url": "https://siberian.dev/regression/linear-models/lasso-regression-with-scale"
                    },
                    {
                        "name": "LassoRegression_Scale_PolynomialFeatures.ipynb",
                        "title": "LassoRegresion with Scale & PolynomialFeatures",
                        "description": "This Code template is for the regression analysis using Lasso Regression and the feature transformation technique Polynomial Features rescaling technique Scale in a pipeline. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_Scale_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, lasso, regression, data tranformation technique, polynomial, s, rescaling technique, scale, pipeline, lasso, stands, absolute, shrinkage, selection, operator, type, linear, regression, shrinkage",
                        "display_url": "https://siberian.dev/regression/linear-models/lassoregresion-with-scale-&-polynomialfeatures"
                    },
                    {
                        "name": "LassoRegression_Scale_PowerTransformer.ipynb",
                        "title": "LassoRegresion with Scale & Power Transformer",
                        "description": "This Code template is for the regression analysis using Lasso Regression, the feature transformation technique Power Transformer and rescaling technique Scale in a pipeline. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, regression, lasso, regression, data tranformation technique, power, transformer, rescaling technique, scale, pipeline, lasso, stands, absolute, shrinkage, selection, operator, type, linear, regression, shrinkage",
                        "display_url": "https://siberian.dev/regression/linear-models/lassoregresion-with-scale-&-power-transformer"
                    },
                    {
                        "name": "LassoRegression_Scale_QuantileTransformer.ipynb",
                        "title": "LassoRegresion with Scale & QuantileTransformer",
                        "description": "This Code template is for the regression analysis using a Lasso Regressor and the feature rescaling technique Scale & feature transform QuantileTransformer Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_Scale_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, lasso, regressor, rescaling technique, scale,transform, quantiletransformer, s, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lassoregresion-with-scale-&-quantiletransformer"
                    },
                    {
                        "name": "LassoRegression_StandardScaler.ipynb",
                        "title": "Lasso Regression with StandardScaler",
                        "description": "This Code template is for the regression analysis using a Lasso Regression and the feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_StandardScaler.ipynb",
                        "keywords": "code template, regression, lasso, regression, rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/lasso-regression-with-standardscaler"
                    },
                    {
                        "name": "LassoRegression_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "LassoRegresion with StandardScaler & Polynomial Features",
                        "description": "This Code template is for the regression analysis using Lasso Regression and the feature rescaling technique Polynomial Features rescaling technique StandardScaler in a pipeline. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, lasso, regression, rescaling technique, polynomial, s, rescaling technique, standardscaler, pipeline, lasso, stands, absolute, shrinkage, selection, operator, type, linear, regression, shrinkage",
                        "display_url": "https://siberian.dev/regression/linear-models/lassoregresion-with-standardscaler-&-polynomial-features"
                    },
                    {
                        "name": "LassoRegression_StandardScaler_PowerTransformer.ipynb",
                        "title": "LassoRegresion with StandardScaler & Power Transformer",
                        "description": "This Code template is for the regression analysis using Lasso Regression and the feature transformation technique PowerTransformer with standard scaling in a pipeline. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, lasso, regression, data tranformation technique, powertransformer, standard, scaling, pipeline, lasso, stands, absolute, shrinkage, selection, operator, type, linear, regression, shrinkage",
                        "display_url": "https://siberian.dev/regression/linear-models/lassoregresion-with-standardscaler-&-power-transformer"
                    },
                    {
                        "name": "LassoRegression_StandardScaler_QuantileTransformer.ipynb",
                        "title": "LassoRegresion with StandardScaler & Quantile Transformer",
                        "description": "This Code template is for the regression analysis using Lasso Regression and the feature transformation technique Quantile Transformer with standard scaling in a pipeline. Lasso stands for Least Absolute Shrinkage and Selection Operator is a type of linear regression that uses shrinkage.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LassoRegression_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, lasso, regression, data tranformation technique, quantile transformer, standard, scaling, pipeline, lasso, stands, absolute, shrinkage, selection, operator, type, linear, regression, shrinkage",
                        "display_url": "https://siberian.dev/regression/linear-models/lassoregresion-with-standardscaler-&-quantile-transformer"
                    },
                    {
                        "name": "LinearRegression.ipynb",
                        "title": "Linear Regression",
                        "description": "This Code template is for the regression analysis using a simple Linear Regression. It is a linear approach to modeling the relationship between a scalar response and one or more explanatory variables.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression.ipynb",
                        "keywords": "code template, regression, simple, linear, regression, linear, approach, modeling, relationship, scalar, response, explanatory, variables",
                        "display_url": "https://siberian.dev/regression/linear-models/linear-regression"
                    },
                    {
                        "name": "LinearRegression_MinMaxScaler.ipynb",
                        "title": "Linear Regression with MinMax Scaler",
                        "description": "This Code template is for the regression analysis using a Linear Regression and feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, linear, regression, rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/linear-regression-with-minmax-scaler"
                    },
                    {
                        "name": "LinearRegression_Normalize.ipynb",
                        "title": "Linear Regression with normalize",
                        "description": "This Code template is for the regression analysis using a Linear Regression and feature rescaling technique normalize.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_Normalize.ipynb",
                        "keywords": "code template, regression, linear, regression, rescaling technique, normalize",
                        "display_url": "https://siberian.dev/regression/linear-models/linear-regression-with-normalize"
                    },
                    {
                        "name": "LinearRegression_Normalize_PowerTransformer.ipynb",
                        "title": "Linear Regression with Normalize & Power Transformer",
                        "description": "This Code template is for the regression analysis using a simple Linear Regression where separate rescaling is done using Normalize and feature transformation is done using PowerTransformer in a pipeline. It is a linear approach to modeling the relationship between a scalar response and one or more explanatory variables.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_Normalize_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, linear, regression, rescaling,normalize, data tranformation,powertransformer, pipeline, linear, approach, modeling, relationship, scalar, response, explanatory, variables",
                        "display_url": "https://siberian.dev/regression/linear-models/linear-regression-with-normalize-&-power-transformer"
                    },
                    {
                        "name": "LinearRegression_Normalize_QuantileTransformer.ipynb",
                        "title": "Linear Regression with Normalize & Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a simple Linear Regression where separate rescaling is done using Normalize and feature transformation is done using QuantileTransformer in a pipeline. It is a linear approach to modeling the relationship between a scalar response and one or more explanatory variables.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_Normalize_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, simple, linear, regression, rescaling,normalize, data tranformation,quantiletransformer, pipeline, linear, approach, modeling, relationship, scalar, response, explanatory, variables",
                        "display_url": "https://siberian.dev/regression/linear-models/linear-regression-with-normalize-&-quantile-transformer"
                    },
                    {
                        "name": "LinearRegression_PowerTransformer.ipynb",
                        "title": "Linear Regression with PowerTranformer",
                        "description": "This Code template is for the regression analysis using Linear Regression model and feature transformations using PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_PowerTransformer.ipynb",
                        "keywords": "code template, regression, linear, regression, model, data tranformations,powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/linear-regression-with-powertranformer"
                    },
                    {
                        "name": "LinearRegression_RobustScaler.ipynb",
                        "title": "Linear Regression with Robust Scaler",
                        "description": "This Code template is for the regression analysis using Ridge Regression and feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_RobustScaler.ipynb",
                        "keywords": "code template, regression, ridge, regression, rescaling technique, robustscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/linear-regression-with-robust-scaler"
                    },
                    {
                        "name": "LinearRegression_RobustScaler_PowerTransformer.ipynb",
                        "title": "Linear Regression with RobustScaler & Power Transformer",
                        "description": "This code template is for regression analysis using Linear Regression with feature rescaling technique called RobustScaler and feature transformation technique called Power Transformer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, linear, regression, rescaling technique,robustscaler,data tranformation technique,power, transformer",
                        "display_url": "https://siberian.dev/regression/linear-models/linear-regression-with-robustscaler-&-power-transformer"
                    },
                    {
                        "name": "LinearRegression_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Linear Regression with RobustScaler & Quantile Transformer",
                        "description": "This code template is for regression analysis using Linear Regression with feature rescaling technique called RobustScaler and feature transformation technique called Quantile Transformer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, linear, regression, rescaling technique,robustscaler,data tranformation technique,quantile transformer",
                        "display_url": "https://siberian.dev/regression/linear-models/linear-regression-with-robustscaler-&-quantile-transformer"
                    },
                    {
                        "name": "LinearRegression_Scale.ipynb",
                        "title": "Linear Regression with Scale",
                        "description": "This Code template is for the regression analysis using a Linear Regression and feature rescaling technique Scale.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_Scale.ipynb",
                        "keywords": "code template, regression, linear, regression, rescaling technique, scale",
                        "display_url": "https://siberian.dev/regression/linear-models/linear-regression-with-scale"
                    },
                    {
                        "name": "LinearRegression_Scale_PowerTransformer.ipynb",
                        "title": "Linear Regression with Scale & Power Transformer",
                        "description": "This Code template is for the regression analysis using a simple Linear Regression where separate rescaling is done using Scale and feature transformation is done using PowerTransformer in a pipeline. It is a linear approach to modeling the relationship between a scalar response and one or more explanatory variables.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, linear, regression, rescaling,scale, data tranformation,powertransformer, pipeline, linear, approach, modeling, relationship, scalar, response, explanatory, variables",
                        "display_url": "https://siberian.dev/regression/linear-models/linear-regression-with-scale-&-power-transformer"
                    },
                    {
                        "name": "LinearRegression_StandardScaler.ipynb",
                        "title": "Linear Regression with StandardScaler",
                        "description": "This Code template is for the regression analysis using a Linear Regression and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/LinearRegression_StandardScaler.ipynb",
                        "keywords": "code template, regression, linear, regression, rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/linear-regression-with-standardscaler"
                    },
                    {
                        "name": "PassiveAggressiveRegressor.ipynb",
                        "title": "Passive Aggressive Regressor",
                        "description": "This Code template is for the regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor.ipynb",
                        "keywords": "code template, regression, simple, passiveaggresiveregressor,passiveaggressive, s, passiveaggressive, s, s, largescale, learning",
                        "display_url": "https://siberian.dev/regression/linear-models/passive-aggressive-regressor"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_MinMaxScaler.ipynb",
                        "title": "Passive Aggressive Regressor with MinMax Scaler",
                        "description": "This Code template is for the regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms and the feature rescaling technique used is MinMaxScaler in a pipeline. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, simple, passiveaggresiveregressor,passiveaggressive, s, rescaling technique, minmaxscaler, pipeline, passiveaggressive, s, s, largescale, learning",
                        "display_url": "https://siberian.dev/regression/linear-models/passive-aggressive-regressor-with-minmax-scaler"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "PassiveAggressiveRegressor with MinMaxScaler & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a PassiveAggressive Regression and the feature rescaling technique MinMaxScaler along with Polynomial Features as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, passiveaggressive, regression, rescaling technique, minmaxscaler, polynomial, s, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/passiveaggressiveregressor-with-minmaxscaler-&-polynomial-features"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "PassiveAggressiveRegressor with MinMaxScaler & PowerTransformer",
                        "description": "This Code template is for the regression analysis using a PassiveAggressive Regression and the feature rescaling technique MinMaxScaler along with Power Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, passiveaggressive, regression, rescaling technique, minmaxscaler, power, transformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/passiveaggressiveregressor-with-minmaxscaler-&-powertransformer"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_Normalize.ipynb",
                        "title": "Passive Aggressive Regressor with Normalizer",
                        "description": "This Code template is for the regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms and the feature rescaling technique used is Normalizer. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_Normalize.ipynb",
                        "keywords": "code template, regression, simple, passiveaggresiveregressor,passiveaggressive, s, rescaling technique, normalizer, passiveaggressive, s, s, largescale, learning",
                        "display_url": "https://siberian.dev/regression/linear-models/passive-aggressive-regressor-with-normalizer"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_Normalize_PolynomialFeatures.ipynb",
                        "title": "PassiveAggressiveRegressor with Normalize & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a PassiveAggressive Regression and the feature rescaling technique Normalize along with Polynomial Features as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, passiveaggressive, regression, rescaling technique, normalize, polynomial, s, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/passiveaggressiveregressor-with-normalize-&-polynomial-features"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_Normalize_QuantileTransformer.ipynb",
                        "title": "PassiveAggressiveRegressor with Normalize & Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a Passive Agressive Regressor and the feature rescaling technique normalize along with Quantile Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_Normalize_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, passive, agressive, regressor, rescaling technique, normalize, quantile transformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/passiveaggressiveregressor-with-normalize-&-quantile-transformer"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_PolynomialFeatures.ipynb",
                        "title": "Passive Aggressive Regressor with Polynomial Features.",
                        "description": "This Code template is for the regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms and the feature transformation technique used is PolynomialFeatures in a pipeline. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, simple, passiveaggresiveregressor,passiveaggressive, s, data tranformation technique, polynomials, pipeline, passiveaggressive, s, s, largescale, learning",
                        "display_url": "https://siberian.dev/regression/linear-models/passive-aggressive-regressor-with-polynomial-features."
                    },
                    {
                        "name": "PassiveAggressiveRegressor_PowerTransformer.ipynb",
                        "title": "PassiveAggressiveRegressor with Power Transformer",
                        "description": "This Code template is for the regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms and feature transformation technique Power Transformer. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, passiveaggresiveregressor,passiveaggressive, s, data tranformation technique, power, transformer, passiveaggressive, s, s, largescale, learning",
                        "display_url": "https://siberian.dev/regression/linear-models/passiveaggressiveregressor-with-power-transformer"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_QuantileTransformer.ipynb",
                        "title": "PassiveAggressiveRegressor with Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms and feature transformation technique Quantile Transformer. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, simple, passiveaggresiveregressor,passiveaggressive, s, data tranformation technique, quantile transformer, passiveaggressive, s, s, largescale, learning",
                        "display_url": "https://siberian.dev/regression/linear-models/passiveaggressiveregressor-with-quantile-transformer"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_RobustScaler.ipynb",
                        "title": "Passive Aggressive Regressor with Robust Scaler",
                        "description": "This Code template is for the regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms and the feature rescaling technique used is Robust Scaler in a pipeline. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_RobustScaler.ipynb",
                        "keywords": "code template, regression, simple, passiveaggresiveregressor,passiveaggressive, s, rescaling technique, robust, scaler, pipeline, passiveaggressive, s, s, largescale, learning",
                        "display_url": "https://siberian.dev/regression/linear-models/passive-aggressive-regressor-with-robust-scaler"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_RobustScaler_PowerTransformer.ipynb",
                        "title": "PassiveAggressiveRegressor with RobustScaler & PowerTransformer",
                        "description": "This Code template is for the regression analysis using a PassiveAggressive Regression and the feature rescaling technique RobustScaler along with Power Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, passiveaggressive, regression, rescaling technique, robustscaler, power, transformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/passiveaggressiveregressor-with-robustscaler-&-powertransformer"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "title": "PassiveAggressiveRegressor with RobustScaler & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a PassiveAggressive Regression and the feature rescaling technique RobustScaler along with Quantile Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, passiveaggressive, regression, rescaling technique, robustscaler, quantile transformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/passiveaggressiveregressor-with-robustscaler-&-polynomial-features"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_Scale.ipynb",
                        "title": "Passive Aggressive Regressor with Scale",
                        "description": "This Code template is for the regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms and the feature rescaling technique used is Scale. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_Scale.ipynb",
                        "keywords": "code template, regression, simple, passiveaggresiveregressor,passiveaggressive, s, rescaling technique, scale, passiveaggressive, s, s, largescale, learning",
                        "display_url": "https://siberian.dev/regression/linear-models/passive-aggressive-regressor-with-scale"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_Scale_PolynomialFeatures.ipynb",
                        "title": "PassiveAggressiveRegressor with Scale & Polynomial Features",
                        "description": "This Code template is for regression analysis using the PassiveAggressive Regressor where rescaling method used is Scale and feature transformation is done via Polynomial Features.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_Scale_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, passiveaggressive, regressor, rescaling, method, scale, data tranformation,polynomial, s",
                        "display_url": "https://siberian.dev/regression/linear-models/passiveaggressiveregressor-with-scale-&-polynomial-features"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_Scale_PowerTransformer.ipynb",
                        "title": "PassiveAggressiveRegressor with Scale & Power Transformer",
                        "description": "This Code template is for regression analysis using the PassiveAggressive Regressor where rescaling method used is Scale and feature transformation is done via Power Transformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, regression, passiveaggressive, regressor, rescaling, method, scale, data tranformation,power, transformer",
                        "display_url": "https://siberian.dev/regression/linear-models/passiveaggressiveregressor-with-scale-&-power-transformer"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_StandardScaler.ipynb",
                        "title": "Passive Aggressive Regressor with Standard Scaler",
                        "description": "This Code template is for the regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms and the feature rescaling technique used is StandardScaler in a pipeline. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_StandardScaler.ipynb",
                        "keywords": "code template, regression, simple, passiveaggresiveregressor,passiveaggressive, s, rescaling technique, standardscaler, pipeline, passiveaggressive, s, s, largescale, learning",
                        "display_url": "https://siberian.dev/regression/linear-models/passive-aggressive-regressor-with-standard-scaler"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "PassiveAggressiveRegressor with StandardScaler & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms with the StandardScaler feature rescaling technique and the feature transformation technique used is PolynomialFeatures in a pipeline. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, simple, passiveaggresiveregressor,passiveaggressive, s, standardscaler, rescaling technique, data tranformation technique, polynomials, pipeline, passiveaggressive, s, s, largescale, learning",
                        "display_url": "https://siberian.dev/regression/linear-models/passiveaggressiveregressor-with-standardscaler-&-polynomial-features"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_StandardScaler_PowerTransformer.ipynb",
                        "title": "PassiveAggressiveRegressor with StandardScaler & Power Transformer",
                        "description": "This Code template is for the regression analysis using a simple PassiveAggresiveRegressor based on the passive-aggressive algorithms with StandardScaler as rescaling and feature transformation technique Power Transformer. Passive-aggressive algorithms are a group of algorithms for large-scale learning.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, passiveaggresiveregressor,passiveaggressive, s, standardscaler, rescaling, data tranformation technique, power, transformer, passiveaggressive, s, s, largescale, learning",
                        "display_url": "https://siberian.dev/regression/linear-models/passiveaggressiveregressor-with-standardscaler-&-power-transformer"
                    },
                    {
                        "name": "PassiveAggressiveRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "title": "PassiveAggressiveRegressor with StandardScaler & Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a PassiveAggressive Regression and the feature rescaling technique StandardScaler along with Quantile Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PassiveAggressiveRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, passiveaggressive, regression, rescaling technique, standardscaler, quantile transformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/passiveaggressiveregressor-with-standardscaler-&-quantile-transformer"
                    },
                    {
                        "name": "PoissonRegressor.ipynb",
                        "title": "Poisson Regression",
                        "description": "This Code template is for the regression analysis using a Poisson Regression and the feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor.ipynb",
                        "keywords": "code template, regression, poisson, regression, rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/poisson-regression"
                    },
                    {
                        "name": "PoissonRegressor_MinMaxScaler.ipynb",
                        "title": "Poisson Regression with MinMaxScaler",
                        "description": "This Code template is for the regression analysis using a Poisson Regression and the feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, poisson, regression, rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/poisson-regression-with-minmaxscaler"
                    },
                    {
                        "name": "PoissonRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Poisson Regresion with MinMax Scaler & Polynomial Features",
                        "description": "This Code template is for regression analysis using the Poisson Regressor where rescaling method used is MinMaxScaler and feature transformation is done via Polynomial Features.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, poisson, regressor, rescaling, method, minmaxscaler, data tranformation,polynomial, s",
                        "display_url": "https://siberian.dev/regression/linear-models/poisson-regresion-with-minmax-scaler-&-polynomial-features"
                    },
                    {
                        "name": "PoissonRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "PoissonRegressor with MinMaxScaler & PowerTransformer",
                        "description": "This code template is for regression analysis using Poisson Regressor where rescaling techniques and feature transformation techniques are used, MinMaxScaler and Power Transformer respectively.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, poisson, regressor, rescaling, techniques, data tranformation, techniques, used, minmaxscaler, power, transformer, respectively",
                        "display_url": "https://siberian.dev/regression/linear-models/poissonregressor-with-minmaxscaler-&-powertransformer"
                    },
                    {
                        "name": "PoissonRegressor_normalize.ipynb",
                        "title": "Poisson Regression with Normalize",
                        "description": "This Code template is for the regression analysis using a Poisson Regression and the feature rescaling technique Normalizer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_normalize.ipynb",
                        "keywords": "code template, regression, poisson, regression, rescaling technique, normalizer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/poisson-regression-with-normalize"
                    },
                    {
                        "name": "PoissonRegressor_Normalize_PolynomialFeatures.ipynb",
                        "title": "PoissonRegressor with Normalize & Polynomial Features",
                        "description": "This code template is for regression analysis using Poisson Regressor with rescaling technique as Normalization and feature transformation technique as Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, poisson, regressor, rescaling technique, normalization, data tranformation technique, polynomial, s, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/poissonregressor-with-normalize-&-polynomial-features"
                    },
                    {
                        "name": "PoissonRegressor_Normalize_QuantileTransformer.ipynb",
                        "title": "PoissonRegressor with Normalize & Quantile Transformer",
                        "description": "This Code template is for the regression analysis using a PoissonRegressor and the feature rescaling technique normalize along with Quantile Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_Normalize_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, poissonregressor, rescaling technique, normalize, quantile transformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/poissonregressor-with-normalize-&-quantile-transformer"
                    },
                    {
                        "name": "PoissonRegressor_PolynomialFeatures.ipynb",
                        "title": "Poisson Regression with PolynomialFeatures",
                        "description": "This Code template is for the regression analysis using a Poisson Regression and the feature rescaling technique Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, poisson, regression, rescaling technique, polynomial, s, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/poisson-regression-with-polynomialfeatures"
                    },
                    {
                        "name": "PoissonRegressor_PowerTransformer.ipynb",
                        "title": "PoissonRegressor with Power Transformer",
                        "description": "This Code template is for the regression analysis using Poisson Regressor and feature transformation via Power Transformer. This is a generalized Linear Model with a Poisson distribution.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_PowerTransformer.ipynb",
                        "keywords": "code template, regression, poisson, regressor, data tranformation,power, transformer, generalized, linear, model, poisson, distribution",
                        "display_url": "https://siberian.dev/regression/linear-models/poissonregressor-with-power-transformer"
                    },
                    {
                        "name": "PoissonRegressor_QuantileTransformer.ipynb",
                        "title": "PoissonRegressor with Quantile Transformer",
                        "description": "This Code template is for the regression analysis using Poisson Regressor and feature transformation via Quantile Transformer. This is a generalized Linear Model with a Poisson distribution.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, poisson, regressor, data tranformation,quantile transformer, generalized, linear, model, poisson, distribution",
                        "display_url": "https://siberian.dev/regression/linear-models/poissonregressor-with-quantile-transformer"
                    },
                    {
                        "name": "PoissonRegressor_RobustScaler.ipynb",
                        "title": "Poisson Regression with RobustScaler",
                        "description": "This Code template is for the regression analysis using a Poisson Regression and the feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_RobustScaler.ipynb",
                        "keywords": "code template, regression, poisson, regression, rescaling technique, robustscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/poisson-regression-with-robustscaler"
                    },
                    {
                        "name": "PoissonRegressor_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "PoissonRegressor with RobustScaler & Polynomial Features",
                        "description": "This code template is for regression analysis using Poisson Regressor with rescaling technique as RobustScaler and feature transformation technique as Polynomial Features.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, poisson, regressor, rescaling technique, robustscaler, data tranformation technique, polynomial, s",
                        "display_url": "https://siberian.dev/regression/linear-models/poissonregressor-with-robustscaler-&-polynomial-features"
                    },
                    {
                        "name": "PoissonRegressor_RobustScaler_PowerTransformer.ipynb",
                        "title": "PoissonRegressor with RobustScaler & Power Transformer",
                        "description": "This code template is for regression analysis using Poisson Regressor with rescaling technique as RobustScaler and feature transformation technique as Power Transformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, poisson, regressor, rescaling technique, robustscaler, data tranformation technique,power, transformer",
                        "display_url": "https://siberian.dev/regression/linear-models/poissonregressor-with-robustscaler-&-power-transformer"
                    },
                    {
                        "name": "PoissonRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "title": "PoissonRegressor with RobustScaler & Quantile Transformer",
                        "description": "This code template is for regression analysis using Poisson Regressor with rescaling techniques as RobustScaler and feature transformation techniques as Quantile Transformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, poisson, regressor, rescaling, techniques, robustscaler, data tranformation, techniques, quantile transformer",
                        "display_url": "https://siberian.dev/regression/linear-models/poissonregressor-with-robustscaler-&-quantile-transformer"
                    },
                    {
                        "name": "PoissonRegressor_scale.ipynb",
                        "title": "Poisson Regression with scale",
                        "description": "This Code template is for the regression analysis using a Poisson Regression and the feature rescaling technique simple Scaling method along with a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_scale.ipynb",
                        "keywords": "code template, regression, poisson, regression, rescaling technique, simple, scaling, method, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/poisson-regression-with-scale"
                    },
                    {
                        "name": "PoissonRegressor_Scale_PolynomialFeatures.ipynb",
                        "title": "PoissonRegressor with Scale & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a PoissonRegressor and the feature rescaling technique scale along with PolynomialFeatures as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_Scale_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, poissonregressor, rescaling technique, scale, polynomials, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/poissonregressor-with-scale-&-polynomial-features"
                    },
                    {
                        "name": "PoissonRegressor_Scale_PowerTransformer.ipynb",
                        "title": "PoissonRegressor with Scale & Power Transformer",
                        "description": "This Code template is for the regression analysis using a PoissonRegressor and the feature rescaling technique scale along with Power Transformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, regression, poissonregressor, rescaling technique, scale, power, transformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/poissonregressor-with-scale-&-power-transformer"
                    },
                    {
                        "name": "PoissonRegressor_StandardScaler.ipynb",
                        "title": "Poisson Regression with StandardScaler",
                        "description": "This Code template is for the regression analysis using a simple Poisson Regression. It is a generalized linear model and assumes the target variable has a Poisson distribution.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_StandardScaler.ipynb",
                        "keywords": "code template, regression, simple, poisson, regression, generalized, linear, model, assumes, target, variable, poisson, distribution",
                        "display_url": "https://siberian.dev/regression/linear-models/poisson-regression-with-standardscaler"
                    },
                    {
                        "name": "PoissonRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "PoissonRegressor with StandardScaler & Polynomial Features",
                        "description": "This Code template is for the regression analysis using Poisson Regressor and the feature rescaling technique Polynomial Features in a pipeline. This is a generalized Linear Model with a Poisson distribution.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, poisson, regressor, rescaling technique, polynomial, s, pipeline, generalized, linear, model, poisson, distribution",
                        "display_url": "https://siberian.dev/regression/linear-models/poissonregressor-with-standardscaler-&-polynomial-features"
                    },
                    {
                        "name": "PoissonRegressor_StandardScaler_PowerTransformer.ipynb",
                        "title": "PoissonRegressor with StandardScaler & Power Transformer",
                        "description": "This Code template is for the regression analysis using Poisson Regressor, StandardScaler as feature rescaling technique and Power Transformer as transformer in a pipeline. This is a generalized Linear Model with a Poisson distribution.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, poisson, regressor, standardscaler, rescaling technique, power, transformer, transformer, pipeline, generalized, linear, model, poisson, distribution",
                        "display_url": "https://siberian.dev/regression/linear-models/poissonregressor-with-standardscaler-&-power-transformer"
                    },
                    {
                        "name": "PoissonRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "title": "PoissonRegressor with StandardScaler & Quantile Transformer",
                        "description": "This Code template is for the regression analysis using Poisson Regressor, featuring scaling via StandardScaler and transformation via Quantile Transformer in a pipeline. This is a generalized Linear Model with a Poisson distribution.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PoissonRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, poisson, regressor, featuring, scaling,standardscaler, data tranformation,quantile transformer, pipeline, generalized, linear, model, poisson, distribution",
                        "display_url": "https://siberian.dev/regression/linear-models/poissonregressor-with-standardscaler-&-quantile-transformer"
                    },
                    {
                        "name": "PolynomialRegression.ipynb",
                        "title": "Polynomial Regression",
                        "description": "This Code template is for the regression analysis using a Polynomial Regression. Polynomial Regression can be performed in python using Polynomial Features along with Linear Regression in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PolynomialRegression.ipynb",
                        "keywords": "code template, regression, polynomial, regression, polynomial, regression, performed, python,polynomial, s, linear, regression, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/polynomial-regression"
                    },
                    {
                        "name": "PolynomialRegression_MinMaxScaler.ipynb",
                        "title": "Polynomial Regression using MinMax Scaler",
                        "description": "This code template is for the regression analysis using Polynomial Regression and feature rescaling technique called MinMaxScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PolynomialRegression_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, polynomial, regression, rescaling technique,minmaxscaler",
                        "display_url": "https://siberian.dev/regression/linear-models/polynomial-regression-using-minmax-scaler"
                    },
                    {
                        "name": "PolynomialRegression_Normalize.ipynb",
                        "title": "Polynomial Regression using Normalize",
                        "description": "This code template is for the regression analysis using Polynomial Regression and feature rescaling technique called Normalization separately",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PolynomialRegression_Normalize.ipynb",
                        "keywords": "code template, regression, polynomial, regression, rescaling technique,normalization, separately",
                        "display_url": "https://siberian.dev/regression/linear-models/polynomial-regression-using-normalize"
                    },
                    {
                        "name": "PolynomialRegression_RobustScaler.ipynb",
                        "title": "Polynomial Regression using Robust Scaler",
                        "description": "This code template is for the regression analysis using Polynomial Regression and feature rescaling technique called RobustScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PolynomialRegression_RobustScaler.ipynb",
                        "keywords": "code template, regression, polynomial, regression, rescaling technique,robustscaler",
                        "display_url": "https://siberian.dev/regression/linear-models/polynomial-regression-using-robust-scaler"
                    },
                    {
                        "name": "PolynomialRegression_Scale.ipynb",
                        "title": "Polynomial Regression using Scale",
                        "description": "This code template is for the regression analysis using Polynomial Regression and feature rescaling technique called Scale separately",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PolynomialRegression_Scale.ipynb",
                        "keywords": "code template, regression, polynomial, regression, rescaling technique,scale, separately",
                        "display_url": "https://siberian.dev/regression/linear-models/polynomial-regression-using-scale"
                    },
                    {
                        "name": "PolynomialRegression_StandardScaler.ipynb",
                        "title": "Polynomial Regression with StandardScaler",
                        "description": "This Code template is for the regression analysis using a Polynomial Regression and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/PolynomialRegression_StandardScaler.ipynb",
                        "keywords": "code template, regression, polynomial, regression, rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/polynomial-regression-with-standardscaler"
                    },
                    {
                        "name": "RidgeRegression.ipynb",
                        "title": "Ridge Regression",
                        "description": "This Code template is for the regression analysis using simple Ridge Regression. Ridge Regression is also known as Tikhonov regularization",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression.ipynb",
                        "keywords": "code template, regression, simple, ridge, regression, ridge, regression, tikhonov, regularization",
                        "display_url": "https://siberian.dev/regression/linear-models/ridge-regression"
                    },
                    {
                        "name": "RidgeRegression_MinMaxScaler.ipynb",
                        "title": "RidgeRegression with MinMaxScaler",
                        "description": "This Code template is for the regression analysis using Ridge Regression and feature rescaling technique MiinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, ridge, regression, rescaling technique, miinmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/ridgeregression-with-minmaxscaler"
                    },
                    {
                        "name": "RidgeRegression_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "RidgeRegression with MinMaxScaler & Polynomial Features",
                        "description": "This Code template is for the regression analysis using Ridge Regression, feature rescaling technique MinMaxScaler and Polynomial Features feature transformation technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, ridge, regression, rescaling technique, minmaxscaler, polynomial, s, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/ridgeregression-with-minmaxscaler-&-polynomial-features"
                    },
                    {
                        "name": "RidgeRegression_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "RidgeRegression with MinMaxScaler & Power Transformer",
                        "description": "This code template is for the regression analysis using Ridge Regression and feature rescaling technique with MinMaxScaler & Power Transformer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, ridge, regression, rescaling technique,minmaxscaler,power, transformer",
                        "display_url": "https://siberian.dev/regression/linear-models/ridgeregression-with-minmaxscaler-&-power-transformer"
                    },
                    {
                        "name": "RidgeRegression_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "RidgeRegression with MinMaxScaler & Quantile Transformer",
                        "description": "This Code template is for the regression analysis using Ridge Regression, feature rescaling technique MinMaxScaler and Quantile Transformer feature transformation technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, ridge, regression, rescaling technique, minmaxscaler, quantile transformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/ridgeregression-with-minmaxscaler-&-quantile-transformer"
                    },
                    {
                        "name": "RidgeRegression_Normalize.ipynb",
                        "title": "RidgeRegression with Normalize",
                        "description": "This Code template is for the regression analysis using Ridge Regression and Normalize scaling",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_Normalize.ipynb",
                        "keywords": "code template, regression, ridge, regression, normalize, scaling",
                        "display_url": "https://siberian.dev/regression/linear-models/ridgeregression-with-normalize"
                    },
                    {
                        "name": "RidgeRegression_Normalize_PolynomialFeatures.ipynb",
                        "title": "RidgeRegression with Normalize & Polynomial Features",
                        "description": "This Code template is for the Classification tasks using RidgeClassifier with Polynomial Features as Feature Transformation Technique and feature rescaling technique Normalization.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,ridgeclassifier, polynomial, s, data tranformation technique, rescaling technique, normalization",
                        "display_url": "https://siberian.dev/regression/linear-models/ridgeregression-with-normalize-&-polynomial-features"
                    },
                    {
                        "name": "RidgeRegression_Normalize_PowerTransformer.ipynb",
                        "title": "RidgeRegression with Normalize & Power Transformer",
                        "description": "This code template is for the regression analysis using Ridge Regression and feature rescaling technique with Normalize & Power Transformer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_Normalize_PowerTransformer.ipynb",
                        "keywords": "code template, regression, ridge, regression, rescaling technique,normalize,power, transformer",
                        "display_url": "https://siberian.dev/regression/linear-models/ridgeregression-with-normalize-&-power-transformer"
                    },
                    {
                        "name": "RidgeRegression_PolynomialFeatures.ipynb",
                        "title": "RidgeRegression with Polynomial Features",
                        "description": "This Code template is for the regression analysis using Ridge Regression and feature rescaling technique Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, ridge, regression, rescaling technique, polynomial, s, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/ridgeregression-with-polynomial-features"
                    },
                    {
                        "name": "RidgeRegression_PowerTransformer.ipynb",
                        "title": "Ridge Regressor with PowerTransformer",
                        "description": "This code template is for the regression analysis using Ridge Regression and feature rescaling technique called PowerTransformer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_PowerTransformer.ipynb",
                        "keywords": "code template, regression, ridge, regression, rescaling technique,powertransformer",
                        "display_url": "https://siberian.dev/regression/linear-models/ridge-regressor-with-powertransformer"
                    },
                    {
                        "name": "RidgeRegression_QuantileTransformer.ipynb",
                        "title": "RidgeRegression with Quantile Transformer",
                        "description": "This code template is for the regression analysis using Ridge Regression and feature rescaling technique called Quantile Transformer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, ridge, regression, rescaling technique,quantile transformer",
                        "display_url": "https://siberian.dev/regression/linear-models/ridgeregression-with-quantile-transformer"
                    },
                    {
                        "name": "RidgeRegression_RobustScaler.ipynb",
                        "title": "RidgeRegression with MinMaxScaler",
                        "description": "This Code template is for the regression analysis using Ridge Regression and feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_RobustScaler.ipynb",
                        "keywords": "code template, regression, ridge, regression, rescaling technique, robustscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/ridgeregression-with-minmaxscaler"
                    },
                    {
                        "name": "RidgeRegression_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "RidgeRegression with RobustScaler & Polynomial Features",
                        "description": "This Code template is for the regression analysis using simple Ridge Regression with Feature Rescaling technique RobustScaler and Feature Transformation technique PolynomialFeatures in a pipeline. Ridge Regression is also known as Tikhonov regularization.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, simple, ridge, regression, rescaling technique, robustscaler, data tranformation technique, polynomials, pipeline, ridge, regression, tikhonov, regularization",
                        "display_url": "https://siberian.dev/regression/linear-models/ridgeregression-with-robustscaler-&-polynomial-features"
                    },
                    {
                        "name": "RidgeRegression_RobustScaler_PowerTransformer.ipynb",
                        "title": "BayesianRidgeRegression with RobustScaler  & PowerTransformer",
                        "description": "This Code template is for the regression analysis using a simple Bayesian Ridge Regression based on the Bayesian Regression approach along with the feature rescaling technique RobustScaler and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, bayesian, ridge, regression,bayesian, regression, approach, rescaling technique, robustscaler,data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/bayesianridgeregression-with-robustscaler--&-powertransformer"
                    },
                    {
                        "name": "RidgeRegression_RobustScaler_QuantileTransformer.ipynb",
                        "title": "RidgeRegression with RobustScaler & Quantile Transformer",
                        "description": "This code template is for the regression analysis using Ridge Regression and feature rescaling techniquewith RobustScaler & Quantile Transformer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, ridge, regression, rescaling, techniquewith, robustscaler,quantile transformer",
                        "display_url": "https://siberian.dev/regression/linear-models/ridgeregression-with-robustscaler-&-quantile-transformer"
                    },
                    {
                        "name": "RidgeRegression_Scale.ipynb",
                        "title": "RidgeRegression with Scale",
                        "description": "This Code template is for the regression analysis using Ridge Regression and Scale",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_Scale.ipynb",
                        "keywords": "code template, regression, ridge, regression, scale",
                        "display_url": "https://siberian.dev/regression/linear-models/ridgeregression-with-scale"
                    },
                    {
                        "name": "RidgeRegression_Scale_PolynomialFeatures.ipynb",
                        "title": "RidgeRegression with Scale & Polynomial Features",
                        "description": "This code template is for the regression analysis using Ridge Regression and feature rescaling technique with Scale & Polynomial Features in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_Scale_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, ridge, regression, rescaling technique,scale,polynomial, s, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/ridgeregression-with-scale-&-polynomial-features"
                    },
                    {
                        "name": "RidgeRegression_Scale_PowerTransformer.ipynb",
                        "title": "RidgeRegression with Scale &  Power Transformer",
                        "description": "This Code template is for the regression analysis using simple Ridge Regression with Feature Rescaling technique Scale and Feature Transformation technique PowerTransformer in a pipeline. Ridge Regression is also known as Tikhonov regularization.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, ridge, regression, rescaling technique, scale, data tranformation technique, powertransformer, pipeline, ridge, regression, tikhonov, regularization",
                        "display_url": "https://siberian.dev/regression/linear-models/ridgeregression-with-scale-&--power-transformer"
                    },
                    {
                        "name": "RidgeRegression_Scale_QuantileTransformer.ipynb",
                        "title": "RidgeRegression with Scale & Quantile Transformer",
                        "description": "This Code template is for the regression analysis using simple Ridge Regression where separate rescaling is done using Scale and feature transformation is done using Quantile Transformer in a pipeline. Ridge Regression is also known as Tikhonov regularization.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_Scale_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, simple, ridge, regression, rescaling,scale, data tranformation,quantile transformer, pipeline, ridge, regression, tikhonov, regularization",
                        "display_url": "https://siberian.dev/regression/linear-models/ridgeregression-with-scale-&-quantile-transformer"
                    },
                    {
                        "name": "RidgeRegression_StandardScaler.ipynb",
                        "title": "Ridge Regressor with StandardScaler",
                        "description": "This Code template is for the regression analysis using Ridge Regression and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_StandardScaler.ipynb",
                        "keywords": "code template, regression, ridge, regression, rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/ridge-regressor-with-standardscaler"
                    },
                    {
                        "name": "RidgeRegression_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "RidgeRegression with StandardScaler & Polynomial Features",
                        "description": "This code template is for the regression analysis using Ridge Regression and feature rescaling technique with StandardScaler & Polynomial Features",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, ridge, regression, rescaling technique, standardscaler,polynomial, s",
                        "display_url": "https://siberian.dev/regression/linear-models/ridgeregression-with-standardscaler-&-polynomial-features"
                    },
                    {
                        "name": "RidgeRegression_StandardScaler_PowerTransformer.ipynb",
                        "title": "RidgeRegression with StandardScaler & Power Transformer",
                        "description": "This code template is for the regression analysis using Ridge Regression and feature rescaling technique with StandardScaler & Power Transformer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, ridge, regression, rescaling technique, standardscaler,power, transformer",
                        "display_url": "https://siberian.dev/regression/linear-models/ridgeregression-with-standardscaler-&-power-transformer"
                    },
                    {
                        "name": "RidgeRegression_StandardScaler_QuantileTransformer.ipynb",
                        "title": "RidgeRegression with StandardScaler & Quantile Transformer",
                        "description": "This code template is for the regression analysis using Ridge Regression and feature rescaling techniquewith StandardScaler & Quantile Transformer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/RidgeRegression_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, ridge, regression, rescaling, techniquewith, standardscaler,quantile transformer",
                        "display_url": "https://siberian.dev/regression/linear-models/ridgeregression-with-standardscaler-&-quantile-transformer"
                    },
                    {
                        "name": "SGDRegressor.ipynb",
                        "title": "Stochastic Gradient Descent Regression",
                        "description": "This Code template is for regression analysis using the simple SGDRegressor based on the Stochastic Gradient Descent approach.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor.ipynb",
                        "keywords": "code template, regression, simple, sgdregressor,stochastic, gradient, descent, approach",
                        "display_url": "https://siberian.dev/regression/linear-models/stochastic-gradient-descent-regression"
                    },
                    {
                        "name": "SGDRegressor_MinMaxScaler.ipynb",
                        "title": "Stochastic Gradient Descent Regression with MinMaxScaler",
                        "description": "This Code template is for regression analysis using the SGDRegressor based on the Stochastic Gradient Descent approach and feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, sgdregressor,stochastic, gradient, descent, approach, rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/stochastic-gradient-descent-regression-with-minmaxscaler"
                    },
                    {
                        "name": "SGDRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Stochastic Gradient Descent Regression with MinMaxScaler & Polynomial Features",
                        "description": "This Code template is for regression analysis using the SGDRegressor with PolynomialFeatures as Feature Transformation Technique and MinMaxScaler for rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, sgdregressor, polynomials, data tranformation technique, minmaxscaler, rescaling technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/stochastic-gradient-descent-regression-with-minmaxscaler-&-polynomial-features"
                    },
                    {
                        "name": "SGDRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Stochastic Gradient Descent Regression with MinMaxScaler & PowerTransformer",
                        "description": "This Code template is for regression analysis using the SGDRegressor with PowerTransformer as Feature Transformation Technique and StandardScaler for rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, sgdregressor, powertransformer, data tranformation technique, standardscaler, rescaling technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/stochastic-gradient-descent-regression-with-minmaxscaler-&-powertransformer"
                    },
                    {
                        "name": "SGDRegressor_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "SGDRegressor with MinMaxScaler & Quantile Transformer",
                        "description": "This Code template is for regression analysis using the SGDRegressor where rescaling method used is MinMaxScaler and feature transformation is done using QuantileTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, sgdregressor, rescaling, method, minmaxscaler, data tranformation,quantiletransformer",
                        "display_url": "https://siberian.dev/regression/linear-models/sgdregressor-with-minmaxscaler-&-quantile-transformer"
                    },
                    {
                        "name": "SGDRegressor_Normalize.ipynb",
                        "title": "Stochastic Gradient Descent Regression with Normalize",
                        "description": "This Code template is for regression analysis using SGDRegressor based on the Stochastic Gradient Descent approach using feature scaling via Normalizer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_Normalize.ipynb",
                        "keywords": "code template, regression, sgdregressor,stochastic, gradient, descent, approach,scaling,normalizer",
                        "display_url": "https://siberian.dev/regression/linear-models/stochastic-gradient-descent-regression-with-normalize"
                    },
                    {
                        "name": "SGDRegressor_Normalize_PolynomialFeatures.ipynb",
                        "title": "SGDRegressor with Normalize & Polynomial Features",
                        "description": "This Code template is for regression analysis using the SGDRegressor where feature normalization using normalize and feature transformation is done using PolynomialFeatures.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, sgdregressor, normalization,normalize, data tranformation,polynomials",
                        "display_url": "https://siberian.dev/regression/linear-models/sgdregressor-with-normalize-&-polynomial-features"
                    },
                    {
                        "name": "SGDRegressor_Normalize_PowerTransformer.ipynb",
                        "title": "SGDRegressor with Normalize & PowerTransformer",
                        "description": "This Code template is for regression analysis using the SGDRegressor where feature normalization using normalize and feature transformation is done using PowerTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_Normalize_PowerTransformer.ipynb",
                        "keywords": "code template, regression, sgdregressor, normalization,normalize, data tranformation,powertransformer",
                        "display_url": "https://siberian.dev/regression/linear-models/sgdregressor-with-normalize-&-powertransformer"
                    },
                    {
                        "name": "SGDRegressor_Normalize_QuantileTransformer.ipynb",
                        "title": "SGDRegressor with Normalize & QuantileTransformer",
                        "description": "This Code template is for regression analysis using the SGDRegressor where feature normalization using normalize and feature transformation is done using QuantileTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_Normalize_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, sgdregressor, normalization,normalize, data tranformation,quantiletransformer",
                        "display_url": "https://siberian.dev/regression/linear-models/sgdregressor-with-normalize-&-quantiletransformer"
                    },
                    {
                        "name": "SGDRegressor_PolynomialFeatures.ipynb",
                        "title": "Stochastic Gradient Descent Regression with PolynomialFeatures",
                        "description": "This Code template is for regression analysis using the SGDRegressor based on the Stochastic Gradient Descent approach and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, sgdregressor,stochastic, gradient, descent, approach, data tranformation technique, polynomials, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/stochastic-gradient-descent-regression-with-polynomialfeatures"
                    },
                    {
                        "name": "SGDRegressor_PowerTransformer.ipynb",
                        "title": "SGDRegressor with Power Transformer",
                        "description": "This Code template is for regression analysis using the SGDRegressor where feature transformation is done using PowerTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_PowerTransformer.ipynb",
                        "keywords": "code template, regression, sgdregressor, data tranformation,powertransformer",
                        "display_url": "https://siberian.dev/regression/linear-models/sgdregressor-with-power-transformer"
                    },
                    {
                        "name": "SGDRegressor_QuantileTransformer.ipynb",
                        "title": "SGDRegressor with Quantile Transformer",
                        "description": "This Code template is for regression analysis using the SGDRegressor where feature transformation is done using QuantileTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, sgdregressor, data tranformation,quantiletransformer",
                        "display_url": "https://siberian.dev/regression/linear-models/sgdregressor-with-quantile-transformer"
                    },
                    {
                        "name": "SGDRegressor_RobustScaler.ipynb",
                        "title": "Stochastic Gradient Descent Regression with RobustScaler",
                        "description": "This Code template is for regression analysis using the SGDRegressor based on the Stochastic Gradient Descent approach and feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_RobustScaler.ipynb",
                        "keywords": "code template, regression, sgdregressor,stochastic, gradient, descent, approach, rescaling technique, robustscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/stochastic-gradient-descent-regression-with-robustscaler"
                    },
                    {
                        "name": "SGDRegressor_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "Stochastic Gradient Descent Regression with RobustScaler & Polynomial Features",
                        "description": "This Code template is for regression analysis using the SGDRegressor with PolynomialFeatures as Feature Transformation Technique and RobustScaler for rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, sgdregressor, polynomials, data tranformation technique, robustscaler, rescaling technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/stochastic-gradient-descent-regression-with-robustscaler-&-polynomial-features"
                    },
                    {
                        "name": "SGDRegressor_RobustScaler_PowerTransformer.ipynb",
                        "title": "SGDRegressor with RobustScaler & Power Transformer",
                        "description": "This Code template is for regression analysis using the SGDRegressor with PowerTransformer as Feature Transformation Technique and RobustScaler for rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, sgdregressor, powertransformer, data tranformation technique, robustscaler, rescaling technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/sgdregressor-with-robustscaler-&-power-transformer"
                    },
                    {
                        "name": "SGDRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "title": "SGDRegressor with RobustScaler & Quantile Transformer",
                        "description": "This Code template is for regression analysis using the SGDRegressor with QuantileTransformer as Feature Transformation Technique and RobustScaler for rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, sgdregressor, quantiletransformer, data tranformation technique, robustscaler, rescaling technique, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/sgdregressor-with-robustscaler-&-quantile-transformer"
                    },
                    {
                        "name": "SGDRegressor_Scale.ipynb",
                        "title": "Stochastic Gradient Descent Regression with Scale",
                        "description": "This Code template is for regression analysis using SGDRegressor based on the Stochastic Gradient Descent approach using feature scaling via Scale",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_Scale.ipynb",
                        "keywords": "code template, regression, sgdregressor,stochastic, gradient, descent, approach,scaling,scale",
                        "display_url": "https://siberian.dev/regression/linear-models/stochastic-gradient-descent-regression-with-scale"
                    },
                    {
                        "name": "SGDRegressor_Scale_PowerTransformer.ipynb",
                        "title": "Stochastic Gradient Descent Regression with Scale and PowerTransformer",
                        "description": "This code template is for Regression analysis with data rescaling technique as Scale and Feature transformation technique as PowerTransformer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, regression,data rescaling technique, scale, data tranformation technique, powertransformer",
                        "display_url": "https://siberian.dev/regression/linear-models/stochastic-gradient-descent-regression-with-scale-and-powertransformer"
                    },
                    {
                        "name": "SGDRegressor_Scale_QuantileTransformer.ipynb",
                        "title": "SGDRegressor with Scale & Quantile Transformer",
                        "description": "This Code template is for regression analysis using the simple SGDRegressor based on the Stochastic Gradient Descent approach with data rescaling technique Scale separately and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_Scale_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, simple, sgdregressor,stochastic, gradient, descent, approach, data rescaling technique, scale, separately, data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/sgdregressor-with-scale-&-quantile-transformer"
                    },
                    {
                        "name": "SGDRegressor_StandardScaler.ipynb",
                        "title": "Stochastic Gradient Descent Regression with StandardScaler",
                        "description": "This Code template is for regression analysis using the SGDRegressor based on the Stochastic Gradient Descent approach and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_StandardScaler.ipynb",
                        "keywords": "code template, regression, sgdregressor,stochastic, gradient, descent, approach, rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/linear-models/stochastic-gradient-descent-regression-with-standardscaler"
                    },
                    {
                        "name": "SGDRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "SGDRegressor with StandardScaler & Polynomial Features",
                        "description": "This Code template is for regression analysis using the SGDRegressor where rescaling method used is StandardScaler and feature transformation is done using PolynomialFeatures.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, sgdregressor, rescaling, method, standardscaler, data tranformation,polynomials",
                        "display_url": "https://siberian.dev/regression/linear-models/sgdregressor-with-standardscaler-&-polynomial-features"
                    },
                    {
                        "name": "SGDRegressor_StandardScaler_PowerTransformer.ipynb",
                        "title": "SGDRegressor with StandardScaler & Power Transformer",
                        "description": "This Code template is for regression analysis using the SGDRegressor where rescaling method used is StandardScaler and feature transformation is done using PowerTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, sgdregressor, rescaling, method, standardscaler, data tranformation,powertransformer",
                        "display_url": "https://siberian.dev/regression/linear-models/sgdregressor-with-standardscaler-&-power-transformer"
                    },
                    {
                        "name": "SGDRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "title": "SGDRegressor with StandardScaler & Quantile Transformer",
                        "description": "This Code template is for regression analysis using the SGDRegressor where rescaling method used is StandardScaler and feature transformation is done using QuantileTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Linear_Models/SGDRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, sgdregressor, rescaling, method, standardscaler, data tranformation,quantiletransformer",
                        "display_url": "https://siberian.dev/regression/linear-models/sgdregressor-with-standardscaler-&-quantile-transformer"
                    }
                ]
            },
            {
                "name": "Other_Ensemble",
                "models": [
                    {
                        "name": "VotingRegressor.ipynb",
                        "title": "Simple Voting Regressor",
                        "description": "This Code template is for the regression analysis using a VotingRegressor. It is an ensemble meta-estimator that fits several base regressors, each on the whole dataset. Then it averages the individual predictions to form a final prediction.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Other_Ensemble/VotingRegressor.ipynb",
                        "keywords": "code template, regression, votingregressor, ensemble, metaestimator, fits, base, regressors, dataset, averages, individual, predictions, form, final, prediction",
                        "display_url": "https://siberian.dev/regression/other-ensemble/simple-voting-regressor"
                    }
                ]
            },
            {
                "name": "Radius_Neighbors",
                "models": [
                    {
                        "name": "RadiusNeighborsRegressor.ipynb",
                        "title": "RadiusNeighborsRegressor",
                        "description": "This Code template is for the regression analysis using a simple Radius Neighbor Regressor. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor.ipynb",
                        "keywords": "code template, regression, simple, radius, neighbor, regressor, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/regression/radius-neighbors/radiusneighborsregressor"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_MinMaxScaler.ipynb",
                        "title": "RadiusNeighborsRegressor with MinMaxScaler",
                        "description": "This Code template is for the regression analysis using a simple Radius Neighbor Regressor and feature rescaling technique MinMaxScaler in a pipeline. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, simple, radius, neighbor, regressor, rescaling technique, minmaxscaler, pipeline, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/regression/radius-neighbors/radiusneighborsregressor-with-minmaxscaler"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "RadiusNeighborsRegressor with MinMaxScaler & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a RadiusNeighbors Regression and the feature rescaling technique MinMaxScaler along with Polynomial Features as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, radiusneighbors, regression, rescaling technique, minmaxscaler, polynomial, s, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/radius-neighbors/radiusneighborsregressor-with-minmaxscaler-&-polynomial-features"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "RadiusNeighborsRegressor with MinMaxScaler & PowerTransformer",
                        "description": "This Code template is for the regression analysis using a RadiusNeighbors Regression with MinMaxScaler for feature rescaling along with PowerTransformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, radiusneighbors, regression, minmaxscaler, rescaling, powertransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/radius-neighbors/radiusneighborsregressor-with-minmaxscaler-&-powertransformer"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "RadiusNeighborsRegressor with MinMaxScaler & QuantileTransformer",
                        "description": "This Code template is for the regression analysis using a RadiusNeighbors Regression with MinMaxScaler for feature rescaling along with QuantileTransformer as a feature transformation technique in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, radiusneighbors, regression, minmaxscaler, rescaling, quantiletransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/radius-neighbors/radiusneighborsregressor-with-minmaxscaler-&-quantiletransformer"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_Normalize.ipynb",
                        "title": "RadiusNeighborsRegressor with Normalizer",
                        "description": "This Code template is for the regression analysis using a simple Radius Neighbor Regressor and feature rescaling technique Normalizer. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_Normalize.ipynb",
                        "keywords": "code template, regression, simple, radius, neighbor, regressor, rescaling technique, normalizer, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/regression/radius-neighbors/radiusneighborsregressor-with-normalizer"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_PolynomialFeatures.ipynb",
                        "title": "RadiusNeighborsRegressor with Polynomial Features",
                        "description": "This Code template is for the regression analysis using a simple Radius Neighbor Regressor and feature transformation technique Polynomial Features in a pipeline. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, simple, radius, neighbor, regressor, data tranformation technique, polynomial, s, pipeline, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/regression/radius-neighbors/radiusneighborsregressor-with-polynomial-features"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_QuantileTransformer.ipynb",
                        "title": "RadiusNeighborsRegressor with QuantileTransformer",
                        "description": "This Code template is for the regression analysis using a Radius Neighbors Regressor with feature transformation technique QuantileTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, radius, neighbors, regressor, data tranformation technique, quantiletransformer",
                        "display_url": "https://siberian.dev/regression/radius-neighbors/radiusneighborsregressor-with-quantiletransformer"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_RobustScaler.ipynb",
                        "title": "RadiusNeighborsRegressor with RobustScaler",
                        "description": "This Code template is for the regression analysis using a simple Radius Neighbor Regressor and feature rescaling technique RobustScaler in a pipeline. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_RobustScaler.ipynb",
                        "keywords": "code template, regression, simple, radius, neighbor, regressor, rescaling technique, robustscaler, pipeline, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/regression/radius-neighbors/radiusneighborsregressor-with-robustscaler"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_Scale.ipynb",
                        "title": "RadiusNeighborsRegressor with Scale",
                        "description": "This Code template is for the regression analysis using a simple Radius Neighbor Regressor and feature rescaling technique Scale. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_Scale.ipynb",
                        "keywords": "code template, regression, simple, radius, neighbor, regressor, rescaling technique, scale, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/regression/radius-neighbors/radiusneighborsregressor-with-scale"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_StandardScaler.ipynb",
                        "title": "RadiusNeighborsRegressor with StandardScaler",
                        "description": "This Code template is for the regression analysis using a simple Radius Neighbor Regressor and feature rescaling technique StandardScaler in a pipeline. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_StandardScaler.ipynb",
                        "keywords": "code template, regression, simple, radius, neighbor, regressor, rescaling technique, standardscaler, pipeline, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/regression/radius-neighbors/radiusneighborsregressor-with-standardscaler"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "RadiusNeighborsRegressor with StandardScaler & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a simple Radius Neighbor Regressor with the StandardScaler feature rescaling technique and the feature transformation technique used is PolynomialFeatures in a pipeline. It implements learning based on the number of neighbors within a fixed radius r of each training point, where r is a floating-point value specified by the user.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, simple, radius, neighbor, regressor, standardscaler, rescaling technique, data tranformation technique, polynomials, pipeline, implements, learning,neighbors, fixed, radius, training, point, floatingpoint, value, specified, user",
                        "display_url": "https://siberian.dev/regression/radius-neighbors/radiusneighborsregressor-with-standardscaler-&-polynomial-features"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_StandardScaler_PowerTransformer.ipynb",
                        "title": "RadiusNeighborsRegressor with StandardScaler & PowerTransformer",
                        "description": "This Code template is for the regression analysis using a HuberRegressor with feature transformation technique PolynomialFeatures and feature rescaling technique StandardScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, huberregressor, data tranformation technique, polynomials, rescaling technique, standardscaler",
                        "display_url": "https://siberian.dev/regression/radius-neighbors/radiusneighborsregressor-with-standardscaler-&-powertransformer"
                    },
                    {
                        "name": "RadiusNeighborsRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "title": "RadiusNeighborsRegressor with StandardScaler & Quantile Transformer",
                        "description": "This Code template is for regression analysis using the RadiusNeighbors Regressor where rescaling method used is StandardScaler and feature transformation is done using QuantileTransformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Radius_Neighbors/RadiusNeighborsRegressor_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, radiusneighbors, regressor, rescaling, method, standardscaler, data tranformation,quantiletransformer",
                        "display_url": "https://siberian.dev/regression/radius-neighbors/radiusneighborsregressor-with-standardscaler-&-quantile-transformer"
                    }
                ]
            },
            {
                "name": "Random_Forest",
                "models": [
                    {
                        "name": "RandomForestRegressor.ipynb",
                        "title": "Random Forest Regressor",
                        "description": "This Code template is for regression analysis using a simple RandomForestRegressor based on the Ensemble Learning technique. It is a meta estimator that fits multiple decision trees and uses averaging to improve the predictive accuracy and control over-fitting.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Random_Forest/RandomForestRegressor.ipynb",
                        "keywords": "code template, regression, simple, randomforestregressor,ensemble,learning technique,meta, estimator, fits, multiple, decision, trees, averaging, improve, predictive, accuracy, control, overfitting",
                        "display_url": "https://siberian.dev/regression/random-forest/random-forest-regressor"
                    },
                    {
                        "name": "RandomForestRegressor_MinMaxScaler.ipynb",
                        "title": "RandomForestRegressor with MinMaxScaler",
                        "description": "This Code template is for regression analysis using a RandomForestRegressor based on the Ensemble Learning technique using feature scaling via MinMaxScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Random_Forest/RandomForestRegressor_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, randomforestregressor,ensemble,learning technique,scaling,minmaxscaler",
                        "display_url": "https://siberian.dev/regression/random-forest/randomforestregressor-with-minmaxscaler"
                    },
                    {
                        "name": "RandomForestRegressor_Normalize.ipynb",
                        "title": "RandomForestRegressor with Normalize",
                        "description": "This Code template is for regression analysis using a RandomForestRegressor based on the Ensemble Learning technique using feature scaling via Normalizer",
                        "URL": "https://cdn.siberian.dev/code/Regression/Random_Forest/RandomForestRegressor_Normalize.ipynb",
                        "keywords": "code template, regression, randomforestregressor,ensemble,learning technique,scaling,normalizer",
                        "display_url": "https://siberian.dev/regression/random-forest/randomforestregressor-with-normalize"
                    },
                    {
                        "name": "RandomForestRegressor_RobustScaler.ipynb",
                        "title": "RandomForestRegressor with RobustScaler",
                        "description": "This Code template is for regression analysis using a RandomForestRegressor based on the Ensemble Learning technique using feature scaling via RobustScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Random_Forest/RandomForestRegressor_RobustScaler.ipynb",
                        "keywords": "code template, regression, randomforestregressor,ensemble,learning technique,scaling,robustscaler",
                        "display_url": "https://siberian.dev/regression/random-forest/randomforestregressor-with-robustscaler"
                    },
                    {
                        "name": "RandomForestRegressor_Scale.ipynb",
                        "title": "RandomForestRegressor with Scale",
                        "description": "This Code template is for regression analysis using a RandomForestRegressor based on the Ensemble Learning technique using feature scaling via scale",
                        "URL": "https://cdn.siberian.dev/code/Regression/Random_Forest/RandomForestRegressor_Scale.ipynb",
                        "keywords": "code template, regression, randomforestregressor,ensemble,learning technique,scaling,scale",
                        "display_url": "https://siberian.dev/regression/random-forest/randomforestregressor-with-scale"
                    },
                    {
                        "name": "RandomForestRegressor_StandardScaler.ipynb",
                        "title": "RandomForestRegressor with StandardScaler",
                        "description": "This Code template is for regression analysis using a RandomForestRegressor based on the Ensemble Learning technique using feature scaling via StandardScaler",
                        "URL": "https://cdn.siberian.dev/code/Regression/Random_Forest/RandomForestRegressor_StandardScaler.ipynb",
                        "keywords": "code template, regression, randomforestregressor,ensemble,learning technique,scaling,standardscaler",
                        "display_url": "https://siberian.dev/regression/random-forest/randomforestregressor-with-standardscaler"
                    }
                ]
            },
            {
                "name": "Support_Vector_Machine",
                "models": [
                    {
                        "name": "LinearSVR.ipynb",
                        "title": "Linear Support Vector Regressor",
                        "description": "This Code template is for regression analysis using a simple Linear Support Vector Regressor(LinearSVR) based on the Support Vector Machine algorithm. It provides a faster implementation than SVR but only considers the linear kernel.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR.ipynb",
                        "keywords": "code template, regression, simple, linear, support, vector, regressorlinearsvr,support, vector, machine,provides, faster,svr, considers, linear, kernel",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linear-support-vector-regressor"
                    },
                    {
                        "name": "LinearSVR_MinMaxScaler.ipynb",
                        "title": "Linear Support Vector Regressor with MinMaxScalar",
                        "description": "This Code template is for regression analysis using a Linear Support Vector Regressor(LinearSVR) based on the Support Vector Machine algorithm and feature rescaling technique MinMaxScaler in a pipeline. It provides a faster implementation than SVR but only considers the linear kernel.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, linear, support, vector, regressorlinearsvr,support, vector, machine,rescaling technique, minmaxscaler, pipeline, provides, faster,svr, considers, linear, kernel",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linear-support-vector-regressor-with-minmaxscalar"
                    },
                    {
                        "name": "LinearSVR_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "LinearSVR with MinMaxScaler & Polynomial Features",
                        "description": "This Code template is for regression analysis using a Linear Support Vector Regressor(LinearSVR) based on the Support Vector Machine algorithm using MinMaxScaler and feature transformation technique Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, linear, support, vector, regressorlinearsvr,support, vector, machine,minmaxscaler, data tranformation technique, polynomial, s, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linearsvr-with-minmaxscaler-&-polynomial-features"
                    },
                    {
                        "name": "LinearSVR_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "LinearSVR with MinMaxScaler & Power Transformer",
                        "description": "This Code template is for the Classification task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with Power Transformer as Feature Transformation Technique and MinMaxScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, regressor, svr,support, vector, machine,power, transformer, data tranformation technique, minmaxscaler, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linearsvr-with-minmaxscaler-&-power-transformer"
                    },
                    {
                        "name": "LinearSVR_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "LinearSVR with MinMaxScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with Quantile Transformer as Feature Transformation Technique and MinMaxScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, regressor, svr,support, vector, machine,quantile transformer, data tranformation technique, minmaxscaler, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linearsvr-with-minmaxscaler-&-quantile-transformer"
                    },
                    {
                        "name": "LinearSVR_Normalize.ipynb",
                        "title": "Linear Support Vector Regressor with Normailze",
                        "description": "This Code template is for regression analysis using a Linear Support Vector Regressor(LinearSVR) based on the Support Vector Machine algorithm and feature rescaling technique Normalize in a pipeline. It provides a faster implementation than SVR but only considers the linear kernel.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_Normalize.ipynb",
                        "keywords": "code template, regression, linear, support, vector, regressorlinearsvr,support, vector, machine,rescaling technique, normalize, pipeline, provides, faster,svr, considers, linear, kernel",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linear-support-vector-regressor-with-normailze"
                    },
                    {
                        "name": "LinearSVR_Normalize_PolynomialFeatures.ipynb",
                        "title": "LinearSVR with Normalize & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a LinearSVR where separate rescaling is done using Normalize and feature transformation is done using PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, linearsvr, rescaling,normalize, data tranformation,polynomials, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linearsvr-with-normalize-&-polynomial-features"
                    },
                    {
                        "name": "LinearSVR_Normalize_PowerTransformer.ipynb",
                        "title": "LinearSVR with Normalize and PowerTransformer",
                        "description": "This Code template is for the Classification task using Linear Support Vector Regression(LinearSVR) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique, rescaling technique normalization in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_Normalize_PowerTransformer.ipynb",
                        "keywords": "code template, classification,linear, support, vector, regressionlinearsvr,support, vector, machine,powertransformer, data tranformation technique, rescaling technique, normalization, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linearsvr-with-normalize-and-powertransformer"
                    },
                    {
                        "name": "LinearSVR_Normalize_QuantileTransformer.ipynb",
                        "title": "LinearSVR with Normalize and QuantileTransformer",
                        "description": "This Code template is for the Classification task using Linear Support Vector Regression(LinearSVR) based on the Support Vector Machine algorithm with QuantileTransformer as Feature Transformation Technique, rescaling technique normalization in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_Normalize_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,linear, support, vector, regressionlinearsvr,support, vector, machine,quantiletransformer, data tranformation technique, rescaling technique, normalization, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linearsvr-with-normalize-and-quantiletransformer"
                    },
                    {
                        "name": "LinearSVR_PolynomialFeatures.ipynb",
                        "title": "Linear Support Vector Regressor with PolynomialFeatures",
                        "description": "This Code template is for regression analysis using a Linear Support Vector Regressor(LinearSVR) based on the Support Vector Machine algorithm and feature transformation technique PolynomialFeatures in a pipeline. It provides a faster implementation than SVR but only considers the linear kernel.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, linear, support, vector, regressorlinearsvr,support, vector, machine,data tranformation technique, polynomials, pipeline, provides, faster,svr, considers, linear, kernel",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linear-support-vector-regressor-with-polynomialfeatures"
                    },
                    {
                        "name": "LinearSVR_PowerTransformer.ipynb",
                        "title": "Linear Support Vector Regressor with PowerTransformer",
                        "description": "This Code template is for the Classification task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with Power Transformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_PowerTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, regressor, svr,support, vector, machine,power, transformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linear-support-vector-regressor-with-powertransformer"
                    },
                    {
                        "name": "LinearSVR_QuantileTransformer.ipynb",
                        "title": "Linear Support Vector Regressor with QuantileTransformer",
                        "description": "This Code template is for the Classification task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with Quantile Transformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, regressor, svr,support, vector, machine,quantile transformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linear-support-vector-regressor-with-quantiletransformer"
                    },
                    {
                        "name": "LinearSVR_RobustScaler.ipynb",
                        "title": "Linear Support Vector Regressor with RobustScaler",
                        "description": "This Code template is for regression analysis using a Linear Support Vector Regressor(LinearSVR) based on the Support Vector Machine algorithm and feature rescaling technique RobustScaler in a pipeline. It provides a faster implementation than SVR but only considers the linear kernel.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_RobustScaler.ipynb",
                        "keywords": "code template, regression, linear, support, vector, regressorlinearsvr,support, vector, machine,rescaling technique, robustscaler, pipeline, provides, faster,svr, considers, linear, kernel",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linear-support-vector-regressor-with-robustscaler"
                    },
                    {
                        "name": "LinearSVR_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "LinearSVR with RobustScaler & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a LinearSVR where separate rescaling is done using RobustScaler and feature transformation is done using PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, linearsvr, rescaling,robustscaler, data tranformation,polynomials, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linearsvr-with-robustscaler-&-polynomial-features"
                    },
                    {
                        "name": "LinearSVR_RobustScaler_PowerTransformer.ipynb",
                        "title": "LinearSVR with RobustScaler & Power Transformer",
                        "description": "This Code template is for the Classification task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with Power Transformer as Feature Transformation Technique and RobustScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, regressor, svr,support, vector, machine,power, transformer, data tranformation technique, robustscaler, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linearsvr-with-robustscaler-&-power-transformer"
                    },
                    {
                        "name": "LinearSVR_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Linear Support Vector Regressor with QuantileTransformer and RobustScaler",
                        "description": "This Code template is for the Classification task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with Quantile Transformer as Feature Transformation Technique and RobustScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, regressor, svr,support, vector, machine,quantile transformer, data tranformation technique, robustscaler, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linear-support-vector-regressor-with-quantiletransformer-and-robustscaler"
                    },
                    {
                        "name": "LinearSVR_Scale.ipynb",
                        "title": "Linear Support Vector Regressor with Scale",
                        "description": "This Code template is for regression analysis using a Linear Support Vector Regressor(LinearSVR) based on the Support Vector Machine algorithm and feature rescaling technique Scale in a pipeline. It provides a faster implementation than SVR but only considers the linear kernel.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_Scale.ipynb",
                        "keywords": "code template, regression, linear, support, vector, regressorlinearsvr,support, vector, machine,rescaling technique, scale, pipeline, provides, faster,svr, considers, linear, kernel",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linear-support-vector-regressor-with-scale"
                    },
                    {
                        "name": "LinearSVR_Scale_PolynomialFeatures.ipynb",
                        "title": "LinearSVR with Scale & Polynomial Features",
                        "description": "This Code template is for the Classification task using Linear Support Vector Regression(LinearSVR) based on the Support Vector Machine algorithm with PolynomialFeatures as Feature Transformation Technique, rescaling technique scaling in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_Scale_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,linear, support, vector, regressionlinearsvr,support, vector, machine,polynomials, data tranformation technique, rescaling technique, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linearsvr-with-scale-&-polynomial-features"
                    },
                    {
                        "name": "LinearSVR_Scale_PowerTransformer.ipynb",
                        "title": "LinearSVR with Scale & Power Transformer",
                        "description": "This Code template is for the regression analysis using a LinearSVR regressor where rescaling is done using Scale and feature transformation is done using Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, regression, linearsvr, regressor, rescaling,scale, data tranformation,power, transformer, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linearsvr-with-scale-&-power-transformer"
                    },
                    {
                        "name": "LinearSVR_Scale_QuantileTransformer.ipynb",
                        "title": "Linear Support Vector Regressor with QuantileTransformer and Scale",
                        "description": "This Code template is for the Classification task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with Quantile Transformer as Feature Transformation Technique and Scale for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_Scale_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, regressor, svr,support, vector, machine,quantile transformer, data tranformation technique, scale, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linear-support-vector-regressor-with-quantiletransformer-and-scale"
                    },
                    {
                        "name": "LinearSVR_StandardScaler.ipynb",
                        "title": "Linear Support Vector Regressor with StandardScaler",
                        "description": "This Code template is for regression analysis using a Linear Support Vector Regressor(LinearSVR) based on the Support Vector Machine algorithm and feature rescaling technique StandardScaler in a pipeline. It provides a faster implementation than SVR but only considers the linear kernel.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_StandardScaler.ipynb",
                        "keywords": "code template, regression, linear, support, vector, regressorlinearsvr,support, vector, machine,rescaling technique, standardscaler, pipeline, provides, faster,svr, considers, linear, kernel",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linear-support-vector-regressor-with-standardscaler"
                    },
                    {
                        "name": "LinearSVR_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Linear Support Vector Regressor with Standard Scaler and PolynomialFeatures",
                        "description": "This Code template is for the Classification task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with PolynomialFeatures as Feature Transformation Technique and Standard Scaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,support, vector, regressor, svr,support, vector, machine,polynomials, data tranformation technique, standard, scaler, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linear-support-vector-regressor-with-standard-scaler-and-polynomialfeatures"
                    },
                    {
                        "name": "LinearSVR_StandardScaler_PowerTransformer.ipynb",
                        "title": "Linear Support Vector Regressor with PowerTransformer and Standard Scaler",
                        "description": "This Code template is for the Classification task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with Power Transformer as Feature Transformation Technique and Standard Scaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, regressor, svr,support, vector, machine,power, transformer, data tranformation technique, standard, scaler, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linear-support-vector-regressor-with-powertransformer-and-standard-scaler"
                    },
                    {
                        "name": "LinearSVR_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Linear Support Vector Regressor with QuantileTransformer and Standard Scaler",
                        "description": "This Code template is for the Classification task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with Quantile Transformer as Feature Transformation Technique and Standard Scaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/LinearSVR_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, regressor, svr,support, vector, machine,quantile transformer, data tranformation technique, standard, scaler, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/linear-support-vector-regressor-with-quantiletransformer-and-standard-scaler"
                    },
                    {
                        "name": "NuSVR.ipynb",
                        "title": "Nu-Support Vector Regression",
                        "description": "This Code template is for regression analysis using a simple Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR.ipynb",
                        "keywords": "code template, regression, simple, nusupport, vector, regressornusvr,support, vector, machine,",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/nu-support-vector-regression"
                    },
                    {
                        "name": "NuSVR_MinMaxScaler.ipynb",
                        "title": "NuSVR with MinMaxScaler",
                        "description": "This Code template is for the regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm and the feature rescaling technique MinMaxScaler in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, nusupport, vector, regressornusvr,support, vector, machine,rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/nusvr-with-minmaxscaler"
                    },
                    {
                        "name": "NuSVR_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "Nu-Support Vector Regression with MinMaxScaler & PolynomialFeatures",
                        "description": "This Code template is for regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with PolynomialFeatures as Feature Transformation Technique and MinMaxScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, nusupport, vector, regressornusvr,support, vector, machine,polynomials, data tranformation technique, minmaxscaler, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/nu-support-vector-regression-with-minmaxscaler-&-polynomialfeatures"
                    },
                    {
                        "name": "NuSVR_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "NuSVR with MinMaxScaler & Power Transformer",
                        "description": "This Code template is for regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique and MinMaxScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, nusupport, vector, regressornusvr,support, vector, machine,powertransformer, data tranformation technique, minmaxscaler, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/nusvr-with-minmaxscaler-&-power-transformer"
                    },
                    {
                        "name": "NuSVR_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "NuSVR with MinMaxScaler & Quantile Transformer",
                        "description": "This Code template is for regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with Quantile Transformer as Feature Transformation Technique and MinMaxScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, nusupport, vector, regressornusvr,support, vector, machine,quantile transformer, data tranformation technique, minmaxscaler, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/nusvr-with-minmaxscaler-&-quantile-transformer"
                    },
                    {
                        "name": "NuSVR_Normalize.ipynb",
                        "title": "NuSVR with Normalize",
                        "description": "This Code template is for the regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm and the feature rescaling technique as Normalization",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_Normalize.ipynb",
                        "keywords": "code template, regression, nusupport, vector, regressornusvr,support, vector, machine,rescaling technique, normalization",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/nusvr-with-normalize"
                    },
                    {
                        "name": "NuSVR_Normalize_PolynomialFeatures.ipynb",
                        "title": "NuSVR with Normalize & Polynomial features",
                        "description": "This Code template is for regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with Polynomial Features as Feature Transformation Technique and Normalization for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, nusupport, vector, regressornusvr,support, vector, machine,polynomial, s, data tranformation technique, normalization, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/nusvr-with-normalize-&-polynomial-features"
                    },
                    {
                        "name": "NuSVR_Normalize_QuantileTransformer.ipynb",
                        "title": "NuSVR with Normalize & Quantile Transformer",
                        "description": "This Code template is for regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with QuantileTransformer as Feature Transformation Technique and Normalization for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_Normalize_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, nusupport, vector, regressornusvr,support, vector, machine,quantiletransformer, data tranformation technique, normalization, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/nusvr-with-normalize-&-quantile-transformer"
                    },
                    {
                        "name": "NuSVR_PowerTransformer.ipynb",
                        "title": "Nu-Support Vector Regression with Power Transformer",
                        "description": "This Code template is for regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_PowerTransformer.ipynb",
                        "keywords": "code template, regression, nusupport, vector, regressornusvr,support, vector, machine,powertransformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/nu-support-vector-regression-with-power-transformer"
                    },
                    {
                        "name": "NuSVR_QuantileTransformer.ipynb",
                        "title": "Nu-Support Vector Regression with Quantile Transformer",
                        "description": "This Code template is for regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with Quantile Transformer as Feature Transformation Technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, nusupport, vector, regressornusvr,support, vector, machine,quantile transformer, data tranformation technique, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/nu-support-vector-regression-with-quantile-transformer"
                    },
                    {
                        "name": "NuSVR_RobustScaler.ipynb",
                        "title": "NuSVR with RobustScaler",
                        "description": "This Code template is for regression analysis using the NuSVR Regressor where rescaling method used is RobustScale.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_RobustScaler.ipynb",
                        "keywords": "code template, regression, nusvr, regressor, rescaling, method, robustscale",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/nusvr-with-robustscaler"
                    },
                    {
                        "name": "NuSVR_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "NuSVR with RobustScaler & Polynomial Features",
                        "description": "This Code template is for regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with Polynomial Features as Feature Transformation Technique and RobustScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, nusupport, vector, regressornusvr,support, vector, machine,polynomial, s, data tranformation technique, robustscaler, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/nusvr-with-robustscaler-&-polynomial-features"
                    },
                    {
                        "name": "NuSVR_RobustScaler_PowerTransformer.ipynb",
                        "title": "NuSVR with RobustScaler & Power Transformer",
                        "description": "This Code template is for regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique and RobustScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, nusupport, vector, regressornusvr,support, vector, machine,powertransformer, data tranformation technique, robustscaler, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/nusvr-with-robustscaler-&-power-transformer"
                    },
                    {
                        "name": "NuSVR_RobustScaler_QuantileTransformer.ipynb",
                        "title": "NuSVR with RobustScaler & Quantile Transformer",
                        "description": "This Code template is for regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with QuantileTransformer as Feature Transformation Technique and RobustScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, nusupport, vector, regressornusvr,support, vector, machine,quantiletransformer, data tranformation technique, robustscaler, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/nusvr-with-robustscaler-&-quantile-transformer"
                    },
                    {
                        "name": "NuSVR_Scale_PolynomialFeatures.ipynb",
                        "title": "NuSVR with Scale &  Polynomial Features",
                        "description": "This Code template is for the regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm and the feature rescaling technique Scale & feature transform Polynomial Features in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_Scale_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, nusupport, vector, regressornusvr,support, vector, machine,rescaling technique, scale,transform, polynomial, s, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/nusvr-with-scale-&--polynomial-features"
                    },
                    {
                        "name": "NuSVR_Scale_PowerTransformer.ipynb",
                        "title": "NuSVR with Scale &  Power Transformer",
                        "description": "This Code template is for the regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm and the feature rescaling technique Scale & feature transform Power Transformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, regression, nusupport, vector, regressornusvr,support, vector, machine,rescaling technique, scale,transform, power, transformer, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/nusvr-with-scale-&--power-transformer"
                    },
                    {
                        "name": "NuSVR_StandardScaler.ipynb",
                        "title": "Nu-Support Vector Regression with StandardScaler",
                        "description": "This Code template is for regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_StandardScaler.ipynb",
                        "keywords": "code template, regression, nusupport, vector, regressornusvr,support, vector, machine,rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/nu-support-vector-regression-with-standardscaler"
                    },
                    {
                        "name": "NuSVR_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "Nu-Support Vector Regression with StandardScaler & PolynomialFeatures",
                        "description": "This Code template is for regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with PolynomialFeatures as Feature Transformation Technique and StandardScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, nusupport, vector, regressornusvr,support, vector, machine,polynomials, data tranformation technique, standardscaler, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/nu-support-vector-regression-with-standardscaler-&-polynomialfeatures"
                    },
                    {
                        "name": "NuSVR_StandardScaler_PowerTransformer.ipynb",
                        "title": "Nu-Support Vector Regression with StandardScaler & Power Transformer",
                        "description": "This Code template is for regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique and StandardScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, nusupport, vector, regressornusvr,support, vector, machine,powertransformer, data tranformation technique, standardscaler, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/nu-support-vector-regression-with-standardscaler-&-power-transformer"
                    },
                    {
                        "name": "NuSVR_StandardScaler_QuantileTransformer.ipynb",
                        "title": "Nu-Support Vector Regression with StandardScaler & Quantile Transformer",
                        "description": "This Code template is for regression analysis using a Nu-Support Vector Regressor(NuSVR) based on the Support Vector Machine algorithm with Quantile Transformer as Feature Transformation Technique and StandardScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/NuSVR_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, nusupport, vector, regressornusvr,support, vector, machine,quantile transformer, data tranformation technique, standardscaler, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/nu-support-vector-regression-with-standardscaler-&-quantile-transformer"
                    },
                    {
                        "name": "SVR.ipynb",
                        "title": "Support Vector Regression",
                        "description": "This Code template is for regression analysis using simple Support Vector Regressor(SVR) based on the Support Vector Machine algorithm.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR.ipynb",
                        "keywords": "code template, regression, simple, support, vector, regressorsvr,support, vector, machine,",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/support-vector-regression"
                    },
                    {
                        "name": "SVR_MinMaxScaler.ipynb",
                        "title": "Support Vector Regression with MinMaxScaler",
                        "description": "This Code template is for regression analysis using Support Vector Regressor(SVR) based on the Support Vector Machine algorithm and feature rescaling technique MinMaxScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, support, vector, regressorsvr,support, vector, machine,rescaling technique, minmaxscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/support-vector-regression-with-minmaxscaler"
                    },
                    {
                        "name": "SVR_MinMaxScaler_PolynomialFeatures.ipynb",
                        "title": "SVR with MinMaxScaler & Polynomial Features",
                        "description": "This Code template is for regression analysis using Support Vector Regressor(SVR) based on the Support Vector Machine algorithm with MinMaxScaler and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_MinMaxScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, support, vector, regressorsvr,support, vector, machine,minmaxscaler, data tranformation technique, polynomials, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/svr-with-minmaxscaler-&-polynomial-features"
                    },
                    {
                        "name": "SVR_MinMaxScaler_PowerTransformer.ipynb",
                        "title": "Support Vector Regression with MinMaxScaler and PowerTransformer",
                        "description": "This Code template is for regression analysis using simple Support Vector Regressor(SVR) based on the Support Vector Machine algorithm with feature rescaling technique MinMaxScaler and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_MinMaxScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, support, vector, regressorsvr,support, vector, machine,rescaling technique, minmaxscaler, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/support-vector-regression-with-minmaxscaler-and-powertransformer"
                    },
                    {
                        "name": "SVR_MinMaxScaler_QuantileTransformer.ipynb",
                        "title": "Support Vector Regression with MinMaxScaler and QuantileTransformer",
                        "description": "This Code template is for regression analysis using simple Support Vector Regressor(SVR) based on the Support Vector Machine algorithm with feature rescaling technique MinMaxScaler and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_MinMaxScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, simple, support, vector, regressorsvr,support, vector, machine,rescaling technique, minmaxscaler, data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/support-vector-regression-with-minmaxscaler-and-quantiletransformer"
                    },
                    {
                        "name": "SVR_Normalize.ipynb",
                        "title": "Support Vector Regression with Normalize",
                        "description": "This Code template is for regression analysis using Support Vector Regressor(SVR) based on the Support Vector Machine algorithm and feature rescaling technique Normalize.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_Normalize.ipynb",
                        "keywords": "code template, regression, support, vector, regressorsvr,support, vector, machine,rescaling technique, normalize",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/support-vector-regression-with-normalize"
                    },
                    {
                        "name": "SVR_Normalize_PolynomialFeatures.ipynb",
                        "title": "SVR with Normalize & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a SVR where separate rescaling is done using Normalize and feature transformation is done using PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_Normalize_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, svr, rescaling,normalize, data tranformation,polynomials, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/svr-with-normalize-&-polynomial-features"
                    },
                    {
                        "name": "SVR_Normalize_PowerTransformer.ipynb",
                        "title": "SVR with Normalize & PowerTransformer",
                        "description": "This Code template is for the regression analysis using a SVR where separate rescaling is done using Normalize and feature transformation is done using PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_Normalize_PowerTransformer.ipynb",
                        "keywords": "code template, regression, svr, rescaling,normalize, data tranformation,powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/svr-with-normalize-&-powertransformer"
                    },
                    {
                        "name": "SVR_Normalize_QuantileTransformer.ipynb",
                        "title": "SVR with Normalize & Polynomial Features",
                        "description": "This Code template is for the regression analysis using a SVR where separate rescaling is done using Normalize and feature transformation is done using QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_Normalize_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, svr, rescaling,normalize, data tranformation,quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/svr-with-normalize-&-polynomial-features"
                    },
                    {
                        "name": "SVR_PolynomialFeatures.ipynb",
                        "title": "Support Vector Regression with Polynomial Features",
                        "description": "This Code template is for regression analysis using Support Vector Regressor(SVR) based on the Support Vector Machine algorithm and feature transformation technique PolynomialFeatures in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, support, vector, regressorsvr,support, vector, machine,data tranformation technique, polynomials, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/support-vector-regression-with-polynomial-features"
                    },
                    {
                        "name": "SVR_PowerTransformer.ipynb",
                        "title": "SVR with Power Transformer",
                        "description": "This Code template is for regression analysis using Support Vector Regression(SVR) based on the Support Vector Machine algorithm and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_PowerTransformer.ipynb",
                        "keywords": "code template, regression, support, vector, regressionsvr,support, vector, machine,data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/svr-with-power-transformer"
                    },
                    {
                        "name": "SVR_QuantileTransformer.ipynb",
                        "title": "SVR with Quantile Transformer",
                        "description": "This Code template is for regression analysis using Support Vector Regression(SVR) based on the Support Vector Machine algorithm and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, support, vector, regressionsvr,support, vector, machine,data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/svr-with-quantile-transformer"
                    },
                    {
                        "name": "SVR_RobustScaler.ipynb",
                        "title": "Support Vector Regression with RobustScaler",
                        "description": "This Code template is for regression analysis using Support Vector Regressor(SVR) based on the Support Vector Machine algorithm and feature rescaling technique RobustScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_RobustScaler.ipynb",
                        "keywords": "code template, regression, support, vector, regressorsvr,support, vector, machine,rescaling technique, robustscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/support-vector-regression-with-robustscaler"
                    },
                    {
                        "name": "SVR_RobustScaler_PolynomialFeatures.ipynb",
                        "title": "SVR with RobustScaler & Polynomial Features",
                        "description": "This Code template is for the regression analysis using SVR and the feature transformation technique of Polynomial Feature and Robust Scaling rescaling technique in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_RobustScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, regression, svr, data tranformation technique, polynomial, robust, scaling, rescaling technique, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/svr-with-robustscaler-&-polynomial-features"
                    },
                    {
                        "name": "SVR_RobustScaler_PowerTransformer.ipynb",
                        "title": "Support Vector Regression with RobustScaler and PowerTransformer",
                        "description": "This Code template is for regression analysis using simple Support Vector Regressor(SVR) based on the Support Vector Machine algorithm with feature rescaling technique RobustScaler and feature transformation technique PowerTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_RobustScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, simple, support, vector, regressorsvr,support, vector, machine,rescaling technique, robustscaler, data tranformation technique, powertransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/support-vector-regression-with-robustscaler-and-powertransformer"
                    },
                    {
                        "name": "SVR_RobustScaler_QuantileTransformer.ipynb",
                        "title": "Support Vector Regression with RobustScaler and QuantileTransformer",
                        "description": "This Code template is for regression analysis using simple Support Vector Regressor(SVR) based on the Support Vector Machine algorithm with feature rescaling technique RobustScaler and feature transformation technique QuantileTransformer in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_RobustScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, simple, support, vector, regressorsvr,support, vector, machine,rescaling technique, robustscaler, data tranformation technique, quantiletransformer, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/support-vector-regression-with-robustscaler-and-quantiletransformer"
                    },
                    {
                        "name": "SVR_Scale.ipynb",
                        "title": "Support Vector Regression with Scale",
                        "description": "This Code template is for regression analysis using Support Vector Regressor(SVR) based on the Support Vector Machine algorithm and feature rescaling technique Standardize using Scale function.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_Scale.ipynb",
                        "keywords": "code template, regression, support, vector, regressorsvr,support, vector, machine,rescaling technique, standardize,scale, function",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/support-vector-regression-with-scale"
                    },
                    {
                        "name": "SVR_Scale_PolynomialFeatures.ipynb",
                        "title": "SVR with Scale & Polynomial Features",
                        "description": "This Code template is for the Classification task using Support Vector Regression(SVR) based on the Support Vector Machine algorithm with PolynomialFeatures as Feature Transformation Technique rescaling technique Scaling in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_Scale_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,support, vector, regressionsvr,support, vector, machine,polynomials, data tranformation technique, rescaling technique, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/svr-with-scale-&-polynomial-features"
                    },
                    {
                        "name": "SVR_Scale_PowerTransformer.ipynb",
                        "title": "SVR with Scale & Power Transformer",
                        "description": "This Code template is for the Classification task using Support Vector Regression(SVR) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique, rescaling technique Scaling in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_Scale_PowerTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, regressionsvr,support, vector, machine,powertransformer, data tranformation technique, rescaling technique, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/svr-with-scale-&-power-transformer"
                    },
                    {
                        "name": "SVR_Scale_QuantileTransformer.ipynb",
                        "title": "SVR with Scale & Quantile Transformer",
                        "description": "This Code template is for regression analysis using the SVR Regressor where rescaling method used is Scale and feature transformation is done via Quantile Transformer.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_Scale_QuantileTransformer.ipynb",
                        "keywords": "code template, regression, svr, regressor, rescaling, method, scale, data tranformation,quantile transformer",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/svr-with-scale-&-quantile-transformer"
                    },
                    {
                        "name": "SVR_StandardScaler.ipynb",
                        "title": "Support Vector Regression with StandardScaler",
                        "description": "This Code template is for regression analysis using Support Vector Regressor(SVR) based on the Support Vector Machine algorithm and feature rescaling technique StandardScaler in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_StandardScaler.ipynb",
                        "keywords": "code template, regression, support, vector, regressorsvr,support, vector, machine,rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/support-vector-regression-with-standardscaler"
                    },
                    {
                        "name": "SVR_StandardScaler_PolynomialFeatures.ipynb",
                        "title": "SVR with StandardScaler & Polynomial Features",
                        "description": "This Code template is for the Classification task using Support Vector Regression(SVR) based on the Support Vector Machine algorithm with PolynomialFeatures as Feature Transformation Technique rescaling technique StandardScaler in a pipeline",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_StandardScaler_PolynomialFeatures.ipynb",
                        "keywords": "code template, classification,support, vector, regressionsvr,support, vector, machine,polynomials, data tranformation technique, rescaling technique, standardscaler, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/svr-with-standardscaler-&-polynomial-features"
                    },
                    {
                        "name": "SVR_StandardScaler_PowerTransformer.ipynb",
                        "title": "SVR with StandardScaler & Power Transformer",
                        "description": "This Code template is for regression analysis using a Support Vector Regressor(SVR) based on the Support Vector Machine algorithm with PowerTransformer as Feature Transformation Technique and StandardScaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_StandardScaler_PowerTransformer.ipynb",
                        "keywords": "code template, regression, support, vector, regressorsvr,support, vector, machine,powertransformer, data tranformation technique, standardscaler, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/svr-with-standardscaler-&-power-transformer"
                    },
                    {
                        "name": "SVR_StandardScaler_QuantileTransformer.ipynb",
                        "title": "SVR with StandardScaler & Quantile Transformer",
                        "description": "This Code template is for the Classification task using Support Vector Regressor (SVR) based on the Support Vector Machine algorithm with Quantile Transformer as Feature Transformation Technique and Standard Scaler for Feature Scaling in a pipeline.",
                        "URL": "https://cdn.siberian.dev/code/Regression/Support_Vector_Machine/SVR_StandardScaler_QuantileTransformer.ipynb",
                        "keywords": "code template, classification,support, vector, regressor, svr,support, vector, machine,quantile transformer, data tranformation technique, standard, scaler, scaling, pipeline",
                        "display_url": "https://siberian.dev/regression/support-vector-machine/svr-with-standardscaler-&-quantile-transformer"
                    }
                ]
            },
            {
                "name": "XGBoost",
                "models": [
                    {
                        "name": "XGBoostRegressor.ipynb",
                        "title": "Extreme Gradient Boosting Regressor",
                        "description": "This Code template is for regression analysis using XGBoostRegressor under the XGBoost framework. It is a decision Tree-based ensemble Machine Learning algorithm that uses a Gradient Boosting framework.",
                        "URL": "https://cdn.siberian.dev/code/Regression/XGBoost/XGBoostRegressor.ipynb",
                        "keywords": "code template, regression, xgboostregressor, xgboost, framework, decision, treebased, ensemble, machine learning,gradient boosting, framework",
                        "display_url": "https://siberian.dev/regression/xgboost/extreme-gradient-boosting-regressor"
                    },
                    {
                        "name": "XGBoostRegressor_DMatrix.ipynb",
                        "title": "Extreme Gradient Boosting Regression using DMatrix",
                        "description": "This Code template is for regression analysis using XGBoost along with the DMatrix. DMatrix is an internal data structure that gets used by the XGBoost framework. It is optimized for both memory efficiency and training speed.",
                        "URL": "https://cdn.siberian.dev/code/Regression/XGBoost/XGBoostRegressor_DMatrix.ipynb",
                        "keywords": "code template, regression, xgboost, dmatrix, dmatrix, internal, data, structure, xgboost, framework, optimized, memory, efficiency, training, speed",
                        "display_url": "https://siberian.dev/regression/xgboost/extreme-gradient-boosting-regression-using-dmatrix"
                    },
                    {
                        "name": "XGBoostRegressor_MinMaxScaler.ipynb",
                        "title": "XGBoostRegressor with MinMaxScaler",
                        "description": "This Code template is for regression analysis using XGBoostRegressor under the XGBoost framework. It is a decision Tree-based ensemble Machine Learning algorithm that uses a Gradient Boosting framework.",
                        "URL": "https://cdn.siberian.dev/code/Regression/XGBoost/XGBoostRegressor_MinMaxScaler.ipynb",
                        "keywords": "code template, regression, xgboostregressor, xgboost, framework, decision, treebased, ensemble, machine learning,gradient boosting, framework",
                        "display_url": "https://siberian.dev/regression/xgboost/xgboostregressor-with-minmaxscaler"
                    },
                    {
                        "name": "XGBoostRegressor_Normalize.ipynb",
                        "title": "XGBoostRegressor with Normalize",
                        "description": "This Code template is for regression analysis using XGBoostRegressor under the XGBoost framework with feature rescaling technique Normalize. It is a decision Tree-based ensemble Machine Learning algorithm that uses a Gradient Boosting framework.",
                        "URL": "https://cdn.siberian.dev/code/Regression/XGBoost/XGBoostRegressor_Normalize.ipynb",
                        "keywords": "code template, regression, xgboostregressor, xgboost, framework, rescaling technique, normalize, decision, treebased, ensemble, machine learning,gradient boosting, framework",
                        "display_url": "https://siberian.dev/regression/xgboost/xgboostregressor-with-normalize"
                    },
                    {
                        "name": "XGBoostRegressor_RobustScaler.ipynb",
                        "title": "XGBoostRegressor with RobustScaler",
                        "description": "This Code template is for regression analysis using XGBoostRegressor under the XGBoost framework. It is a decision Tree-based ensemble Machine Learning algorithm that uses a Gradient Boosting framework.",
                        "URL": "https://cdn.siberian.dev/code/Regression/XGBoost/XGBoostRegressor_RobustScaler.ipynb",
                        "keywords": "code template, regression, xgboostregressor, xgboost, framework, decision, treebased, ensemble, machine learning,gradient boosting, framework",
                        "display_url": "https://siberian.dev/regression/xgboost/xgboostregressor-with-robustscaler"
                    },
                    {
                        "name": "XGBoostRegressor_StandardScaler.ipynb",
                        "title": "XGBoostRegressor with StandardScaler---",
                        "description": "This Code template is for regression analysis using XGBoostRegressor with StandardScaler under the XGBoost framework. It is a decision Tree-based ensemble Machine Learning algorithm that uses a Gradient Boosting framework.",
                        "URL": "https://cdn.siberian.dev/code/Regression/XGBoost/XGBoostRegressor_StandardScaler.ipynb",
                        "keywords": "code template, regression, xgboostregressor, standardscaler, xgboost, framework, decision, treebased, ensemble, machine learning,gradient boosting, framework",
                        "display_url": "https://siberian.dev/regression/xgboost/xgboostregressor-with-standardscaler---"
                    }
                ]
            }
        ]
    },
    {
        "name": "Time_Series_Analysis",
        "image": "https://cdn.siberian.dev/code-gen/timeseries_blue.png",
        "description": "Learn trends in sequential data plotted on a time scale.",
        "models": [
            {
                "name": "Time_Series_Forecasting",
                "models": [
                    {
                        "name": "ARIMA.ipynb",
                        "title": "Simple ARIMA",
                        "description": "This code template is for Time Series Analysis and Forecasting utilizing Auto-Regressive Integrated Moving Average( ARIMA) algorithm. ARIMA model is a combination of several differences already applied to the model to make it stationary, the number of previous lags along with residual errors to forecast future values.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/ARIMA.ipynb",
                        "keywords": "code template, time series forecasting, scientific predictions,arima, Auto-Regressive Integrated Moving Average",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-quantiletransformer"
                    },
                    {
                        "name": "ARIMAX.ipynb",
                        "title": "Simple ARIMAX",
                        "description": "This code template is for Time Series Analysis and Forecasting to make scientific predictions based on historical time-stamped data with the help of the ARIMAX algorithm. An Autoregressive Integrated Moving Average with Explanatory Variable (ARIMAX) model can be viewed as a multiple regression model with one or more autoregressive (AR) terms and one or more moving average (MA) terms.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/ARIMAX.ipynb",
                        "keywords": "code template, time series forecasting, scientific predictions,historical time,Autoregressive Integrated Moving Average with Explanatory Variable,",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-robust-scaler"
                    },
                    {
                        "name": "ARMA.ipynb",
                        "title": "Time series analysis using AutoRegressionMovingAverage",
                        "description": "This code template is for Time Series Analysis and Forecasting to make scientific predictions based on historical time-stamped data using the AutoRegression MovingAverage algorithm. It is a model that is a combination of the AR and MA models. The impact of previous lags, along with the residuals, is considered for forecasting the future values of the time series.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/ARMA.ipynb",
                        "keywords": "code template, time series forecasting, scientific predictions,historical time, autoregression, predictions ARMA",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-scale"
                    },
                    {
                        "name": "AutoRegression.ipynb",
                        "title": "Time series analysis using AutoRegression",
                        "description": "The code template is for Time Series Analysis and Forecasting to make scientific predictions based on historical time-stamped data with the help of the AutoRegression algorithm to make predictions. The autoregressive model specifies that the output variable depends linearly on its previous values and a stochastic term. Thus, the model is in the form of a stochastic difference equation.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/AutoRegression.ipynb",
                        "keywords": "code template, time series forecasting, scientific predictions,historical time,autoregression,predictions",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearestcentroid-with-scale-&-polynomial-features"
                    },
                    {
                        "name": "FbProphet.ipynb",
                        "title": "Simple FbProphet",
                        "description": "This code template is for Time Series Analysis and Forecasting with the help of the FbProphet algorithm. The prophet is a procedure for forecasting time series data based on an additive model where non-linear trends are fit with yearly, weekly, and daily seasonality, plus holiday effects. It works best with time series having strong seasonal effects and several seasons of historical data. Prophet is robust to missing data and shifts in the trend and typically handles outliers well.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/FbProphet.ipynb",
                        "keywords": "code template, time series forecasting, scientific predictions, historical time,fbprophet,",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearestcentroid-with-scale-&-power-transformer"
                    },
                    {
                        "name": "HoltWintersExponentialSmoothing.ipynb",
                        "title": "Simple  Holt Winter\u00e2\u20ac\u2122s Exponential Smoothing",
                        "description": "This code template is for Time Series Analysis and Forecasting to make scientific predictions based on historical time-stamped data with the help of Simple Holt-Winters Exponential Smoothing. Holt-Winters Exponential Smoothing is used for forecasting time series data that exhibits both a trend and a seasonal variation.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/HoltWintersExponentialSmoothing.ipynb",
                        "keywords": "code template, time series forecasting, scientific predictions,historical time,simple holt,exponential smoothing",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearestcentroid-with-scale-&-quantile-transformer"
                    },
                    {
                        "name": "MovingAverage.ipynb",
                        "title": "Time Series Analysis using Moving Average",
                        "description": "This code template demonstrates Time Series Analysis and Forecasting with the help of the Moving Average algorithm to make predictions. The moving-average model specifies that the output variable is cross-correlated with a non-identical to itself a random variable.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/MovingAverage.ipynb",
                        "keywords": "code template, time series forecasting, scientific predictions,historical time, stamped data, ",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-standard-scaler"
                    },
                    {
                        "name": "SARIMA.ipynb",
                        "title": "Simple SARIMA",
                        "description": "This code template is for Time Series Analysis and Forecasting to make scientific predictions based on historical time-stamped data with the help of the Seasonal Autoregressive Integrated Moving Average(SARIMA) algorithm. An extension to ARIMA that supports the direct modelling of the seasonal component of the series is called SARIMA.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/SARIMA.ipynb",
                        "keywords": "code template, time series forecasting, scientific predictions,historical, time, stamped, data, help, sarima,Seasonal Autoregressive Integrated Moving Average, Seasonal data",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-standardscaler-and-polynomial-features"
                    },
                    {
                        "name": "SARIMAX.ipynb",
                        "title": "Simple SARIMAX",
                        "description": "This code template is for Time Series Analysis and Forecasting with the help of the Seasonal Auto-Regressive Integrated Moving Average with eXogenous factors(SARIMAX) algorithm. It can also deal with external effects. This feature of the model differs from other models",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/SARIMAX.ipynb",
                        "keywords": "code template, time series forecasting, scientific predictions,historical time, stamped data, sarimax,Seasonal Auto-Regressive Integrated Moving Average with eXogenous factors",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-standardscaler-and-powertransformer"
                    },
                    {
                        "name": "Simple_Exponential_Smoothing.ipynb",
                        "title": "Simple Exponential Smoothing",
                        "description": "This code template is for Time Series Analysis and Forecasting with the help of Exponential Smoothing. Exponential smoothing is a time series forecasting method for univariate data that can be extended to support data with a systematic trend or seasonal component. It is a powerful forecasting method as an alternative to the popular Box-Jenkins ARIMA family of methods.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/Simple_Exponential_Smoothing.ipynb",
                        "keywords": "code template, time series forecasting, scientific predictions,historical time, simple exponential smoothing",
                        "display_url": "https://siberian.dev/classification/nearest-centroid/nearest-centroid-classification-with-standardscaler-and-quantiletransformer"
                    },
                    {
                        "name": "VAR.ipynb",
                        "title": "Simple Vector Autoregression",
                        "description": "This code template is for Time Series Analysis and Forecasting to make scientific predictions based on historical time stamped data with the help of Vector Autoregression(VAR) algorithm.Vector autoregression (VAR) is a statistical model used to capture the relationship between multiple quantities as they change over time.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/VAR.ipynb",
                        "keywords": "code template, time series forecasting, scientific predictions,historical time, stamped,var,Vector Autoregression",
                        "display_url": "https://siberian.dev/classification/other-ensemble/simple-stacking-classifier"
                    },
                    {
                        "name": "VARMA.ipynb",
                        "title": "Simple VARMA",
                        "description": "This code template is for Time Series Analysis and Forecasting to make scientific predictions based on historical time-stamped data with the help of the Vector Autoregressive Moving Average(VARMA) algorithm. The Vector Autoregressive Moving Average(VARMA) model is a combination of VAR and VMA models that helps in multivariate time series modeling by considering both lag order and order of moving average (p and q)in the model.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/VARMA.ipynb",
                        "keywords": "code template, time series forecasting, scientific predictions,historical time, stamped data,varma, Vector Autoregressive Moving Average",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/simple-radiusneighborsclassifier"
                    },
                    {
                        "name": "VARMAX.ipynb",
                        "title": "Simple VARMAX",
                        "description": "This code template is for Time Series Analysis and Forecasting to make scientific predictions based on historical time-stamped data with the help of the Vector Autoregressive Moving Average model with exogenous variables(VARMAX) algorithm. The model includes both the dynamic relationship between the multiple response variables and the relationship between the dependent and independent variables.",
                        "URL": "https://cdn.siberian.dev/code/Time_Series_Analysis/Time_Series_Forecasting/VARMAX.ipynb",
                        "keywords": "code template, time series forecasting, scientific predictions,historical time, stamped data, varmax, Vector Autoregressive Moving Average model with eXogenous variables,",
                        "display_url": "https://siberian.dev/classification/radius-neighbors/radiusneighborsclassifier-with-maxabsscaler-and-polynomialfeatures"
                    }
                ]
            }
        ]
    }
]